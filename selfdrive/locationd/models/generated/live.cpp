#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7754977390746696237) {
   out_7754977390746696237[0] = 0;
   out_7754977390746696237[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7754977390746696237[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7754977390746696237[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7754977390746696237[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7754977390746696237[5] = -sin(in_vec[1]);
   out_7754977390746696237[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7754977390746696237[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7754977390746696237[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7754977390746696237[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7754977390746696237[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7754977390746696237[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7754977390746696237[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7754977390746696237[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7754977390746696237[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7754977390746696237[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7754977390746696237[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7754977390746696237[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4634088626259696784) {
   out_4634088626259696784[0] = delta_x[0] + nom_x[0];
   out_4634088626259696784[1] = delta_x[1] + nom_x[1];
   out_4634088626259696784[2] = delta_x[2] + nom_x[2];
   out_4634088626259696784[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4634088626259696784[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4634088626259696784[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4634088626259696784[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4634088626259696784[7] = delta_x[6] + nom_x[7];
   out_4634088626259696784[8] = delta_x[7] + nom_x[8];
   out_4634088626259696784[9] = delta_x[8] + nom_x[9];
   out_4634088626259696784[10] = delta_x[9] + nom_x[10];
   out_4634088626259696784[11] = delta_x[10] + nom_x[11];
   out_4634088626259696784[12] = delta_x[11] + nom_x[12];
   out_4634088626259696784[13] = delta_x[12] + nom_x[13];
   out_4634088626259696784[14] = delta_x[13] + nom_x[14];
   out_4634088626259696784[15] = delta_x[14] + nom_x[15];
   out_4634088626259696784[16] = delta_x[15] + nom_x[16];
   out_4634088626259696784[17] = delta_x[16] + nom_x[17];
   out_4634088626259696784[18] = delta_x[17] + nom_x[18];
   out_4634088626259696784[19] = delta_x[18] + nom_x[19];
   out_4634088626259696784[20] = delta_x[19] + nom_x[20];
   out_4634088626259696784[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5965918245666346755) {
   out_5965918245666346755[0] = -nom_x[0] + true_x[0];
   out_5965918245666346755[1] = -nom_x[1] + true_x[1];
   out_5965918245666346755[2] = -nom_x[2] + true_x[2];
   out_5965918245666346755[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5965918245666346755[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5965918245666346755[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5965918245666346755[6] = -nom_x[7] + true_x[7];
   out_5965918245666346755[7] = -nom_x[8] + true_x[8];
   out_5965918245666346755[8] = -nom_x[9] + true_x[9];
   out_5965918245666346755[9] = -nom_x[10] + true_x[10];
   out_5965918245666346755[10] = -nom_x[11] + true_x[11];
   out_5965918245666346755[11] = -nom_x[12] + true_x[12];
   out_5965918245666346755[12] = -nom_x[13] + true_x[13];
   out_5965918245666346755[13] = -nom_x[14] + true_x[14];
   out_5965918245666346755[14] = -nom_x[15] + true_x[15];
   out_5965918245666346755[15] = -nom_x[16] + true_x[16];
   out_5965918245666346755[16] = -nom_x[17] + true_x[17];
   out_5965918245666346755[17] = -nom_x[18] + true_x[18];
   out_5965918245666346755[18] = -nom_x[19] + true_x[19];
   out_5965918245666346755[19] = -nom_x[20] + true_x[20];
   out_5965918245666346755[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1587006458605850644) {
   out_1587006458605850644[0] = 1.0;
   out_1587006458605850644[1] = 0;
   out_1587006458605850644[2] = 0;
   out_1587006458605850644[3] = 0;
   out_1587006458605850644[4] = 0;
   out_1587006458605850644[5] = 0;
   out_1587006458605850644[6] = 0;
   out_1587006458605850644[7] = 0;
   out_1587006458605850644[8] = 0;
   out_1587006458605850644[9] = 0;
   out_1587006458605850644[10] = 0;
   out_1587006458605850644[11] = 0;
   out_1587006458605850644[12] = 0;
   out_1587006458605850644[13] = 0;
   out_1587006458605850644[14] = 0;
   out_1587006458605850644[15] = 0;
   out_1587006458605850644[16] = 0;
   out_1587006458605850644[17] = 0;
   out_1587006458605850644[18] = 0;
   out_1587006458605850644[19] = 0;
   out_1587006458605850644[20] = 0;
   out_1587006458605850644[21] = 0;
   out_1587006458605850644[22] = 1.0;
   out_1587006458605850644[23] = 0;
   out_1587006458605850644[24] = 0;
   out_1587006458605850644[25] = 0;
   out_1587006458605850644[26] = 0;
   out_1587006458605850644[27] = 0;
   out_1587006458605850644[28] = 0;
   out_1587006458605850644[29] = 0;
   out_1587006458605850644[30] = 0;
   out_1587006458605850644[31] = 0;
   out_1587006458605850644[32] = 0;
   out_1587006458605850644[33] = 0;
   out_1587006458605850644[34] = 0;
   out_1587006458605850644[35] = 0;
   out_1587006458605850644[36] = 0;
   out_1587006458605850644[37] = 0;
   out_1587006458605850644[38] = 0;
   out_1587006458605850644[39] = 0;
   out_1587006458605850644[40] = 0;
   out_1587006458605850644[41] = 0;
   out_1587006458605850644[42] = 0;
   out_1587006458605850644[43] = 0;
   out_1587006458605850644[44] = 1.0;
   out_1587006458605850644[45] = 0;
   out_1587006458605850644[46] = 0;
   out_1587006458605850644[47] = 0;
   out_1587006458605850644[48] = 0;
   out_1587006458605850644[49] = 0;
   out_1587006458605850644[50] = 0;
   out_1587006458605850644[51] = 0;
   out_1587006458605850644[52] = 0;
   out_1587006458605850644[53] = 0;
   out_1587006458605850644[54] = 0;
   out_1587006458605850644[55] = 0;
   out_1587006458605850644[56] = 0;
   out_1587006458605850644[57] = 0;
   out_1587006458605850644[58] = 0;
   out_1587006458605850644[59] = 0;
   out_1587006458605850644[60] = 0;
   out_1587006458605850644[61] = 0;
   out_1587006458605850644[62] = 0;
   out_1587006458605850644[63] = 0;
   out_1587006458605850644[64] = 0;
   out_1587006458605850644[65] = 0;
   out_1587006458605850644[66] = -0.5*state[4];
   out_1587006458605850644[67] = -0.5*state[5];
   out_1587006458605850644[68] = -0.5*state[6];
   out_1587006458605850644[69] = 0;
   out_1587006458605850644[70] = 0;
   out_1587006458605850644[71] = 0;
   out_1587006458605850644[72] = 0;
   out_1587006458605850644[73] = 0;
   out_1587006458605850644[74] = 0;
   out_1587006458605850644[75] = 0;
   out_1587006458605850644[76] = 0;
   out_1587006458605850644[77] = 0;
   out_1587006458605850644[78] = 0;
   out_1587006458605850644[79] = 0;
   out_1587006458605850644[80] = 0;
   out_1587006458605850644[81] = 0;
   out_1587006458605850644[82] = 0;
   out_1587006458605850644[83] = 0;
   out_1587006458605850644[84] = 0;
   out_1587006458605850644[85] = 0;
   out_1587006458605850644[86] = 0;
   out_1587006458605850644[87] = 0.5*state[3];
   out_1587006458605850644[88] = 0.5*state[6];
   out_1587006458605850644[89] = -0.5*state[5];
   out_1587006458605850644[90] = 0;
   out_1587006458605850644[91] = 0;
   out_1587006458605850644[92] = 0;
   out_1587006458605850644[93] = 0;
   out_1587006458605850644[94] = 0;
   out_1587006458605850644[95] = 0;
   out_1587006458605850644[96] = 0;
   out_1587006458605850644[97] = 0;
   out_1587006458605850644[98] = 0;
   out_1587006458605850644[99] = 0;
   out_1587006458605850644[100] = 0;
   out_1587006458605850644[101] = 0;
   out_1587006458605850644[102] = 0;
   out_1587006458605850644[103] = 0;
   out_1587006458605850644[104] = 0;
   out_1587006458605850644[105] = 0;
   out_1587006458605850644[106] = 0;
   out_1587006458605850644[107] = 0;
   out_1587006458605850644[108] = -0.5*state[6];
   out_1587006458605850644[109] = 0.5*state[3];
   out_1587006458605850644[110] = 0.5*state[4];
   out_1587006458605850644[111] = 0;
   out_1587006458605850644[112] = 0;
   out_1587006458605850644[113] = 0;
   out_1587006458605850644[114] = 0;
   out_1587006458605850644[115] = 0;
   out_1587006458605850644[116] = 0;
   out_1587006458605850644[117] = 0;
   out_1587006458605850644[118] = 0;
   out_1587006458605850644[119] = 0;
   out_1587006458605850644[120] = 0;
   out_1587006458605850644[121] = 0;
   out_1587006458605850644[122] = 0;
   out_1587006458605850644[123] = 0;
   out_1587006458605850644[124] = 0;
   out_1587006458605850644[125] = 0;
   out_1587006458605850644[126] = 0;
   out_1587006458605850644[127] = 0;
   out_1587006458605850644[128] = 0;
   out_1587006458605850644[129] = 0.5*state[5];
   out_1587006458605850644[130] = -0.5*state[4];
   out_1587006458605850644[131] = 0.5*state[3];
   out_1587006458605850644[132] = 0;
   out_1587006458605850644[133] = 0;
   out_1587006458605850644[134] = 0;
   out_1587006458605850644[135] = 0;
   out_1587006458605850644[136] = 0;
   out_1587006458605850644[137] = 0;
   out_1587006458605850644[138] = 0;
   out_1587006458605850644[139] = 0;
   out_1587006458605850644[140] = 0;
   out_1587006458605850644[141] = 0;
   out_1587006458605850644[142] = 0;
   out_1587006458605850644[143] = 0;
   out_1587006458605850644[144] = 0;
   out_1587006458605850644[145] = 0;
   out_1587006458605850644[146] = 0;
   out_1587006458605850644[147] = 0;
   out_1587006458605850644[148] = 0;
   out_1587006458605850644[149] = 0;
   out_1587006458605850644[150] = 0;
   out_1587006458605850644[151] = 0;
   out_1587006458605850644[152] = 0;
   out_1587006458605850644[153] = 1.0;
   out_1587006458605850644[154] = 0;
   out_1587006458605850644[155] = 0;
   out_1587006458605850644[156] = 0;
   out_1587006458605850644[157] = 0;
   out_1587006458605850644[158] = 0;
   out_1587006458605850644[159] = 0;
   out_1587006458605850644[160] = 0;
   out_1587006458605850644[161] = 0;
   out_1587006458605850644[162] = 0;
   out_1587006458605850644[163] = 0;
   out_1587006458605850644[164] = 0;
   out_1587006458605850644[165] = 0;
   out_1587006458605850644[166] = 0;
   out_1587006458605850644[167] = 0;
   out_1587006458605850644[168] = 0;
   out_1587006458605850644[169] = 0;
   out_1587006458605850644[170] = 0;
   out_1587006458605850644[171] = 0;
   out_1587006458605850644[172] = 0;
   out_1587006458605850644[173] = 0;
   out_1587006458605850644[174] = 0;
   out_1587006458605850644[175] = 1.0;
   out_1587006458605850644[176] = 0;
   out_1587006458605850644[177] = 0;
   out_1587006458605850644[178] = 0;
   out_1587006458605850644[179] = 0;
   out_1587006458605850644[180] = 0;
   out_1587006458605850644[181] = 0;
   out_1587006458605850644[182] = 0;
   out_1587006458605850644[183] = 0;
   out_1587006458605850644[184] = 0;
   out_1587006458605850644[185] = 0;
   out_1587006458605850644[186] = 0;
   out_1587006458605850644[187] = 0;
   out_1587006458605850644[188] = 0;
   out_1587006458605850644[189] = 0;
   out_1587006458605850644[190] = 0;
   out_1587006458605850644[191] = 0;
   out_1587006458605850644[192] = 0;
   out_1587006458605850644[193] = 0;
   out_1587006458605850644[194] = 0;
   out_1587006458605850644[195] = 0;
   out_1587006458605850644[196] = 0;
   out_1587006458605850644[197] = 1.0;
   out_1587006458605850644[198] = 0;
   out_1587006458605850644[199] = 0;
   out_1587006458605850644[200] = 0;
   out_1587006458605850644[201] = 0;
   out_1587006458605850644[202] = 0;
   out_1587006458605850644[203] = 0;
   out_1587006458605850644[204] = 0;
   out_1587006458605850644[205] = 0;
   out_1587006458605850644[206] = 0;
   out_1587006458605850644[207] = 0;
   out_1587006458605850644[208] = 0;
   out_1587006458605850644[209] = 0;
   out_1587006458605850644[210] = 0;
   out_1587006458605850644[211] = 0;
   out_1587006458605850644[212] = 0;
   out_1587006458605850644[213] = 0;
   out_1587006458605850644[214] = 0;
   out_1587006458605850644[215] = 0;
   out_1587006458605850644[216] = 0;
   out_1587006458605850644[217] = 0;
   out_1587006458605850644[218] = 0;
   out_1587006458605850644[219] = 1.0;
   out_1587006458605850644[220] = 0;
   out_1587006458605850644[221] = 0;
   out_1587006458605850644[222] = 0;
   out_1587006458605850644[223] = 0;
   out_1587006458605850644[224] = 0;
   out_1587006458605850644[225] = 0;
   out_1587006458605850644[226] = 0;
   out_1587006458605850644[227] = 0;
   out_1587006458605850644[228] = 0;
   out_1587006458605850644[229] = 0;
   out_1587006458605850644[230] = 0;
   out_1587006458605850644[231] = 0;
   out_1587006458605850644[232] = 0;
   out_1587006458605850644[233] = 0;
   out_1587006458605850644[234] = 0;
   out_1587006458605850644[235] = 0;
   out_1587006458605850644[236] = 0;
   out_1587006458605850644[237] = 0;
   out_1587006458605850644[238] = 0;
   out_1587006458605850644[239] = 0;
   out_1587006458605850644[240] = 0;
   out_1587006458605850644[241] = 1.0;
   out_1587006458605850644[242] = 0;
   out_1587006458605850644[243] = 0;
   out_1587006458605850644[244] = 0;
   out_1587006458605850644[245] = 0;
   out_1587006458605850644[246] = 0;
   out_1587006458605850644[247] = 0;
   out_1587006458605850644[248] = 0;
   out_1587006458605850644[249] = 0;
   out_1587006458605850644[250] = 0;
   out_1587006458605850644[251] = 0;
   out_1587006458605850644[252] = 0;
   out_1587006458605850644[253] = 0;
   out_1587006458605850644[254] = 0;
   out_1587006458605850644[255] = 0;
   out_1587006458605850644[256] = 0;
   out_1587006458605850644[257] = 0;
   out_1587006458605850644[258] = 0;
   out_1587006458605850644[259] = 0;
   out_1587006458605850644[260] = 0;
   out_1587006458605850644[261] = 0;
   out_1587006458605850644[262] = 0;
   out_1587006458605850644[263] = 1.0;
   out_1587006458605850644[264] = 0;
   out_1587006458605850644[265] = 0;
   out_1587006458605850644[266] = 0;
   out_1587006458605850644[267] = 0;
   out_1587006458605850644[268] = 0;
   out_1587006458605850644[269] = 0;
   out_1587006458605850644[270] = 0;
   out_1587006458605850644[271] = 0;
   out_1587006458605850644[272] = 0;
   out_1587006458605850644[273] = 0;
   out_1587006458605850644[274] = 0;
   out_1587006458605850644[275] = 0;
   out_1587006458605850644[276] = 0;
   out_1587006458605850644[277] = 0;
   out_1587006458605850644[278] = 0;
   out_1587006458605850644[279] = 0;
   out_1587006458605850644[280] = 0;
   out_1587006458605850644[281] = 0;
   out_1587006458605850644[282] = 0;
   out_1587006458605850644[283] = 0;
   out_1587006458605850644[284] = 0;
   out_1587006458605850644[285] = 1.0;
   out_1587006458605850644[286] = 0;
   out_1587006458605850644[287] = 0;
   out_1587006458605850644[288] = 0;
   out_1587006458605850644[289] = 0;
   out_1587006458605850644[290] = 0;
   out_1587006458605850644[291] = 0;
   out_1587006458605850644[292] = 0;
   out_1587006458605850644[293] = 0;
   out_1587006458605850644[294] = 0;
   out_1587006458605850644[295] = 0;
   out_1587006458605850644[296] = 0;
   out_1587006458605850644[297] = 0;
   out_1587006458605850644[298] = 0;
   out_1587006458605850644[299] = 0;
   out_1587006458605850644[300] = 0;
   out_1587006458605850644[301] = 0;
   out_1587006458605850644[302] = 0;
   out_1587006458605850644[303] = 0;
   out_1587006458605850644[304] = 0;
   out_1587006458605850644[305] = 0;
   out_1587006458605850644[306] = 0;
   out_1587006458605850644[307] = 1.0;
   out_1587006458605850644[308] = 0;
   out_1587006458605850644[309] = 0;
   out_1587006458605850644[310] = 0;
   out_1587006458605850644[311] = 0;
   out_1587006458605850644[312] = 0;
   out_1587006458605850644[313] = 0;
   out_1587006458605850644[314] = 0;
   out_1587006458605850644[315] = 0;
   out_1587006458605850644[316] = 0;
   out_1587006458605850644[317] = 0;
   out_1587006458605850644[318] = 0;
   out_1587006458605850644[319] = 0;
   out_1587006458605850644[320] = 0;
   out_1587006458605850644[321] = 0;
   out_1587006458605850644[322] = 0;
   out_1587006458605850644[323] = 0;
   out_1587006458605850644[324] = 0;
   out_1587006458605850644[325] = 0;
   out_1587006458605850644[326] = 0;
   out_1587006458605850644[327] = 0;
   out_1587006458605850644[328] = 0;
   out_1587006458605850644[329] = 1.0;
   out_1587006458605850644[330] = 0;
   out_1587006458605850644[331] = 0;
   out_1587006458605850644[332] = 0;
   out_1587006458605850644[333] = 0;
   out_1587006458605850644[334] = 0;
   out_1587006458605850644[335] = 0;
   out_1587006458605850644[336] = 0;
   out_1587006458605850644[337] = 0;
   out_1587006458605850644[338] = 0;
   out_1587006458605850644[339] = 0;
   out_1587006458605850644[340] = 0;
   out_1587006458605850644[341] = 0;
   out_1587006458605850644[342] = 0;
   out_1587006458605850644[343] = 0;
   out_1587006458605850644[344] = 0;
   out_1587006458605850644[345] = 0;
   out_1587006458605850644[346] = 0;
   out_1587006458605850644[347] = 0;
   out_1587006458605850644[348] = 0;
   out_1587006458605850644[349] = 0;
   out_1587006458605850644[350] = 0;
   out_1587006458605850644[351] = 1.0;
   out_1587006458605850644[352] = 0;
   out_1587006458605850644[353] = 0;
   out_1587006458605850644[354] = 0;
   out_1587006458605850644[355] = 0;
   out_1587006458605850644[356] = 0;
   out_1587006458605850644[357] = 0;
   out_1587006458605850644[358] = 0;
   out_1587006458605850644[359] = 0;
   out_1587006458605850644[360] = 0;
   out_1587006458605850644[361] = 0;
   out_1587006458605850644[362] = 0;
   out_1587006458605850644[363] = 0;
   out_1587006458605850644[364] = 0;
   out_1587006458605850644[365] = 0;
   out_1587006458605850644[366] = 0;
   out_1587006458605850644[367] = 0;
   out_1587006458605850644[368] = 0;
   out_1587006458605850644[369] = 0;
   out_1587006458605850644[370] = 0;
   out_1587006458605850644[371] = 0;
   out_1587006458605850644[372] = 0;
   out_1587006458605850644[373] = 1.0;
   out_1587006458605850644[374] = 0;
   out_1587006458605850644[375] = 0;
   out_1587006458605850644[376] = 0;
   out_1587006458605850644[377] = 0;
   out_1587006458605850644[378] = 0;
   out_1587006458605850644[379] = 0;
   out_1587006458605850644[380] = 0;
   out_1587006458605850644[381] = 0;
   out_1587006458605850644[382] = 0;
   out_1587006458605850644[383] = 0;
   out_1587006458605850644[384] = 0;
   out_1587006458605850644[385] = 0;
   out_1587006458605850644[386] = 0;
   out_1587006458605850644[387] = 0;
   out_1587006458605850644[388] = 0;
   out_1587006458605850644[389] = 0;
   out_1587006458605850644[390] = 0;
   out_1587006458605850644[391] = 0;
   out_1587006458605850644[392] = 0;
   out_1587006458605850644[393] = 0;
   out_1587006458605850644[394] = 0;
   out_1587006458605850644[395] = 1.0;
   out_1587006458605850644[396] = 0;
   out_1587006458605850644[397] = 0;
   out_1587006458605850644[398] = 0;
   out_1587006458605850644[399] = 0;
   out_1587006458605850644[400] = 0;
   out_1587006458605850644[401] = 0;
   out_1587006458605850644[402] = 0;
   out_1587006458605850644[403] = 0;
   out_1587006458605850644[404] = 0;
   out_1587006458605850644[405] = 0;
   out_1587006458605850644[406] = 0;
   out_1587006458605850644[407] = 0;
   out_1587006458605850644[408] = 0;
   out_1587006458605850644[409] = 0;
   out_1587006458605850644[410] = 0;
   out_1587006458605850644[411] = 0;
   out_1587006458605850644[412] = 0;
   out_1587006458605850644[413] = 0;
   out_1587006458605850644[414] = 0;
   out_1587006458605850644[415] = 0;
   out_1587006458605850644[416] = 0;
   out_1587006458605850644[417] = 1.0;
   out_1587006458605850644[418] = 0;
   out_1587006458605850644[419] = 0;
   out_1587006458605850644[420] = 0;
   out_1587006458605850644[421] = 0;
   out_1587006458605850644[422] = 0;
   out_1587006458605850644[423] = 0;
   out_1587006458605850644[424] = 0;
   out_1587006458605850644[425] = 0;
   out_1587006458605850644[426] = 0;
   out_1587006458605850644[427] = 0;
   out_1587006458605850644[428] = 0;
   out_1587006458605850644[429] = 0;
   out_1587006458605850644[430] = 0;
   out_1587006458605850644[431] = 0;
   out_1587006458605850644[432] = 0;
   out_1587006458605850644[433] = 0;
   out_1587006458605850644[434] = 0;
   out_1587006458605850644[435] = 0;
   out_1587006458605850644[436] = 0;
   out_1587006458605850644[437] = 0;
   out_1587006458605850644[438] = 0;
   out_1587006458605850644[439] = 1.0;
   out_1587006458605850644[440] = 0;
   out_1587006458605850644[441] = 0;
   out_1587006458605850644[442] = 0;
   out_1587006458605850644[443] = 0;
   out_1587006458605850644[444] = 0;
   out_1587006458605850644[445] = 0;
   out_1587006458605850644[446] = 0;
   out_1587006458605850644[447] = 0;
   out_1587006458605850644[448] = 0;
   out_1587006458605850644[449] = 0;
   out_1587006458605850644[450] = 0;
   out_1587006458605850644[451] = 0;
   out_1587006458605850644[452] = 0;
   out_1587006458605850644[453] = 0;
   out_1587006458605850644[454] = 0;
   out_1587006458605850644[455] = 0;
   out_1587006458605850644[456] = 0;
   out_1587006458605850644[457] = 0;
   out_1587006458605850644[458] = 0;
   out_1587006458605850644[459] = 0;
   out_1587006458605850644[460] = 0;
   out_1587006458605850644[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4914760753964681424) {
   out_4914760753964681424[0] = dt*state[7] + state[0];
   out_4914760753964681424[1] = dt*state[8] + state[1];
   out_4914760753964681424[2] = dt*state[9] + state[2];
   out_4914760753964681424[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4914760753964681424[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4914760753964681424[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4914760753964681424[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4914760753964681424[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4914760753964681424[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4914760753964681424[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4914760753964681424[10] = state[10];
   out_4914760753964681424[11] = state[11];
   out_4914760753964681424[12] = state[12];
   out_4914760753964681424[13] = state[13];
   out_4914760753964681424[14] = state[14];
   out_4914760753964681424[15] = state[15];
   out_4914760753964681424[16] = state[16];
   out_4914760753964681424[17] = state[17];
   out_4914760753964681424[18] = state[18];
   out_4914760753964681424[19] = state[19];
   out_4914760753964681424[20] = state[20];
   out_4914760753964681424[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7780560716312872727) {
   out_7780560716312872727[0] = 1;
   out_7780560716312872727[1] = 0;
   out_7780560716312872727[2] = 0;
   out_7780560716312872727[3] = 0;
   out_7780560716312872727[4] = 0;
   out_7780560716312872727[5] = 0;
   out_7780560716312872727[6] = dt;
   out_7780560716312872727[7] = 0;
   out_7780560716312872727[8] = 0;
   out_7780560716312872727[9] = 0;
   out_7780560716312872727[10] = 0;
   out_7780560716312872727[11] = 0;
   out_7780560716312872727[12] = 0;
   out_7780560716312872727[13] = 0;
   out_7780560716312872727[14] = 0;
   out_7780560716312872727[15] = 0;
   out_7780560716312872727[16] = 0;
   out_7780560716312872727[17] = 0;
   out_7780560716312872727[18] = 0;
   out_7780560716312872727[19] = 0;
   out_7780560716312872727[20] = 0;
   out_7780560716312872727[21] = 0;
   out_7780560716312872727[22] = 1;
   out_7780560716312872727[23] = 0;
   out_7780560716312872727[24] = 0;
   out_7780560716312872727[25] = 0;
   out_7780560716312872727[26] = 0;
   out_7780560716312872727[27] = 0;
   out_7780560716312872727[28] = dt;
   out_7780560716312872727[29] = 0;
   out_7780560716312872727[30] = 0;
   out_7780560716312872727[31] = 0;
   out_7780560716312872727[32] = 0;
   out_7780560716312872727[33] = 0;
   out_7780560716312872727[34] = 0;
   out_7780560716312872727[35] = 0;
   out_7780560716312872727[36] = 0;
   out_7780560716312872727[37] = 0;
   out_7780560716312872727[38] = 0;
   out_7780560716312872727[39] = 0;
   out_7780560716312872727[40] = 0;
   out_7780560716312872727[41] = 0;
   out_7780560716312872727[42] = 0;
   out_7780560716312872727[43] = 0;
   out_7780560716312872727[44] = 1;
   out_7780560716312872727[45] = 0;
   out_7780560716312872727[46] = 0;
   out_7780560716312872727[47] = 0;
   out_7780560716312872727[48] = 0;
   out_7780560716312872727[49] = 0;
   out_7780560716312872727[50] = dt;
   out_7780560716312872727[51] = 0;
   out_7780560716312872727[52] = 0;
   out_7780560716312872727[53] = 0;
   out_7780560716312872727[54] = 0;
   out_7780560716312872727[55] = 0;
   out_7780560716312872727[56] = 0;
   out_7780560716312872727[57] = 0;
   out_7780560716312872727[58] = 0;
   out_7780560716312872727[59] = 0;
   out_7780560716312872727[60] = 0;
   out_7780560716312872727[61] = 0;
   out_7780560716312872727[62] = 0;
   out_7780560716312872727[63] = 0;
   out_7780560716312872727[64] = 0;
   out_7780560716312872727[65] = 0;
   out_7780560716312872727[66] = 1;
   out_7780560716312872727[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7780560716312872727[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7780560716312872727[69] = 0;
   out_7780560716312872727[70] = 0;
   out_7780560716312872727[71] = 0;
   out_7780560716312872727[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7780560716312872727[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7780560716312872727[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7780560716312872727[75] = 0;
   out_7780560716312872727[76] = 0;
   out_7780560716312872727[77] = 0;
   out_7780560716312872727[78] = 0;
   out_7780560716312872727[79] = 0;
   out_7780560716312872727[80] = 0;
   out_7780560716312872727[81] = 0;
   out_7780560716312872727[82] = 0;
   out_7780560716312872727[83] = 0;
   out_7780560716312872727[84] = 0;
   out_7780560716312872727[85] = 0;
   out_7780560716312872727[86] = 0;
   out_7780560716312872727[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7780560716312872727[88] = 1;
   out_7780560716312872727[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7780560716312872727[90] = 0;
   out_7780560716312872727[91] = 0;
   out_7780560716312872727[92] = 0;
   out_7780560716312872727[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7780560716312872727[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7780560716312872727[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7780560716312872727[96] = 0;
   out_7780560716312872727[97] = 0;
   out_7780560716312872727[98] = 0;
   out_7780560716312872727[99] = 0;
   out_7780560716312872727[100] = 0;
   out_7780560716312872727[101] = 0;
   out_7780560716312872727[102] = 0;
   out_7780560716312872727[103] = 0;
   out_7780560716312872727[104] = 0;
   out_7780560716312872727[105] = 0;
   out_7780560716312872727[106] = 0;
   out_7780560716312872727[107] = 0;
   out_7780560716312872727[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7780560716312872727[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7780560716312872727[110] = 1;
   out_7780560716312872727[111] = 0;
   out_7780560716312872727[112] = 0;
   out_7780560716312872727[113] = 0;
   out_7780560716312872727[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7780560716312872727[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7780560716312872727[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7780560716312872727[117] = 0;
   out_7780560716312872727[118] = 0;
   out_7780560716312872727[119] = 0;
   out_7780560716312872727[120] = 0;
   out_7780560716312872727[121] = 0;
   out_7780560716312872727[122] = 0;
   out_7780560716312872727[123] = 0;
   out_7780560716312872727[124] = 0;
   out_7780560716312872727[125] = 0;
   out_7780560716312872727[126] = 0;
   out_7780560716312872727[127] = 0;
   out_7780560716312872727[128] = 0;
   out_7780560716312872727[129] = 0;
   out_7780560716312872727[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7780560716312872727[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7780560716312872727[132] = 1;
   out_7780560716312872727[133] = 0;
   out_7780560716312872727[134] = 0;
   out_7780560716312872727[135] = 0;
   out_7780560716312872727[136] = 0;
   out_7780560716312872727[137] = 0;
   out_7780560716312872727[138] = 0;
   out_7780560716312872727[139] = 0;
   out_7780560716312872727[140] = 0;
   out_7780560716312872727[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7780560716312872727[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7780560716312872727[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7780560716312872727[144] = 0;
   out_7780560716312872727[145] = 0;
   out_7780560716312872727[146] = 0;
   out_7780560716312872727[147] = 0;
   out_7780560716312872727[148] = 0;
   out_7780560716312872727[149] = 0;
   out_7780560716312872727[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7780560716312872727[151] = 0;
   out_7780560716312872727[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7780560716312872727[153] = 0;
   out_7780560716312872727[154] = 1;
   out_7780560716312872727[155] = 0;
   out_7780560716312872727[156] = 0;
   out_7780560716312872727[157] = 0;
   out_7780560716312872727[158] = 0;
   out_7780560716312872727[159] = 0;
   out_7780560716312872727[160] = 0;
   out_7780560716312872727[161] = 0;
   out_7780560716312872727[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7780560716312872727[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7780560716312872727[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7780560716312872727[165] = 0;
   out_7780560716312872727[166] = 0;
   out_7780560716312872727[167] = 0;
   out_7780560716312872727[168] = 0;
   out_7780560716312872727[169] = 0;
   out_7780560716312872727[170] = 0;
   out_7780560716312872727[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7780560716312872727[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7780560716312872727[173] = 0;
   out_7780560716312872727[174] = 0;
   out_7780560716312872727[175] = 0;
   out_7780560716312872727[176] = 1;
   out_7780560716312872727[177] = 0;
   out_7780560716312872727[178] = 0;
   out_7780560716312872727[179] = 0;
   out_7780560716312872727[180] = 0;
   out_7780560716312872727[181] = 0;
   out_7780560716312872727[182] = 0;
   out_7780560716312872727[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7780560716312872727[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7780560716312872727[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7780560716312872727[186] = 0;
   out_7780560716312872727[187] = 0;
   out_7780560716312872727[188] = 0;
   out_7780560716312872727[189] = 0;
   out_7780560716312872727[190] = 0;
   out_7780560716312872727[191] = 0;
   out_7780560716312872727[192] = 0;
   out_7780560716312872727[193] = 0;
   out_7780560716312872727[194] = 0;
   out_7780560716312872727[195] = 0;
   out_7780560716312872727[196] = 0;
   out_7780560716312872727[197] = 0;
   out_7780560716312872727[198] = 1;
   out_7780560716312872727[199] = 0;
   out_7780560716312872727[200] = 0;
   out_7780560716312872727[201] = 0;
   out_7780560716312872727[202] = 0;
   out_7780560716312872727[203] = 0;
   out_7780560716312872727[204] = 0;
   out_7780560716312872727[205] = 0;
   out_7780560716312872727[206] = 0;
   out_7780560716312872727[207] = 0;
   out_7780560716312872727[208] = 0;
   out_7780560716312872727[209] = 0;
   out_7780560716312872727[210] = 0;
   out_7780560716312872727[211] = 0;
   out_7780560716312872727[212] = 0;
   out_7780560716312872727[213] = 0;
   out_7780560716312872727[214] = 0;
   out_7780560716312872727[215] = 0;
   out_7780560716312872727[216] = 0;
   out_7780560716312872727[217] = 0;
   out_7780560716312872727[218] = 0;
   out_7780560716312872727[219] = 0;
   out_7780560716312872727[220] = 1;
   out_7780560716312872727[221] = 0;
   out_7780560716312872727[222] = 0;
   out_7780560716312872727[223] = 0;
   out_7780560716312872727[224] = 0;
   out_7780560716312872727[225] = 0;
   out_7780560716312872727[226] = 0;
   out_7780560716312872727[227] = 0;
   out_7780560716312872727[228] = 0;
   out_7780560716312872727[229] = 0;
   out_7780560716312872727[230] = 0;
   out_7780560716312872727[231] = 0;
   out_7780560716312872727[232] = 0;
   out_7780560716312872727[233] = 0;
   out_7780560716312872727[234] = 0;
   out_7780560716312872727[235] = 0;
   out_7780560716312872727[236] = 0;
   out_7780560716312872727[237] = 0;
   out_7780560716312872727[238] = 0;
   out_7780560716312872727[239] = 0;
   out_7780560716312872727[240] = 0;
   out_7780560716312872727[241] = 0;
   out_7780560716312872727[242] = 1;
   out_7780560716312872727[243] = 0;
   out_7780560716312872727[244] = 0;
   out_7780560716312872727[245] = 0;
   out_7780560716312872727[246] = 0;
   out_7780560716312872727[247] = 0;
   out_7780560716312872727[248] = 0;
   out_7780560716312872727[249] = 0;
   out_7780560716312872727[250] = 0;
   out_7780560716312872727[251] = 0;
   out_7780560716312872727[252] = 0;
   out_7780560716312872727[253] = 0;
   out_7780560716312872727[254] = 0;
   out_7780560716312872727[255] = 0;
   out_7780560716312872727[256] = 0;
   out_7780560716312872727[257] = 0;
   out_7780560716312872727[258] = 0;
   out_7780560716312872727[259] = 0;
   out_7780560716312872727[260] = 0;
   out_7780560716312872727[261] = 0;
   out_7780560716312872727[262] = 0;
   out_7780560716312872727[263] = 0;
   out_7780560716312872727[264] = 1;
   out_7780560716312872727[265] = 0;
   out_7780560716312872727[266] = 0;
   out_7780560716312872727[267] = 0;
   out_7780560716312872727[268] = 0;
   out_7780560716312872727[269] = 0;
   out_7780560716312872727[270] = 0;
   out_7780560716312872727[271] = 0;
   out_7780560716312872727[272] = 0;
   out_7780560716312872727[273] = 0;
   out_7780560716312872727[274] = 0;
   out_7780560716312872727[275] = 0;
   out_7780560716312872727[276] = 0;
   out_7780560716312872727[277] = 0;
   out_7780560716312872727[278] = 0;
   out_7780560716312872727[279] = 0;
   out_7780560716312872727[280] = 0;
   out_7780560716312872727[281] = 0;
   out_7780560716312872727[282] = 0;
   out_7780560716312872727[283] = 0;
   out_7780560716312872727[284] = 0;
   out_7780560716312872727[285] = 0;
   out_7780560716312872727[286] = 1;
   out_7780560716312872727[287] = 0;
   out_7780560716312872727[288] = 0;
   out_7780560716312872727[289] = 0;
   out_7780560716312872727[290] = 0;
   out_7780560716312872727[291] = 0;
   out_7780560716312872727[292] = 0;
   out_7780560716312872727[293] = 0;
   out_7780560716312872727[294] = 0;
   out_7780560716312872727[295] = 0;
   out_7780560716312872727[296] = 0;
   out_7780560716312872727[297] = 0;
   out_7780560716312872727[298] = 0;
   out_7780560716312872727[299] = 0;
   out_7780560716312872727[300] = 0;
   out_7780560716312872727[301] = 0;
   out_7780560716312872727[302] = 0;
   out_7780560716312872727[303] = 0;
   out_7780560716312872727[304] = 0;
   out_7780560716312872727[305] = 0;
   out_7780560716312872727[306] = 0;
   out_7780560716312872727[307] = 0;
   out_7780560716312872727[308] = 1;
   out_7780560716312872727[309] = 0;
   out_7780560716312872727[310] = 0;
   out_7780560716312872727[311] = 0;
   out_7780560716312872727[312] = 0;
   out_7780560716312872727[313] = 0;
   out_7780560716312872727[314] = 0;
   out_7780560716312872727[315] = 0;
   out_7780560716312872727[316] = 0;
   out_7780560716312872727[317] = 0;
   out_7780560716312872727[318] = 0;
   out_7780560716312872727[319] = 0;
   out_7780560716312872727[320] = 0;
   out_7780560716312872727[321] = 0;
   out_7780560716312872727[322] = 0;
   out_7780560716312872727[323] = 0;
   out_7780560716312872727[324] = 0;
   out_7780560716312872727[325] = 0;
   out_7780560716312872727[326] = 0;
   out_7780560716312872727[327] = 0;
   out_7780560716312872727[328] = 0;
   out_7780560716312872727[329] = 0;
   out_7780560716312872727[330] = 1;
   out_7780560716312872727[331] = 0;
   out_7780560716312872727[332] = 0;
   out_7780560716312872727[333] = 0;
   out_7780560716312872727[334] = 0;
   out_7780560716312872727[335] = 0;
   out_7780560716312872727[336] = 0;
   out_7780560716312872727[337] = 0;
   out_7780560716312872727[338] = 0;
   out_7780560716312872727[339] = 0;
   out_7780560716312872727[340] = 0;
   out_7780560716312872727[341] = 0;
   out_7780560716312872727[342] = 0;
   out_7780560716312872727[343] = 0;
   out_7780560716312872727[344] = 0;
   out_7780560716312872727[345] = 0;
   out_7780560716312872727[346] = 0;
   out_7780560716312872727[347] = 0;
   out_7780560716312872727[348] = 0;
   out_7780560716312872727[349] = 0;
   out_7780560716312872727[350] = 0;
   out_7780560716312872727[351] = 0;
   out_7780560716312872727[352] = 1;
   out_7780560716312872727[353] = 0;
   out_7780560716312872727[354] = 0;
   out_7780560716312872727[355] = 0;
   out_7780560716312872727[356] = 0;
   out_7780560716312872727[357] = 0;
   out_7780560716312872727[358] = 0;
   out_7780560716312872727[359] = 0;
   out_7780560716312872727[360] = 0;
   out_7780560716312872727[361] = 0;
   out_7780560716312872727[362] = 0;
   out_7780560716312872727[363] = 0;
   out_7780560716312872727[364] = 0;
   out_7780560716312872727[365] = 0;
   out_7780560716312872727[366] = 0;
   out_7780560716312872727[367] = 0;
   out_7780560716312872727[368] = 0;
   out_7780560716312872727[369] = 0;
   out_7780560716312872727[370] = 0;
   out_7780560716312872727[371] = 0;
   out_7780560716312872727[372] = 0;
   out_7780560716312872727[373] = 0;
   out_7780560716312872727[374] = 1;
   out_7780560716312872727[375] = 0;
   out_7780560716312872727[376] = 0;
   out_7780560716312872727[377] = 0;
   out_7780560716312872727[378] = 0;
   out_7780560716312872727[379] = 0;
   out_7780560716312872727[380] = 0;
   out_7780560716312872727[381] = 0;
   out_7780560716312872727[382] = 0;
   out_7780560716312872727[383] = 0;
   out_7780560716312872727[384] = 0;
   out_7780560716312872727[385] = 0;
   out_7780560716312872727[386] = 0;
   out_7780560716312872727[387] = 0;
   out_7780560716312872727[388] = 0;
   out_7780560716312872727[389] = 0;
   out_7780560716312872727[390] = 0;
   out_7780560716312872727[391] = 0;
   out_7780560716312872727[392] = 0;
   out_7780560716312872727[393] = 0;
   out_7780560716312872727[394] = 0;
   out_7780560716312872727[395] = 0;
   out_7780560716312872727[396] = 1;
   out_7780560716312872727[397] = 0;
   out_7780560716312872727[398] = 0;
   out_7780560716312872727[399] = 0;
   out_7780560716312872727[400] = 0;
   out_7780560716312872727[401] = 0;
   out_7780560716312872727[402] = 0;
   out_7780560716312872727[403] = 0;
   out_7780560716312872727[404] = 0;
   out_7780560716312872727[405] = 0;
   out_7780560716312872727[406] = 0;
   out_7780560716312872727[407] = 0;
   out_7780560716312872727[408] = 0;
   out_7780560716312872727[409] = 0;
   out_7780560716312872727[410] = 0;
   out_7780560716312872727[411] = 0;
   out_7780560716312872727[412] = 0;
   out_7780560716312872727[413] = 0;
   out_7780560716312872727[414] = 0;
   out_7780560716312872727[415] = 0;
   out_7780560716312872727[416] = 0;
   out_7780560716312872727[417] = 0;
   out_7780560716312872727[418] = 1;
   out_7780560716312872727[419] = 0;
   out_7780560716312872727[420] = 0;
   out_7780560716312872727[421] = 0;
   out_7780560716312872727[422] = 0;
   out_7780560716312872727[423] = 0;
   out_7780560716312872727[424] = 0;
   out_7780560716312872727[425] = 0;
   out_7780560716312872727[426] = 0;
   out_7780560716312872727[427] = 0;
   out_7780560716312872727[428] = 0;
   out_7780560716312872727[429] = 0;
   out_7780560716312872727[430] = 0;
   out_7780560716312872727[431] = 0;
   out_7780560716312872727[432] = 0;
   out_7780560716312872727[433] = 0;
   out_7780560716312872727[434] = 0;
   out_7780560716312872727[435] = 0;
   out_7780560716312872727[436] = 0;
   out_7780560716312872727[437] = 0;
   out_7780560716312872727[438] = 0;
   out_7780560716312872727[439] = 0;
   out_7780560716312872727[440] = 1;
}
void h_4(double *state, double *unused, double *out_3388021826965404556) {
   out_3388021826965404556[0] = state[10] + state[13];
   out_3388021826965404556[1] = state[11] + state[14];
   out_3388021826965404556[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4125232642405651625) {
   out_4125232642405651625[0] = 0;
   out_4125232642405651625[1] = 0;
   out_4125232642405651625[2] = 0;
   out_4125232642405651625[3] = 0;
   out_4125232642405651625[4] = 0;
   out_4125232642405651625[5] = 0;
   out_4125232642405651625[6] = 0;
   out_4125232642405651625[7] = 0;
   out_4125232642405651625[8] = 0;
   out_4125232642405651625[9] = 0;
   out_4125232642405651625[10] = 1;
   out_4125232642405651625[11] = 0;
   out_4125232642405651625[12] = 0;
   out_4125232642405651625[13] = 1;
   out_4125232642405651625[14] = 0;
   out_4125232642405651625[15] = 0;
   out_4125232642405651625[16] = 0;
   out_4125232642405651625[17] = 0;
   out_4125232642405651625[18] = 0;
   out_4125232642405651625[19] = 0;
   out_4125232642405651625[20] = 0;
   out_4125232642405651625[21] = 0;
   out_4125232642405651625[22] = 0;
   out_4125232642405651625[23] = 0;
   out_4125232642405651625[24] = 0;
   out_4125232642405651625[25] = 0;
   out_4125232642405651625[26] = 0;
   out_4125232642405651625[27] = 0;
   out_4125232642405651625[28] = 0;
   out_4125232642405651625[29] = 0;
   out_4125232642405651625[30] = 0;
   out_4125232642405651625[31] = 0;
   out_4125232642405651625[32] = 0;
   out_4125232642405651625[33] = 1;
   out_4125232642405651625[34] = 0;
   out_4125232642405651625[35] = 0;
   out_4125232642405651625[36] = 1;
   out_4125232642405651625[37] = 0;
   out_4125232642405651625[38] = 0;
   out_4125232642405651625[39] = 0;
   out_4125232642405651625[40] = 0;
   out_4125232642405651625[41] = 0;
   out_4125232642405651625[42] = 0;
   out_4125232642405651625[43] = 0;
   out_4125232642405651625[44] = 0;
   out_4125232642405651625[45] = 0;
   out_4125232642405651625[46] = 0;
   out_4125232642405651625[47] = 0;
   out_4125232642405651625[48] = 0;
   out_4125232642405651625[49] = 0;
   out_4125232642405651625[50] = 0;
   out_4125232642405651625[51] = 0;
   out_4125232642405651625[52] = 0;
   out_4125232642405651625[53] = 0;
   out_4125232642405651625[54] = 0;
   out_4125232642405651625[55] = 0;
   out_4125232642405651625[56] = 1;
   out_4125232642405651625[57] = 0;
   out_4125232642405651625[58] = 0;
   out_4125232642405651625[59] = 1;
   out_4125232642405651625[60] = 0;
   out_4125232642405651625[61] = 0;
   out_4125232642405651625[62] = 0;
   out_4125232642405651625[63] = 0;
   out_4125232642405651625[64] = 0;
   out_4125232642405651625[65] = 0;
}
void h_9(double *state, double *unused, double *out_245122373985030160) {
   out_245122373985030160[0] = state[10];
   out_245122373985030160[1] = state[11];
   out_245122373985030160[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7014094194685730967) {
   out_7014094194685730967[0] = 0;
   out_7014094194685730967[1] = 0;
   out_7014094194685730967[2] = 0;
   out_7014094194685730967[3] = 0;
   out_7014094194685730967[4] = 0;
   out_7014094194685730967[5] = 0;
   out_7014094194685730967[6] = 0;
   out_7014094194685730967[7] = 0;
   out_7014094194685730967[8] = 0;
   out_7014094194685730967[9] = 0;
   out_7014094194685730967[10] = 1;
   out_7014094194685730967[11] = 0;
   out_7014094194685730967[12] = 0;
   out_7014094194685730967[13] = 0;
   out_7014094194685730967[14] = 0;
   out_7014094194685730967[15] = 0;
   out_7014094194685730967[16] = 0;
   out_7014094194685730967[17] = 0;
   out_7014094194685730967[18] = 0;
   out_7014094194685730967[19] = 0;
   out_7014094194685730967[20] = 0;
   out_7014094194685730967[21] = 0;
   out_7014094194685730967[22] = 0;
   out_7014094194685730967[23] = 0;
   out_7014094194685730967[24] = 0;
   out_7014094194685730967[25] = 0;
   out_7014094194685730967[26] = 0;
   out_7014094194685730967[27] = 0;
   out_7014094194685730967[28] = 0;
   out_7014094194685730967[29] = 0;
   out_7014094194685730967[30] = 0;
   out_7014094194685730967[31] = 0;
   out_7014094194685730967[32] = 0;
   out_7014094194685730967[33] = 1;
   out_7014094194685730967[34] = 0;
   out_7014094194685730967[35] = 0;
   out_7014094194685730967[36] = 0;
   out_7014094194685730967[37] = 0;
   out_7014094194685730967[38] = 0;
   out_7014094194685730967[39] = 0;
   out_7014094194685730967[40] = 0;
   out_7014094194685730967[41] = 0;
   out_7014094194685730967[42] = 0;
   out_7014094194685730967[43] = 0;
   out_7014094194685730967[44] = 0;
   out_7014094194685730967[45] = 0;
   out_7014094194685730967[46] = 0;
   out_7014094194685730967[47] = 0;
   out_7014094194685730967[48] = 0;
   out_7014094194685730967[49] = 0;
   out_7014094194685730967[50] = 0;
   out_7014094194685730967[51] = 0;
   out_7014094194685730967[52] = 0;
   out_7014094194685730967[53] = 0;
   out_7014094194685730967[54] = 0;
   out_7014094194685730967[55] = 0;
   out_7014094194685730967[56] = 1;
   out_7014094194685730967[57] = 0;
   out_7014094194685730967[58] = 0;
   out_7014094194685730967[59] = 0;
   out_7014094194685730967[60] = 0;
   out_7014094194685730967[61] = 0;
   out_7014094194685730967[62] = 0;
   out_7014094194685730967[63] = 0;
   out_7014094194685730967[64] = 0;
   out_7014094194685730967[65] = 0;
}
void h_10(double *state, double *unused, double *out_5858231770917734999) {
   out_5858231770917734999[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5858231770917734999[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5858231770917734999[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7714636433449217425) {
   out_7714636433449217425[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7714636433449217425[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7714636433449217425[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7714636433449217425[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7714636433449217425[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7714636433449217425[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7714636433449217425[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7714636433449217425[7] = 0;
   out_7714636433449217425[8] = 0;
   out_7714636433449217425[9] = 0;
   out_7714636433449217425[10] = 0;
   out_7714636433449217425[11] = 0;
   out_7714636433449217425[12] = 0;
   out_7714636433449217425[13] = 0;
   out_7714636433449217425[14] = 0;
   out_7714636433449217425[15] = 0;
   out_7714636433449217425[16] = 1;
   out_7714636433449217425[17] = 0;
   out_7714636433449217425[18] = 0;
   out_7714636433449217425[19] = 1;
   out_7714636433449217425[20] = 0;
   out_7714636433449217425[21] = 0;
   out_7714636433449217425[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7714636433449217425[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7714636433449217425[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7714636433449217425[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7714636433449217425[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7714636433449217425[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7714636433449217425[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7714636433449217425[29] = 0;
   out_7714636433449217425[30] = 0;
   out_7714636433449217425[31] = 0;
   out_7714636433449217425[32] = 0;
   out_7714636433449217425[33] = 0;
   out_7714636433449217425[34] = 0;
   out_7714636433449217425[35] = 0;
   out_7714636433449217425[36] = 0;
   out_7714636433449217425[37] = 0;
   out_7714636433449217425[38] = 0;
   out_7714636433449217425[39] = 1;
   out_7714636433449217425[40] = 0;
   out_7714636433449217425[41] = 0;
   out_7714636433449217425[42] = 1;
   out_7714636433449217425[43] = 0;
   out_7714636433449217425[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7714636433449217425[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7714636433449217425[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7714636433449217425[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7714636433449217425[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7714636433449217425[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7714636433449217425[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7714636433449217425[51] = 0;
   out_7714636433449217425[52] = 0;
   out_7714636433449217425[53] = 0;
   out_7714636433449217425[54] = 0;
   out_7714636433449217425[55] = 0;
   out_7714636433449217425[56] = 0;
   out_7714636433449217425[57] = 0;
   out_7714636433449217425[58] = 0;
   out_7714636433449217425[59] = 0;
   out_7714636433449217425[60] = 0;
   out_7714636433449217425[61] = 0;
   out_7714636433449217425[62] = 1;
   out_7714636433449217425[63] = 0;
   out_7714636433449217425[64] = 0;
   out_7714636433449217425[65] = 1;
}
void h_12(double *state, double *unused, double *out_1034480534582445047) {
   out_1034480534582445047[0] = state[0];
   out_1034480534582445047[1] = state[1];
   out_1034480534582445047[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6654383117621449499) {
   out_6654383117621449499[0] = 1;
   out_6654383117621449499[1] = 0;
   out_6654383117621449499[2] = 0;
   out_6654383117621449499[3] = 0;
   out_6654383117621449499[4] = 0;
   out_6654383117621449499[5] = 0;
   out_6654383117621449499[6] = 0;
   out_6654383117621449499[7] = 0;
   out_6654383117621449499[8] = 0;
   out_6654383117621449499[9] = 0;
   out_6654383117621449499[10] = 0;
   out_6654383117621449499[11] = 0;
   out_6654383117621449499[12] = 0;
   out_6654383117621449499[13] = 0;
   out_6654383117621449499[14] = 0;
   out_6654383117621449499[15] = 0;
   out_6654383117621449499[16] = 0;
   out_6654383117621449499[17] = 0;
   out_6654383117621449499[18] = 0;
   out_6654383117621449499[19] = 0;
   out_6654383117621449499[20] = 0;
   out_6654383117621449499[21] = 0;
   out_6654383117621449499[22] = 0;
   out_6654383117621449499[23] = 1;
   out_6654383117621449499[24] = 0;
   out_6654383117621449499[25] = 0;
   out_6654383117621449499[26] = 0;
   out_6654383117621449499[27] = 0;
   out_6654383117621449499[28] = 0;
   out_6654383117621449499[29] = 0;
   out_6654383117621449499[30] = 0;
   out_6654383117621449499[31] = 0;
   out_6654383117621449499[32] = 0;
   out_6654383117621449499[33] = 0;
   out_6654383117621449499[34] = 0;
   out_6654383117621449499[35] = 0;
   out_6654383117621449499[36] = 0;
   out_6654383117621449499[37] = 0;
   out_6654383117621449499[38] = 0;
   out_6654383117621449499[39] = 0;
   out_6654383117621449499[40] = 0;
   out_6654383117621449499[41] = 0;
   out_6654383117621449499[42] = 0;
   out_6654383117621449499[43] = 0;
   out_6654383117621449499[44] = 0;
   out_6654383117621449499[45] = 0;
   out_6654383117621449499[46] = 1;
   out_6654383117621449499[47] = 0;
   out_6654383117621449499[48] = 0;
   out_6654383117621449499[49] = 0;
   out_6654383117621449499[50] = 0;
   out_6654383117621449499[51] = 0;
   out_6654383117621449499[52] = 0;
   out_6654383117621449499[53] = 0;
   out_6654383117621449499[54] = 0;
   out_6654383117621449499[55] = 0;
   out_6654383117621449499[56] = 0;
   out_6654383117621449499[57] = 0;
   out_6654383117621449499[58] = 0;
   out_6654383117621449499[59] = 0;
   out_6654383117621449499[60] = 0;
   out_6654383117621449499[61] = 0;
   out_6654383117621449499[62] = 0;
   out_6654383117621449499[63] = 0;
   out_6654383117621449499[64] = 0;
   out_6654383117621449499[65] = 0;
}
void h_31(double *state, double *unused, double *out_5572486702525651784) {
   out_5572486702525651784[0] = state[7];
   out_5572486702525651784[1] = state[8];
   out_5572486702525651784[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7491894699778259001) {
   out_7491894699778259001[0] = 0;
   out_7491894699778259001[1] = 0;
   out_7491894699778259001[2] = 0;
   out_7491894699778259001[3] = 0;
   out_7491894699778259001[4] = 0;
   out_7491894699778259001[5] = 0;
   out_7491894699778259001[6] = 0;
   out_7491894699778259001[7] = 1;
   out_7491894699778259001[8] = 0;
   out_7491894699778259001[9] = 0;
   out_7491894699778259001[10] = 0;
   out_7491894699778259001[11] = 0;
   out_7491894699778259001[12] = 0;
   out_7491894699778259001[13] = 0;
   out_7491894699778259001[14] = 0;
   out_7491894699778259001[15] = 0;
   out_7491894699778259001[16] = 0;
   out_7491894699778259001[17] = 0;
   out_7491894699778259001[18] = 0;
   out_7491894699778259001[19] = 0;
   out_7491894699778259001[20] = 0;
   out_7491894699778259001[21] = 0;
   out_7491894699778259001[22] = 0;
   out_7491894699778259001[23] = 0;
   out_7491894699778259001[24] = 0;
   out_7491894699778259001[25] = 0;
   out_7491894699778259001[26] = 0;
   out_7491894699778259001[27] = 0;
   out_7491894699778259001[28] = 0;
   out_7491894699778259001[29] = 0;
   out_7491894699778259001[30] = 1;
   out_7491894699778259001[31] = 0;
   out_7491894699778259001[32] = 0;
   out_7491894699778259001[33] = 0;
   out_7491894699778259001[34] = 0;
   out_7491894699778259001[35] = 0;
   out_7491894699778259001[36] = 0;
   out_7491894699778259001[37] = 0;
   out_7491894699778259001[38] = 0;
   out_7491894699778259001[39] = 0;
   out_7491894699778259001[40] = 0;
   out_7491894699778259001[41] = 0;
   out_7491894699778259001[42] = 0;
   out_7491894699778259001[43] = 0;
   out_7491894699778259001[44] = 0;
   out_7491894699778259001[45] = 0;
   out_7491894699778259001[46] = 0;
   out_7491894699778259001[47] = 0;
   out_7491894699778259001[48] = 0;
   out_7491894699778259001[49] = 0;
   out_7491894699778259001[50] = 0;
   out_7491894699778259001[51] = 0;
   out_7491894699778259001[52] = 0;
   out_7491894699778259001[53] = 1;
   out_7491894699778259001[54] = 0;
   out_7491894699778259001[55] = 0;
   out_7491894699778259001[56] = 0;
   out_7491894699778259001[57] = 0;
   out_7491894699778259001[58] = 0;
   out_7491894699778259001[59] = 0;
   out_7491894699778259001[60] = 0;
   out_7491894699778259001[61] = 0;
   out_7491894699778259001[62] = 0;
   out_7491894699778259001[63] = 0;
   out_7491894699778259001[64] = 0;
   out_7491894699778259001[65] = 0;
}
void h_32(double *state, double *unused, double *out_1683432381118667639) {
   out_1683432381118667639[0] = state[3];
   out_1683432381118667639[1] = state[4];
   out_1683432381118667639[2] = state[5];
   out_1683432381118667639[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1693193560132731635) {
   out_1693193560132731635[0] = 0;
   out_1693193560132731635[1] = 0;
   out_1693193560132731635[2] = 0;
   out_1693193560132731635[3] = 1;
   out_1693193560132731635[4] = 0;
   out_1693193560132731635[5] = 0;
   out_1693193560132731635[6] = 0;
   out_1693193560132731635[7] = 0;
   out_1693193560132731635[8] = 0;
   out_1693193560132731635[9] = 0;
   out_1693193560132731635[10] = 0;
   out_1693193560132731635[11] = 0;
   out_1693193560132731635[12] = 0;
   out_1693193560132731635[13] = 0;
   out_1693193560132731635[14] = 0;
   out_1693193560132731635[15] = 0;
   out_1693193560132731635[16] = 0;
   out_1693193560132731635[17] = 0;
   out_1693193560132731635[18] = 0;
   out_1693193560132731635[19] = 0;
   out_1693193560132731635[20] = 0;
   out_1693193560132731635[21] = 0;
   out_1693193560132731635[22] = 0;
   out_1693193560132731635[23] = 0;
   out_1693193560132731635[24] = 0;
   out_1693193560132731635[25] = 0;
   out_1693193560132731635[26] = 1;
   out_1693193560132731635[27] = 0;
   out_1693193560132731635[28] = 0;
   out_1693193560132731635[29] = 0;
   out_1693193560132731635[30] = 0;
   out_1693193560132731635[31] = 0;
   out_1693193560132731635[32] = 0;
   out_1693193560132731635[33] = 0;
   out_1693193560132731635[34] = 0;
   out_1693193560132731635[35] = 0;
   out_1693193560132731635[36] = 0;
   out_1693193560132731635[37] = 0;
   out_1693193560132731635[38] = 0;
   out_1693193560132731635[39] = 0;
   out_1693193560132731635[40] = 0;
   out_1693193560132731635[41] = 0;
   out_1693193560132731635[42] = 0;
   out_1693193560132731635[43] = 0;
   out_1693193560132731635[44] = 0;
   out_1693193560132731635[45] = 0;
   out_1693193560132731635[46] = 0;
   out_1693193560132731635[47] = 0;
   out_1693193560132731635[48] = 0;
   out_1693193560132731635[49] = 1;
   out_1693193560132731635[50] = 0;
   out_1693193560132731635[51] = 0;
   out_1693193560132731635[52] = 0;
   out_1693193560132731635[53] = 0;
   out_1693193560132731635[54] = 0;
   out_1693193560132731635[55] = 0;
   out_1693193560132731635[56] = 0;
   out_1693193560132731635[57] = 0;
   out_1693193560132731635[58] = 0;
   out_1693193560132731635[59] = 0;
   out_1693193560132731635[60] = 0;
   out_1693193560132731635[61] = 0;
   out_1693193560132731635[62] = 0;
   out_1693193560132731635[63] = 0;
   out_1693193560132731635[64] = 0;
   out_1693193560132731635[65] = 0;
   out_1693193560132731635[66] = 0;
   out_1693193560132731635[67] = 0;
   out_1693193560132731635[68] = 0;
   out_1693193560132731635[69] = 0;
   out_1693193560132731635[70] = 0;
   out_1693193560132731635[71] = 0;
   out_1693193560132731635[72] = 1;
   out_1693193560132731635[73] = 0;
   out_1693193560132731635[74] = 0;
   out_1693193560132731635[75] = 0;
   out_1693193560132731635[76] = 0;
   out_1693193560132731635[77] = 0;
   out_1693193560132731635[78] = 0;
   out_1693193560132731635[79] = 0;
   out_1693193560132731635[80] = 0;
   out_1693193560132731635[81] = 0;
   out_1693193560132731635[82] = 0;
   out_1693193560132731635[83] = 0;
   out_1693193560132731635[84] = 0;
   out_1693193560132731635[85] = 0;
   out_1693193560132731635[86] = 0;
   out_1693193560132731635[87] = 0;
}
void h_13(double *state, double *unused, double *out_4338524068000511598) {
   out_4338524068000511598[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4338524068000511598[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4338524068000511598[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7496923154941271419) {
   out_7496923154941271419[0] = 0;
   out_7496923154941271419[1] = 0;
   out_7496923154941271419[2] = 0;
   out_7496923154941271419[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7496923154941271419[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7496923154941271419[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7496923154941271419[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7496923154941271419[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7496923154941271419[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7496923154941271419[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7496923154941271419[10] = 0;
   out_7496923154941271419[11] = 0;
   out_7496923154941271419[12] = 0;
   out_7496923154941271419[13] = 0;
   out_7496923154941271419[14] = 0;
   out_7496923154941271419[15] = 0;
   out_7496923154941271419[16] = 0;
   out_7496923154941271419[17] = 0;
   out_7496923154941271419[18] = 0;
   out_7496923154941271419[19] = 0;
   out_7496923154941271419[20] = 0;
   out_7496923154941271419[21] = 0;
   out_7496923154941271419[22] = 0;
   out_7496923154941271419[23] = 0;
   out_7496923154941271419[24] = 0;
   out_7496923154941271419[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7496923154941271419[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7496923154941271419[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7496923154941271419[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7496923154941271419[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7496923154941271419[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7496923154941271419[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7496923154941271419[32] = 0;
   out_7496923154941271419[33] = 0;
   out_7496923154941271419[34] = 0;
   out_7496923154941271419[35] = 0;
   out_7496923154941271419[36] = 0;
   out_7496923154941271419[37] = 0;
   out_7496923154941271419[38] = 0;
   out_7496923154941271419[39] = 0;
   out_7496923154941271419[40] = 0;
   out_7496923154941271419[41] = 0;
   out_7496923154941271419[42] = 0;
   out_7496923154941271419[43] = 0;
   out_7496923154941271419[44] = 0;
   out_7496923154941271419[45] = 0;
   out_7496923154941271419[46] = 0;
   out_7496923154941271419[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7496923154941271419[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7496923154941271419[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7496923154941271419[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7496923154941271419[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7496923154941271419[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7496923154941271419[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7496923154941271419[54] = 0;
   out_7496923154941271419[55] = 0;
   out_7496923154941271419[56] = 0;
   out_7496923154941271419[57] = 0;
   out_7496923154941271419[58] = 0;
   out_7496923154941271419[59] = 0;
   out_7496923154941271419[60] = 0;
   out_7496923154941271419[61] = 0;
   out_7496923154941271419[62] = 0;
   out_7496923154941271419[63] = 0;
   out_7496923154941271419[64] = 0;
   out_7496923154941271419[65] = 0;
}
void h_14(double *state, double *unused, double *out_245122373985030160) {
   out_245122373985030160[0] = state[10];
   out_245122373985030160[1] = state[11];
   out_245122373985030160[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7014094194685730967) {
   out_7014094194685730967[0] = 0;
   out_7014094194685730967[1] = 0;
   out_7014094194685730967[2] = 0;
   out_7014094194685730967[3] = 0;
   out_7014094194685730967[4] = 0;
   out_7014094194685730967[5] = 0;
   out_7014094194685730967[6] = 0;
   out_7014094194685730967[7] = 0;
   out_7014094194685730967[8] = 0;
   out_7014094194685730967[9] = 0;
   out_7014094194685730967[10] = 1;
   out_7014094194685730967[11] = 0;
   out_7014094194685730967[12] = 0;
   out_7014094194685730967[13] = 0;
   out_7014094194685730967[14] = 0;
   out_7014094194685730967[15] = 0;
   out_7014094194685730967[16] = 0;
   out_7014094194685730967[17] = 0;
   out_7014094194685730967[18] = 0;
   out_7014094194685730967[19] = 0;
   out_7014094194685730967[20] = 0;
   out_7014094194685730967[21] = 0;
   out_7014094194685730967[22] = 0;
   out_7014094194685730967[23] = 0;
   out_7014094194685730967[24] = 0;
   out_7014094194685730967[25] = 0;
   out_7014094194685730967[26] = 0;
   out_7014094194685730967[27] = 0;
   out_7014094194685730967[28] = 0;
   out_7014094194685730967[29] = 0;
   out_7014094194685730967[30] = 0;
   out_7014094194685730967[31] = 0;
   out_7014094194685730967[32] = 0;
   out_7014094194685730967[33] = 1;
   out_7014094194685730967[34] = 0;
   out_7014094194685730967[35] = 0;
   out_7014094194685730967[36] = 0;
   out_7014094194685730967[37] = 0;
   out_7014094194685730967[38] = 0;
   out_7014094194685730967[39] = 0;
   out_7014094194685730967[40] = 0;
   out_7014094194685730967[41] = 0;
   out_7014094194685730967[42] = 0;
   out_7014094194685730967[43] = 0;
   out_7014094194685730967[44] = 0;
   out_7014094194685730967[45] = 0;
   out_7014094194685730967[46] = 0;
   out_7014094194685730967[47] = 0;
   out_7014094194685730967[48] = 0;
   out_7014094194685730967[49] = 0;
   out_7014094194685730967[50] = 0;
   out_7014094194685730967[51] = 0;
   out_7014094194685730967[52] = 0;
   out_7014094194685730967[53] = 0;
   out_7014094194685730967[54] = 0;
   out_7014094194685730967[55] = 0;
   out_7014094194685730967[56] = 1;
   out_7014094194685730967[57] = 0;
   out_7014094194685730967[58] = 0;
   out_7014094194685730967[59] = 0;
   out_7014094194685730967[60] = 0;
   out_7014094194685730967[61] = 0;
   out_7014094194685730967[62] = 0;
   out_7014094194685730967[63] = 0;
   out_7014094194685730967[64] = 0;
   out_7014094194685730967[65] = 0;
}
void h_33(double *state, double *unused, double *out_9185912846367836867) {
   out_9185912846367836867[0] = state[16];
   out_9185912846367836867[1] = state[17];
   out_9185912846367836867[2] = state[18];
}
void H_33(double *state, double *unused, double *out_758263080657578186) {
   out_758263080657578186[0] = 0;
   out_758263080657578186[1] = 0;
   out_758263080657578186[2] = 0;
   out_758263080657578186[3] = 0;
   out_758263080657578186[4] = 0;
   out_758263080657578186[5] = 0;
   out_758263080657578186[6] = 0;
   out_758263080657578186[7] = 0;
   out_758263080657578186[8] = 0;
   out_758263080657578186[9] = 0;
   out_758263080657578186[10] = 0;
   out_758263080657578186[11] = 0;
   out_758263080657578186[12] = 0;
   out_758263080657578186[13] = 0;
   out_758263080657578186[14] = 0;
   out_758263080657578186[15] = 0;
   out_758263080657578186[16] = 1;
   out_758263080657578186[17] = 0;
   out_758263080657578186[18] = 0;
   out_758263080657578186[19] = 0;
   out_758263080657578186[20] = 0;
   out_758263080657578186[21] = 0;
   out_758263080657578186[22] = 0;
   out_758263080657578186[23] = 0;
   out_758263080657578186[24] = 0;
   out_758263080657578186[25] = 0;
   out_758263080657578186[26] = 0;
   out_758263080657578186[27] = 0;
   out_758263080657578186[28] = 0;
   out_758263080657578186[29] = 0;
   out_758263080657578186[30] = 0;
   out_758263080657578186[31] = 0;
   out_758263080657578186[32] = 0;
   out_758263080657578186[33] = 0;
   out_758263080657578186[34] = 0;
   out_758263080657578186[35] = 0;
   out_758263080657578186[36] = 0;
   out_758263080657578186[37] = 0;
   out_758263080657578186[38] = 0;
   out_758263080657578186[39] = 1;
   out_758263080657578186[40] = 0;
   out_758263080657578186[41] = 0;
   out_758263080657578186[42] = 0;
   out_758263080657578186[43] = 0;
   out_758263080657578186[44] = 0;
   out_758263080657578186[45] = 0;
   out_758263080657578186[46] = 0;
   out_758263080657578186[47] = 0;
   out_758263080657578186[48] = 0;
   out_758263080657578186[49] = 0;
   out_758263080657578186[50] = 0;
   out_758263080657578186[51] = 0;
   out_758263080657578186[52] = 0;
   out_758263080657578186[53] = 0;
   out_758263080657578186[54] = 0;
   out_758263080657578186[55] = 0;
   out_758263080657578186[56] = 0;
   out_758263080657578186[57] = 0;
   out_758263080657578186[58] = 0;
   out_758263080657578186[59] = 0;
   out_758263080657578186[60] = 0;
   out_758263080657578186[61] = 0;
   out_758263080657578186[62] = 1;
   out_758263080657578186[63] = 0;
   out_758263080657578186[64] = 0;
   out_758263080657578186[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7754977390746696237) {
  H(in_vec, out_7754977390746696237);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4634088626259696784) {
  err_fun(nom_x, delta_x, out_4634088626259696784);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5965918245666346755) {
  inv_err_fun(nom_x, true_x, out_5965918245666346755);
}
void live_H_mod_fun(double *state, double *out_1587006458605850644) {
  H_mod_fun(state, out_1587006458605850644);
}
void live_f_fun(double *state, double dt, double *out_4914760753964681424) {
  f_fun(state,  dt, out_4914760753964681424);
}
void live_F_fun(double *state, double dt, double *out_7780560716312872727) {
  F_fun(state,  dt, out_7780560716312872727);
}
void live_h_4(double *state, double *unused, double *out_3388021826965404556) {
  h_4(state, unused, out_3388021826965404556);
}
void live_H_4(double *state, double *unused, double *out_4125232642405651625) {
  H_4(state, unused, out_4125232642405651625);
}
void live_h_9(double *state, double *unused, double *out_245122373985030160) {
  h_9(state, unused, out_245122373985030160);
}
void live_H_9(double *state, double *unused, double *out_7014094194685730967) {
  H_9(state, unused, out_7014094194685730967);
}
void live_h_10(double *state, double *unused, double *out_5858231770917734999) {
  h_10(state, unused, out_5858231770917734999);
}
void live_H_10(double *state, double *unused, double *out_7714636433449217425) {
  H_10(state, unused, out_7714636433449217425);
}
void live_h_12(double *state, double *unused, double *out_1034480534582445047) {
  h_12(state, unused, out_1034480534582445047);
}
void live_H_12(double *state, double *unused, double *out_6654383117621449499) {
  H_12(state, unused, out_6654383117621449499);
}
void live_h_31(double *state, double *unused, double *out_5572486702525651784) {
  h_31(state, unused, out_5572486702525651784);
}
void live_H_31(double *state, double *unused, double *out_7491894699778259001) {
  H_31(state, unused, out_7491894699778259001);
}
void live_h_32(double *state, double *unused, double *out_1683432381118667639) {
  h_32(state, unused, out_1683432381118667639);
}
void live_H_32(double *state, double *unused, double *out_1693193560132731635) {
  H_32(state, unused, out_1693193560132731635);
}
void live_h_13(double *state, double *unused, double *out_4338524068000511598) {
  h_13(state, unused, out_4338524068000511598);
}
void live_H_13(double *state, double *unused, double *out_7496923154941271419) {
  H_13(state, unused, out_7496923154941271419);
}
void live_h_14(double *state, double *unused, double *out_245122373985030160) {
  h_14(state, unused, out_245122373985030160);
}
void live_H_14(double *state, double *unused, double *out_7014094194685730967) {
  H_14(state, unused, out_7014094194685730967);
}
void live_h_33(double *state, double *unused, double *out_9185912846367836867) {
  h_33(state, unused, out_9185912846367836867);
}
void live_H_33(double *state, double *unused, double *out_758263080657578186) {
  H_33(state, unused, out_758263080657578186);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
