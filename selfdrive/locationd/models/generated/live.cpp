#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3425406721635510492) {
   out_3425406721635510492[0] = 0;
   out_3425406721635510492[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3425406721635510492[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3425406721635510492[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3425406721635510492[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3425406721635510492[5] = -sin(in_vec[1]);
   out_3425406721635510492[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3425406721635510492[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3425406721635510492[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3425406721635510492[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3425406721635510492[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3425406721635510492[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3425406721635510492[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3425406721635510492[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3425406721635510492[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3425406721635510492[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3425406721635510492[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3425406721635510492[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4797896270428806172) {
   out_4797896270428806172[0] = delta_x[0] + nom_x[0];
   out_4797896270428806172[1] = delta_x[1] + nom_x[1];
   out_4797896270428806172[2] = delta_x[2] + nom_x[2];
   out_4797896270428806172[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4797896270428806172[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4797896270428806172[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4797896270428806172[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4797896270428806172[7] = delta_x[6] + nom_x[7];
   out_4797896270428806172[8] = delta_x[7] + nom_x[8];
   out_4797896270428806172[9] = delta_x[8] + nom_x[9];
   out_4797896270428806172[10] = delta_x[9] + nom_x[10];
   out_4797896270428806172[11] = delta_x[10] + nom_x[11];
   out_4797896270428806172[12] = delta_x[11] + nom_x[12];
   out_4797896270428806172[13] = delta_x[12] + nom_x[13];
   out_4797896270428806172[14] = delta_x[13] + nom_x[14];
   out_4797896270428806172[15] = delta_x[14] + nom_x[15];
   out_4797896270428806172[16] = delta_x[15] + nom_x[16];
   out_4797896270428806172[17] = delta_x[16] + nom_x[17];
   out_4797896270428806172[18] = delta_x[17] + nom_x[18];
   out_4797896270428806172[19] = delta_x[18] + nom_x[19];
   out_4797896270428806172[20] = delta_x[19] + nom_x[20];
   out_4797896270428806172[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5798298191881520623) {
   out_5798298191881520623[0] = -nom_x[0] + true_x[0];
   out_5798298191881520623[1] = -nom_x[1] + true_x[1];
   out_5798298191881520623[2] = -nom_x[2] + true_x[2];
   out_5798298191881520623[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5798298191881520623[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5798298191881520623[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5798298191881520623[6] = -nom_x[7] + true_x[7];
   out_5798298191881520623[7] = -nom_x[8] + true_x[8];
   out_5798298191881520623[8] = -nom_x[9] + true_x[9];
   out_5798298191881520623[9] = -nom_x[10] + true_x[10];
   out_5798298191881520623[10] = -nom_x[11] + true_x[11];
   out_5798298191881520623[11] = -nom_x[12] + true_x[12];
   out_5798298191881520623[12] = -nom_x[13] + true_x[13];
   out_5798298191881520623[13] = -nom_x[14] + true_x[14];
   out_5798298191881520623[14] = -nom_x[15] + true_x[15];
   out_5798298191881520623[15] = -nom_x[16] + true_x[16];
   out_5798298191881520623[16] = -nom_x[17] + true_x[17];
   out_5798298191881520623[17] = -nom_x[18] + true_x[18];
   out_5798298191881520623[18] = -nom_x[19] + true_x[19];
   out_5798298191881520623[19] = -nom_x[20] + true_x[20];
   out_5798298191881520623[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2609756539061633336) {
   out_2609756539061633336[0] = 1.0;
   out_2609756539061633336[1] = 0;
   out_2609756539061633336[2] = 0;
   out_2609756539061633336[3] = 0;
   out_2609756539061633336[4] = 0;
   out_2609756539061633336[5] = 0;
   out_2609756539061633336[6] = 0;
   out_2609756539061633336[7] = 0;
   out_2609756539061633336[8] = 0;
   out_2609756539061633336[9] = 0;
   out_2609756539061633336[10] = 0;
   out_2609756539061633336[11] = 0;
   out_2609756539061633336[12] = 0;
   out_2609756539061633336[13] = 0;
   out_2609756539061633336[14] = 0;
   out_2609756539061633336[15] = 0;
   out_2609756539061633336[16] = 0;
   out_2609756539061633336[17] = 0;
   out_2609756539061633336[18] = 0;
   out_2609756539061633336[19] = 0;
   out_2609756539061633336[20] = 0;
   out_2609756539061633336[21] = 0;
   out_2609756539061633336[22] = 1.0;
   out_2609756539061633336[23] = 0;
   out_2609756539061633336[24] = 0;
   out_2609756539061633336[25] = 0;
   out_2609756539061633336[26] = 0;
   out_2609756539061633336[27] = 0;
   out_2609756539061633336[28] = 0;
   out_2609756539061633336[29] = 0;
   out_2609756539061633336[30] = 0;
   out_2609756539061633336[31] = 0;
   out_2609756539061633336[32] = 0;
   out_2609756539061633336[33] = 0;
   out_2609756539061633336[34] = 0;
   out_2609756539061633336[35] = 0;
   out_2609756539061633336[36] = 0;
   out_2609756539061633336[37] = 0;
   out_2609756539061633336[38] = 0;
   out_2609756539061633336[39] = 0;
   out_2609756539061633336[40] = 0;
   out_2609756539061633336[41] = 0;
   out_2609756539061633336[42] = 0;
   out_2609756539061633336[43] = 0;
   out_2609756539061633336[44] = 1.0;
   out_2609756539061633336[45] = 0;
   out_2609756539061633336[46] = 0;
   out_2609756539061633336[47] = 0;
   out_2609756539061633336[48] = 0;
   out_2609756539061633336[49] = 0;
   out_2609756539061633336[50] = 0;
   out_2609756539061633336[51] = 0;
   out_2609756539061633336[52] = 0;
   out_2609756539061633336[53] = 0;
   out_2609756539061633336[54] = 0;
   out_2609756539061633336[55] = 0;
   out_2609756539061633336[56] = 0;
   out_2609756539061633336[57] = 0;
   out_2609756539061633336[58] = 0;
   out_2609756539061633336[59] = 0;
   out_2609756539061633336[60] = 0;
   out_2609756539061633336[61] = 0;
   out_2609756539061633336[62] = 0;
   out_2609756539061633336[63] = 0;
   out_2609756539061633336[64] = 0;
   out_2609756539061633336[65] = 0;
   out_2609756539061633336[66] = -0.5*state[4];
   out_2609756539061633336[67] = -0.5*state[5];
   out_2609756539061633336[68] = -0.5*state[6];
   out_2609756539061633336[69] = 0;
   out_2609756539061633336[70] = 0;
   out_2609756539061633336[71] = 0;
   out_2609756539061633336[72] = 0;
   out_2609756539061633336[73] = 0;
   out_2609756539061633336[74] = 0;
   out_2609756539061633336[75] = 0;
   out_2609756539061633336[76] = 0;
   out_2609756539061633336[77] = 0;
   out_2609756539061633336[78] = 0;
   out_2609756539061633336[79] = 0;
   out_2609756539061633336[80] = 0;
   out_2609756539061633336[81] = 0;
   out_2609756539061633336[82] = 0;
   out_2609756539061633336[83] = 0;
   out_2609756539061633336[84] = 0;
   out_2609756539061633336[85] = 0;
   out_2609756539061633336[86] = 0;
   out_2609756539061633336[87] = 0.5*state[3];
   out_2609756539061633336[88] = 0.5*state[6];
   out_2609756539061633336[89] = -0.5*state[5];
   out_2609756539061633336[90] = 0;
   out_2609756539061633336[91] = 0;
   out_2609756539061633336[92] = 0;
   out_2609756539061633336[93] = 0;
   out_2609756539061633336[94] = 0;
   out_2609756539061633336[95] = 0;
   out_2609756539061633336[96] = 0;
   out_2609756539061633336[97] = 0;
   out_2609756539061633336[98] = 0;
   out_2609756539061633336[99] = 0;
   out_2609756539061633336[100] = 0;
   out_2609756539061633336[101] = 0;
   out_2609756539061633336[102] = 0;
   out_2609756539061633336[103] = 0;
   out_2609756539061633336[104] = 0;
   out_2609756539061633336[105] = 0;
   out_2609756539061633336[106] = 0;
   out_2609756539061633336[107] = 0;
   out_2609756539061633336[108] = -0.5*state[6];
   out_2609756539061633336[109] = 0.5*state[3];
   out_2609756539061633336[110] = 0.5*state[4];
   out_2609756539061633336[111] = 0;
   out_2609756539061633336[112] = 0;
   out_2609756539061633336[113] = 0;
   out_2609756539061633336[114] = 0;
   out_2609756539061633336[115] = 0;
   out_2609756539061633336[116] = 0;
   out_2609756539061633336[117] = 0;
   out_2609756539061633336[118] = 0;
   out_2609756539061633336[119] = 0;
   out_2609756539061633336[120] = 0;
   out_2609756539061633336[121] = 0;
   out_2609756539061633336[122] = 0;
   out_2609756539061633336[123] = 0;
   out_2609756539061633336[124] = 0;
   out_2609756539061633336[125] = 0;
   out_2609756539061633336[126] = 0;
   out_2609756539061633336[127] = 0;
   out_2609756539061633336[128] = 0;
   out_2609756539061633336[129] = 0.5*state[5];
   out_2609756539061633336[130] = -0.5*state[4];
   out_2609756539061633336[131] = 0.5*state[3];
   out_2609756539061633336[132] = 0;
   out_2609756539061633336[133] = 0;
   out_2609756539061633336[134] = 0;
   out_2609756539061633336[135] = 0;
   out_2609756539061633336[136] = 0;
   out_2609756539061633336[137] = 0;
   out_2609756539061633336[138] = 0;
   out_2609756539061633336[139] = 0;
   out_2609756539061633336[140] = 0;
   out_2609756539061633336[141] = 0;
   out_2609756539061633336[142] = 0;
   out_2609756539061633336[143] = 0;
   out_2609756539061633336[144] = 0;
   out_2609756539061633336[145] = 0;
   out_2609756539061633336[146] = 0;
   out_2609756539061633336[147] = 0;
   out_2609756539061633336[148] = 0;
   out_2609756539061633336[149] = 0;
   out_2609756539061633336[150] = 0;
   out_2609756539061633336[151] = 0;
   out_2609756539061633336[152] = 0;
   out_2609756539061633336[153] = 1.0;
   out_2609756539061633336[154] = 0;
   out_2609756539061633336[155] = 0;
   out_2609756539061633336[156] = 0;
   out_2609756539061633336[157] = 0;
   out_2609756539061633336[158] = 0;
   out_2609756539061633336[159] = 0;
   out_2609756539061633336[160] = 0;
   out_2609756539061633336[161] = 0;
   out_2609756539061633336[162] = 0;
   out_2609756539061633336[163] = 0;
   out_2609756539061633336[164] = 0;
   out_2609756539061633336[165] = 0;
   out_2609756539061633336[166] = 0;
   out_2609756539061633336[167] = 0;
   out_2609756539061633336[168] = 0;
   out_2609756539061633336[169] = 0;
   out_2609756539061633336[170] = 0;
   out_2609756539061633336[171] = 0;
   out_2609756539061633336[172] = 0;
   out_2609756539061633336[173] = 0;
   out_2609756539061633336[174] = 0;
   out_2609756539061633336[175] = 1.0;
   out_2609756539061633336[176] = 0;
   out_2609756539061633336[177] = 0;
   out_2609756539061633336[178] = 0;
   out_2609756539061633336[179] = 0;
   out_2609756539061633336[180] = 0;
   out_2609756539061633336[181] = 0;
   out_2609756539061633336[182] = 0;
   out_2609756539061633336[183] = 0;
   out_2609756539061633336[184] = 0;
   out_2609756539061633336[185] = 0;
   out_2609756539061633336[186] = 0;
   out_2609756539061633336[187] = 0;
   out_2609756539061633336[188] = 0;
   out_2609756539061633336[189] = 0;
   out_2609756539061633336[190] = 0;
   out_2609756539061633336[191] = 0;
   out_2609756539061633336[192] = 0;
   out_2609756539061633336[193] = 0;
   out_2609756539061633336[194] = 0;
   out_2609756539061633336[195] = 0;
   out_2609756539061633336[196] = 0;
   out_2609756539061633336[197] = 1.0;
   out_2609756539061633336[198] = 0;
   out_2609756539061633336[199] = 0;
   out_2609756539061633336[200] = 0;
   out_2609756539061633336[201] = 0;
   out_2609756539061633336[202] = 0;
   out_2609756539061633336[203] = 0;
   out_2609756539061633336[204] = 0;
   out_2609756539061633336[205] = 0;
   out_2609756539061633336[206] = 0;
   out_2609756539061633336[207] = 0;
   out_2609756539061633336[208] = 0;
   out_2609756539061633336[209] = 0;
   out_2609756539061633336[210] = 0;
   out_2609756539061633336[211] = 0;
   out_2609756539061633336[212] = 0;
   out_2609756539061633336[213] = 0;
   out_2609756539061633336[214] = 0;
   out_2609756539061633336[215] = 0;
   out_2609756539061633336[216] = 0;
   out_2609756539061633336[217] = 0;
   out_2609756539061633336[218] = 0;
   out_2609756539061633336[219] = 1.0;
   out_2609756539061633336[220] = 0;
   out_2609756539061633336[221] = 0;
   out_2609756539061633336[222] = 0;
   out_2609756539061633336[223] = 0;
   out_2609756539061633336[224] = 0;
   out_2609756539061633336[225] = 0;
   out_2609756539061633336[226] = 0;
   out_2609756539061633336[227] = 0;
   out_2609756539061633336[228] = 0;
   out_2609756539061633336[229] = 0;
   out_2609756539061633336[230] = 0;
   out_2609756539061633336[231] = 0;
   out_2609756539061633336[232] = 0;
   out_2609756539061633336[233] = 0;
   out_2609756539061633336[234] = 0;
   out_2609756539061633336[235] = 0;
   out_2609756539061633336[236] = 0;
   out_2609756539061633336[237] = 0;
   out_2609756539061633336[238] = 0;
   out_2609756539061633336[239] = 0;
   out_2609756539061633336[240] = 0;
   out_2609756539061633336[241] = 1.0;
   out_2609756539061633336[242] = 0;
   out_2609756539061633336[243] = 0;
   out_2609756539061633336[244] = 0;
   out_2609756539061633336[245] = 0;
   out_2609756539061633336[246] = 0;
   out_2609756539061633336[247] = 0;
   out_2609756539061633336[248] = 0;
   out_2609756539061633336[249] = 0;
   out_2609756539061633336[250] = 0;
   out_2609756539061633336[251] = 0;
   out_2609756539061633336[252] = 0;
   out_2609756539061633336[253] = 0;
   out_2609756539061633336[254] = 0;
   out_2609756539061633336[255] = 0;
   out_2609756539061633336[256] = 0;
   out_2609756539061633336[257] = 0;
   out_2609756539061633336[258] = 0;
   out_2609756539061633336[259] = 0;
   out_2609756539061633336[260] = 0;
   out_2609756539061633336[261] = 0;
   out_2609756539061633336[262] = 0;
   out_2609756539061633336[263] = 1.0;
   out_2609756539061633336[264] = 0;
   out_2609756539061633336[265] = 0;
   out_2609756539061633336[266] = 0;
   out_2609756539061633336[267] = 0;
   out_2609756539061633336[268] = 0;
   out_2609756539061633336[269] = 0;
   out_2609756539061633336[270] = 0;
   out_2609756539061633336[271] = 0;
   out_2609756539061633336[272] = 0;
   out_2609756539061633336[273] = 0;
   out_2609756539061633336[274] = 0;
   out_2609756539061633336[275] = 0;
   out_2609756539061633336[276] = 0;
   out_2609756539061633336[277] = 0;
   out_2609756539061633336[278] = 0;
   out_2609756539061633336[279] = 0;
   out_2609756539061633336[280] = 0;
   out_2609756539061633336[281] = 0;
   out_2609756539061633336[282] = 0;
   out_2609756539061633336[283] = 0;
   out_2609756539061633336[284] = 0;
   out_2609756539061633336[285] = 1.0;
   out_2609756539061633336[286] = 0;
   out_2609756539061633336[287] = 0;
   out_2609756539061633336[288] = 0;
   out_2609756539061633336[289] = 0;
   out_2609756539061633336[290] = 0;
   out_2609756539061633336[291] = 0;
   out_2609756539061633336[292] = 0;
   out_2609756539061633336[293] = 0;
   out_2609756539061633336[294] = 0;
   out_2609756539061633336[295] = 0;
   out_2609756539061633336[296] = 0;
   out_2609756539061633336[297] = 0;
   out_2609756539061633336[298] = 0;
   out_2609756539061633336[299] = 0;
   out_2609756539061633336[300] = 0;
   out_2609756539061633336[301] = 0;
   out_2609756539061633336[302] = 0;
   out_2609756539061633336[303] = 0;
   out_2609756539061633336[304] = 0;
   out_2609756539061633336[305] = 0;
   out_2609756539061633336[306] = 0;
   out_2609756539061633336[307] = 1.0;
   out_2609756539061633336[308] = 0;
   out_2609756539061633336[309] = 0;
   out_2609756539061633336[310] = 0;
   out_2609756539061633336[311] = 0;
   out_2609756539061633336[312] = 0;
   out_2609756539061633336[313] = 0;
   out_2609756539061633336[314] = 0;
   out_2609756539061633336[315] = 0;
   out_2609756539061633336[316] = 0;
   out_2609756539061633336[317] = 0;
   out_2609756539061633336[318] = 0;
   out_2609756539061633336[319] = 0;
   out_2609756539061633336[320] = 0;
   out_2609756539061633336[321] = 0;
   out_2609756539061633336[322] = 0;
   out_2609756539061633336[323] = 0;
   out_2609756539061633336[324] = 0;
   out_2609756539061633336[325] = 0;
   out_2609756539061633336[326] = 0;
   out_2609756539061633336[327] = 0;
   out_2609756539061633336[328] = 0;
   out_2609756539061633336[329] = 1.0;
   out_2609756539061633336[330] = 0;
   out_2609756539061633336[331] = 0;
   out_2609756539061633336[332] = 0;
   out_2609756539061633336[333] = 0;
   out_2609756539061633336[334] = 0;
   out_2609756539061633336[335] = 0;
   out_2609756539061633336[336] = 0;
   out_2609756539061633336[337] = 0;
   out_2609756539061633336[338] = 0;
   out_2609756539061633336[339] = 0;
   out_2609756539061633336[340] = 0;
   out_2609756539061633336[341] = 0;
   out_2609756539061633336[342] = 0;
   out_2609756539061633336[343] = 0;
   out_2609756539061633336[344] = 0;
   out_2609756539061633336[345] = 0;
   out_2609756539061633336[346] = 0;
   out_2609756539061633336[347] = 0;
   out_2609756539061633336[348] = 0;
   out_2609756539061633336[349] = 0;
   out_2609756539061633336[350] = 0;
   out_2609756539061633336[351] = 1.0;
   out_2609756539061633336[352] = 0;
   out_2609756539061633336[353] = 0;
   out_2609756539061633336[354] = 0;
   out_2609756539061633336[355] = 0;
   out_2609756539061633336[356] = 0;
   out_2609756539061633336[357] = 0;
   out_2609756539061633336[358] = 0;
   out_2609756539061633336[359] = 0;
   out_2609756539061633336[360] = 0;
   out_2609756539061633336[361] = 0;
   out_2609756539061633336[362] = 0;
   out_2609756539061633336[363] = 0;
   out_2609756539061633336[364] = 0;
   out_2609756539061633336[365] = 0;
   out_2609756539061633336[366] = 0;
   out_2609756539061633336[367] = 0;
   out_2609756539061633336[368] = 0;
   out_2609756539061633336[369] = 0;
   out_2609756539061633336[370] = 0;
   out_2609756539061633336[371] = 0;
   out_2609756539061633336[372] = 0;
   out_2609756539061633336[373] = 1.0;
   out_2609756539061633336[374] = 0;
   out_2609756539061633336[375] = 0;
   out_2609756539061633336[376] = 0;
   out_2609756539061633336[377] = 0;
   out_2609756539061633336[378] = 0;
   out_2609756539061633336[379] = 0;
   out_2609756539061633336[380] = 0;
   out_2609756539061633336[381] = 0;
   out_2609756539061633336[382] = 0;
   out_2609756539061633336[383] = 0;
   out_2609756539061633336[384] = 0;
   out_2609756539061633336[385] = 0;
   out_2609756539061633336[386] = 0;
   out_2609756539061633336[387] = 0;
   out_2609756539061633336[388] = 0;
   out_2609756539061633336[389] = 0;
   out_2609756539061633336[390] = 0;
   out_2609756539061633336[391] = 0;
   out_2609756539061633336[392] = 0;
   out_2609756539061633336[393] = 0;
   out_2609756539061633336[394] = 0;
   out_2609756539061633336[395] = 1.0;
   out_2609756539061633336[396] = 0;
   out_2609756539061633336[397] = 0;
   out_2609756539061633336[398] = 0;
   out_2609756539061633336[399] = 0;
   out_2609756539061633336[400] = 0;
   out_2609756539061633336[401] = 0;
   out_2609756539061633336[402] = 0;
   out_2609756539061633336[403] = 0;
   out_2609756539061633336[404] = 0;
   out_2609756539061633336[405] = 0;
   out_2609756539061633336[406] = 0;
   out_2609756539061633336[407] = 0;
   out_2609756539061633336[408] = 0;
   out_2609756539061633336[409] = 0;
   out_2609756539061633336[410] = 0;
   out_2609756539061633336[411] = 0;
   out_2609756539061633336[412] = 0;
   out_2609756539061633336[413] = 0;
   out_2609756539061633336[414] = 0;
   out_2609756539061633336[415] = 0;
   out_2609756539061633336[416] = 0;
   out_2609756539061633336[417] = 1.0;
   out_2609756539061633336[418] = 0;
   out_2609756539061633336[419] = 0;
   out_2609756539061633336[420] = 0;
   out_2609756539061633336[421] = 0;
   out_2609756539061633336[422] = 0;
   out_2609756539061633336[423] = 0;
   out_2609756539061633336[424] = 0;
   out_2609756539061633336[425] = 0;
   out_2609756539061633336[426] = 0;
   out_2609756539061633336[427] = 0;
   out_2609756539061633336[428] = 0;
   out_2609756539061633336[429] = 0;
   out_2609756539061633336[430] = 0;
   out_2609756539061633336[431] = 0;
   out_2609756539061633336[432] = 0;
   out_2609756539061633336[433] = 0;
   out_2609756539061633336[434] = 0;
   out_2609756539061633336[435] = 0;
   out_2609756539061633336[436] = 0;
   out_2609756539061633336[437] = 0;
   out_2609756539061633336[438] = 0;
   out_2609756539061633336[439] = 1.0;
   out_2609756539061633336[440] = 0;
   out_2609756539061633336[441] = 0;
   out_2609756539061633336[442] = 0;
   out_2609756539061633336[443] = 0;
   out_2609756539061633336[444] = 0;
   out_2609756539061633336[445] = 0;
   out_2609756539061633336[446] = 0;
   out_2609756539061633336[447] = 0;
   out_2609756539061633336[448] = 0;
   out_2609756539061633336[449] = 0;
   out_2609756539061633336[450] = 0;
   out_2609756539061633336[451] = 0;
   out_2609756539061633336[452] = 0;
   out_2609756539061633336[453] = 0;
   out_2609756539061633336[454] = 0;
   out_2609756539061633336[455] = 0;
   out_2609756539061633336[456] = 0;
   out_2609756539061633336[457] = 0;
   out_2609756539061633336[458] = 0;
   out_2609756539061633336[459] = 0;
   out_2609756539061633336[460] = 0;
   out_2609756539061633336[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4035549592486798493) {
   out_4035549592486798493[0] = dt*state[7] + state[0];
   out_4035549592486798493[1] = dt*state[8] + state[1];
   out_4035549592486798493[2] = dt*state[9] + state[2];
   out_4035549592486798493[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4035549592486798493[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4035549592486798493[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4035549592486798493[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4035549592486798493[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4035549592486798493[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4035549592486798493[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4035549592486798493[10] = state[10];
   out_4035549592486798493[11] = state[11];
   out_4035549592486798493[12] = state[12];
   out_4035549592486798493[13] = state[13];
   out_4035549592486798493[14] = state[14];
   out_4035549592486798493[15] = state[15];
   out_4035549592486798493[16] = state[16];
   out_4035549592486798493[17] = state[17];
   out_4035549592486798493[18] = state[18];
   out_4035549592486798493[19] = state[19];
   out_4035549592486798493[20] = state[20];
   out_4035549592486798493[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5981865355580897191) {
   out_5981865355580897191[0] = 1;
   out_5981865355580897191[1] = 0;
   out_5981865355580897191[2] = 0;
   out_5981865355580897191[3] = 0;
   out_5981865355580897191[4] = 0;
   out_5981865355580897191[5] = 0;
   out_5981865355580897191[6] = dt;
   out_5981865355580897191[7] = 0;
   out_5981865355580897191[8] = 0;
   out_5981865355580897191[9] = 0;
   out_5981865355580897191[10] = 0;
   out_5981865355580897191[11] = 0;
   out_5981865355580897191[12] = 0;
   out_5981865355580897191[13] = 0;
   out_5981865355580897191[14] = 0;
   out_5981865355580897191[15] = 0;
   out_5981865355580897191[16] = 0;
   out_5981865355580897191[17] = 0;
   out_5981865355580897191[18] = 0;
   out_5981865355580897191[19] = 0;
   out_5981865355580897191[20] = 0;
   out_5981865355580897191[21] = 0;
   out_5981865355580897191[22] = 1;
   out_5981865355580897191[23] = 0;
   out_5981865355580897191[24] = 0;
   out_5981865355580897191[25] = 0;
   out_5981865355580897191[26] = 0;
   out_5981865355580897191[27] = 0;
   out_5981865355580897191[28] = dt;
   out_5981865355580897191[29] = 0;
   out_5981865355580897191[30] = 0;
   out_5981865355580897191[31] = 0;
   out_5981865355580897191[32] = 0;
   out_5981865355580897191[33] = 0;
   out_5981865355580897191[34] = 0;
   out_5981865355580897191[35] = 0;
   out_5981865355580897191[36] = 0;
   out_5981865355580897191[37] = 0;
   out_5981865355580897191[38] = 0;
   out_5981865355580897191[39] = 0;
   out_5981865355580897191[40] = 0;
   out_5981865355580897191[41] = 0;
   out_5981865355580897191[42] = 0;
   out_5981865355580897191[43] = 0;
   out_5981865355580897191[44] = 1;
   out_5981865355580897191[45] = 0;
   out_5981865355580897191[46] = 0;
   out_5981865355580897191[47] = 0;
   out_5981865355580897191[48] = 0;
   out_5981865355580897191[49] = 0;
   out_5981865355580897191[50] = dt;
   out_5981865355580897191[51] = 0;
   out_5981865355580897191[52] = 0;
   out_5981865355580897191[53] = 0;
   out_5981865355580897191[54] = 0;
   out_5981865355580897191[55] = 0;
   out_5981865355580897191[56] = 0;
   out_5981865355580897191[57] = 0;
   out_5981865355580897191[58] = 0;
   out_5981865355580897191[59] = 0;
   out_5981865355580897191[60] = 0;
   out_5981865355580897191[61] = 0;
   out_5981865355580897191[62] = 0;
   out_5981865355580897191[63] = 0;
   out_5981865355580897191[64] = 0;
   out_5981865355580897191[65] = 0;
   out_5981865355580897191[66] = 1;
   out_5981865355580897191[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5981865355580897191[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5981865355580897191[69] = 0;
   out_5981865355580897191[70] = 0;
   out_5981865355580897191[71] = 0;
   out_5981865355580897191[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5981865355580897191[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981865355580897191[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981865355580897191[75] = 0;
   out_5981865355580897191[76] = 0;
   out_5981865355580897191[77] = 0;
   out_5981865355580897191[78] = 0;
   out_5981865355580897191[79] = 0;
   out_5981865355580897191[80] = 0;
   out_5981865355580897191[81] = 0;
   out_5981865355580897191[82] = 0;
   out_5981865355580897191[83] = 0;
   out_5981865355580897191[84] = 0;
   out_5981865355580897191[85] = 0;
   out_5981865355580897191[86] = 0;
   out_5981865355580897191[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5981865355580897191[88] = 1;
   out_5981865355580897191[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5981865355580897191[90] = 0;
   out_5981865355580897191[91] = 0;
   out_5981865355580897191[92] = 0;
   out_5981865355580897191[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981865355580897191[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5981865355580897191[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981865355580897191[96] = 0;
   out_5981865355580897191[97] = 0;
   out_5981865355580897191[98] = 0;
   out_5981865355580897191[99] = 0;
   out_5981865355580897191[100] = 0;
   out_5981865355580897191[101] = 0;
   out_5981865355580897191[102] = 0;
   out_5981865355580897191[103] = 0;
   out_5981865355580897191[104] = 0;
   out_5981865355580897191[105] = 0;
   out_5981865355580897191[106] = 0;
   out_5981865355580897191[107] = 0;
   out_5981865355580897191[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5981865355580897191[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5981865355580897191[110] = 1;
   out_5981865355580897191[111] = 0;
   out_5981865355580897191[112] = 0;
   out_5981865355580897191[113] = 0;
   out_5981865355580897191[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981865355580897191[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981865355580897191[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5981865355580897191[117] = 0;
   out_5981865355580897191[118] = 0;
   out_5981865355580897191[119] = 0;
   out_5981865355580897191[120] = 0;
   out_5981865355580897191[121] = 0;
   out_5981865355580897191[122] = 0;
   out_5981865355580897191[123] = 0;
   out_5981865355580897191[124] = 0;
   out_5981865355580897191[125] = 0;
   out_5981865355580897191[126] = 0;
   out_5981865355580897191[127] = 0;
   out_5981865355580897191[128] = 0;
   out_5981865355580897191[129] = 0;
   out_5981865355580897191[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5981865355580897191[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5981865355580897191[132] = 1;
   out_5981865355580897191[133] = 0;
   out_5981865355580897191[134] = 0;
   out_5981865355580897191[135] = 0;
   out_5981865355580897191[136] = 0;
   out_5981865355580897191[137] = 0;
   out_5981865355580897191[138] = 0;
   out_5981865355580897191[139] = 0;
   out_5981865355580897191[140] = 0;
   out_5981865355580897191[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5981865355580897191[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981865355580897191[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981865355580897191[144] = 0;
   out_5981865355580897191[145] = 0;
   out_5981865355580897191[146] = 0;
   out_5981865355580897191[147] = 0;
   out_5981865355580897191[148] = 0;
   out_5981865355580897191[149] = 0;
   out_5981865355580897191[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5981865355580897191[151] = 0;
   out_5981865355580897191[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5981865355580897191[153] = 0;
   out_5981865355580897191[154] = 1;
   out_5981865355580897191[155] = 0;
   out_5981865355580897191[156] = 0;
   out_5981865355580897191[157] = 0;
   out_5981865355580897191[158] = 0;
   out_5981865355580897191[159] = 0;
   out_5981865355580897191[160] = 0;
   out_5981865355580897191[161] = 0;
   out_5981865355580897191[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5981865355580897191[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5981865355580897191[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981865355580897191[165] = 0;
   out_5981865355580897191[166] = 0;
   out_5981865355580897191[167] = 0;
   out_5981865355580897191[168] = 0;
   out_5981865355580897191[169] = 0;
   out_5981865355580897191[170] = 0;
   out_5981865355580897191[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5981865355580897191[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5981865355580897191[173] = 0;
   out_5981865355580897191[174] = 0;
   out_5981865355580897191[175] = 0;
   out_5981865355580897191[176] = 1;
   out_5981865355580897191[177] = 0;
   out_5981865355580897191[178] = 0;
   out_5981865355580897191[179] = 0;
   out_5981865355580897191[180] = 0;
   out_5981865355580897191[181] = 0;
   out_5981865355580897191[182] = 0;
   out_5981865355580897191[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5981865355580897191[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5981865355580897191[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5981865355580897191[186] = 0;
   out_5981865355580897191[187] = 0;
   out_5981865355580897191[188] = 0;
   out_5981865355580897191[189] = 0;
   out_5981865355580897191[190] = 0;
   out_5981865355580897191[191] = 0;
   out_5981865355580897191[192] = 0;
   out_5981865355580897191[193] = 0;
   out_5981865355580897191[194] = 0;
   out_5981865355580897191[195] = 0;
   out_5981865355580897191[196] = 0;
   out_5981865355580897191[197] = 0;
   out_5981865355580897191[198] = 1;
   out_5981865355580897191[199] = 0;
   out_5981865355580897191[200] = 0;
   out_5981865355580897191[201] = 0;
   out_5981865355580897191[202] = 0;
   out_5981865355580897191[203] = 0;
   out_5981865355580897191[204] = 0;
   out_5981865355580897191[205] = 0;
   out_5981865355580897191[206] = 0;
   out_5981865355580897191[207] = 0;
   out_5981865355580897191[208] = 0;
   out_5981865355580897191[209] = 0;
   out_5981865355580897191[210] = 0;
   out_5981865355580897191[211] = 0;
   out_5981865355580897191[212] = 0;
   out_5981865355580897191[213] = 0;
   out_5981865355580897191[214] = 0;
   out_5981865355580897191[215] = 0;
   out_5981865355580897191[216] = 0;
   out_5981865355580897191[217] = 0;
   out_5981865355580897191[218] = 0;
   out_5981865355580897191[219] = 0;
   out_5981865355580897191[220] = 1;
   out_5981865355580897191[221] = 0;
   out_5981865355580897191[222] = 0;
   out_5981865355580897191[223] = 0;
   out_5981865355580897191[224] = 0;
   out_5981865355580897191[225] = 0;
   out_5981865355580897191[226] = 0;
   out_5981865355580897191[227] = 0;
   out_5981865355580897191[228] = 0;
   out_5981865355580897191[229] = 0;
   out_5981865355580897191[230] = 0;
   out_5981865355580897191[231] = 0;
   out_5981865355580897191[232] = 0;
   out_5981865355580897191[233] = 0;
   out_5981865355580897191[234] = 0;
   out_5981865355580897191[235] = 0;
   out_5981865355580897191[236] = 0;
   out_5981865355580897191[237] = 0;
   out_5981865355580897191[238] = 0;
   out_5981865355580897191[239] = 0;
   out_5981865355580897191[240] = 0;
   out_5981865355580897191[241] = 0;
   out_5981865355580897191[242] = 1;
   out_5981865355580897191[243] = 0;
   out_5981865355580897191[244] = 0;
   out_5981865355580897191[245] = 0;
   out_5981865355580897191[246] = 0;
   out_5981865355580897191[247] = 0;
   out_5981865355580897191[248] = 0;
   out_5981865355580897191[249] = 0;
   out_5981865355580897191[250] = 0;
   out_5981865355580897191[251] = 0;
   out_5981865355580897191[252] = 0;
   out_5981865355580897191[253] = 0;
   out_5981865355580897191[254] = 0;
   out_5981865355580897191[255] = 0;
   out_5981865355580897191[256] = 0;
   out_5981865355580897191[257] = 0;
   out_5981865355580897191[258] = 0;
   out_5981865355580897191[259] = 0;
   out_5981865355580897191[260] = 0;
   out_5981865355580897191[261] = 0;
   out_5981865355580897191[262] = 0;
   out_5981865355580897191[263] = 0;
   out_5981865355580897191[264] = 1;
   out_5981865355580897191[265] = 0;
   out_5981865355580897191[266] = 0;
   out_5981865355580897191[267] = 0;
   out_5981865355580897191[268] = 0;
   out_5981865355580897191[269] = 0;
   out_5981865355580897191[270] = 0;
   out_5981865355580897191[271] = 0;
   out_5981865355580897191[272] = 0;
   out_5981865355580897191[273] = 0;
   out_5981865355580897191[274] = 0;
   out_5981865355580897191[275] = 0;
   out_5981865355580897191[276] = 0;
   out_5981865355580897191[277] = 0;
   out_5981865355580897191[278] = 0;
   out_5981865355580897191[279] = 0;
   out_5981865355580897191[280] = 0;
   out_5981865355580897191[281] = 0;
   out_5981865355580897191[282] = 0;
   out_5981865355580897191[283] = 0;
   out_5981865355580897191[284] = 0;
   out_5981865355580897191[285] = 0;
   out_5981865355580897191[286] = 1;
   out_5981865355580897191[287] = 0;
   out_5981865355580897191[288] = 0;
   out_5981865355580897191[289] = 0;
   out_5981865355580897191[290] = 0;
   out_5981865355580897191[291] = 0;
   out_5981865355580897191[292] = 0;
   out_5981865355580897191[293] = 0;
   out_5981865355580897191[294] = 0;
   out_5981865355580897191[295] = 0;
   out_5981865355580897191[296] = 0;
   out_5981865355580897191[297] = 0;
   out_5981865355580897191[298] = 0;
   out_5981865355580897191[299] = 0;
   out_5981865355580897191[300] = 0;
   out_5981865355580897191[301] = 0;
   out_5981865355580897191[302] = 0;
   out_5981865355580897191[303] = 0;
   out_5981865355580897191[304] = 0;
   out_5981865355580897191[305] = 0;
   out_5981865355580897191[306] = 0;
   out_5981865355580897191[307] = 0;
   out_5981865355580897191[308] = 1;
   out_5981865355580897191[309] = 0;
   out_5981865355580897191[310] = 0;
   out_5981865355580897191[311] = 0;
   out_5981865355580897191[312] = 0;
   out_5981865355580897191[313] = 0;
   out_5981865355580897191[314] = 0;
   out_5981865355580897191[315] = 0;
   out_5981865355580897191[316] = 0;
   out_5981865355580897191[317] = 0;
   out_5981865355580897191[318] = 0;
   out_5981865355580897191[319] = 0;
   out_5981865355580897191[320] = 0;
   out_5981865355580897191[321] = 0;
   out_5981865355580897191[322] = 0;
   out_5981865355580897191[323] = 0;
   out_5981865355580897191[324] = 0;
   out_5981865355580897191[325] = 0;
   out_5981865355580897191[326] = 0;
   out_5981865355580897191[327] = 0;
   out_5981865355580897191[328] = 0;
   out_5981865355580897191[329] = 0;
   out_5981865355580897191[330] = 1;
   out_5981865355580897191[331] = 0;
   out_5981865355580897191[332] = 0;
   out_5981865355580897191[333] = 0;
   out_5981865355580897191[334] = 0;
   out_5981865355580897191[335] = 0;
   out_5981865355580897191[336] = 0;
   out_5981865355580897191[337] = 0;
   out_5981865355580897191[338] = 0;
   out_5981865355580897191[339] = 0;
   out_5981865355580897191[340] = 0;
   out_5981865355580897191[341] = 0;
   out_5981865355580897191[342] = 0;
   out_5981865355580897191[343] = 0;
   out_5981865355580897191[344] = 0;
   out_5981865355580897191[345] = 0;
   out_5981865355580897191[346] = 0;
   out_5981865355580897191[347] = 0;
   out_5981865355580897191[348] = 0;
   out_5981865355580897191[349] = 0;
   out_5981865355580897191[350] = 0;
   out_5981865355580897191[351] = 0;
   out_5981865355580897191[352] = 1;
   out_5981865355580897191[353] = 0;
   out_5981865355580897191[354] = 0;
   out_5981865355580897191[355] = 0;
   out_5981865355580897191[356] = 0;
   out_5981865355580897191[357] = 0;
   out_5981865355580897191[358] = 0;
   out_5981865355580897191[359] = 0;
   out_5981865355580897191[360] = 0;
   out_5981865355580897191[361] = 0;
   out_5981865355580897191[362] = 0;
   out_5981865355580897191[363] = 0;
   out_5981865355580897191[364] = 0;
   out_5981865355580897191[365] = 0;
   out_5981865355580897191[366] = 0;
   out_5981865355580897191[367] = 0;
   out_5981865355580897191[368] = 0;
   out_5981865355580897191[369] = 0;
   out_5981865355580897191[370] = 0;
   out_5981865355580897191[371] = 0;
   out_5981865355580897191[372] = 0;
   out_5981865355580897191[373] = 0;
   out_5981865355580897191[374] = 1;
   out_5981865355580897191[375] = 0;
   out_5981865355580897191[376] = 0;
   out_5981865355580897191[377] = 0;
   out_5981865355580897191[378] = 0;
   out_5981865355580897191[379] = 0;
   out_5981865355580897191[380] = 0;
   out_5981865355580897191[381] = 0;
   out_5981865355580897191[382] = 0;
   out_5981865355580897191[383] = 0;
   out_5981865355580897191[384] = 0;
   out_5981865355580897191[385] = 0;
   out_5981865355580897191[386] = 0;
   out_5981865355580897191[387] = 0;
   out_5981865355580897191[388] = 0;
   out_5981865355580897191[389] = 0;
   out_5981865355580897191[390] = 0;
   out_5981865355580897191[391] = 0;
   out_5981865355580897191[392] = 0;
   out_5981865355580897191[393] = 0;
   out_5981865355580897191[394] = 0;
   out_5981865355580897191[395] = 0;
   out_5981865355580897191[396] = 1;
   out_5981865355580897191[397] = 0;
   out_5981865355580897191[398] = 0;
   out_5981865355580897191[399] = 0;
   out_5981865355580897191[400] = 0;
   out_5981865355580897191[401] = 0;
   out_5981865355580897191[402] = 0;
   out_5981865355580897191[403] = 0;
   out_5981865355580897191[404] = 0;
   out_5981865355580897191[405] = 0;
   out_5981865355580897191[406] = 0;
   out_5981865355580897191[407] = 0;
   out_5981865355580897191[408] = 0;
   out_5981865355580897191[409] = 0;
   out_5981865355580897191[410] = 0;
   out_5981865355580897191[411] = 0;
   out_5981865355580897191[412] = 0;
   out_5981865355580897191[413] = 0;
   out_5981865355580897191[414] = 0;
   out_5981865355580897191[415] = 0;
   out_5981865355580897191[416] = 0;
   out_5981865355580897191[417] = 0;
   out_5981865355580897191[418] = 1;
   out_5981865355580897191[419] = 0;
   out_5981865355580897191[420] = 0;
   out_5981865355580897191[421] = 0;
   out_5981865355580897191[422] = 0;
   out_5981865355580897191[423] = 0;
   out_5981865355580897191[424] = 0;
   out_5981865355580897191[425] = 0;
   out_5981865355580897191[426] = 0;
   out_5981865355580897191[427] = 0;
   out_5981865355580897191[428] = 0;
   out_5981865355580897191[429] = 0;
   out_5981865355580897191[430] = 0;
   out_5981865355580897191[431] = 0;
   out_5981865355580897191[432] = 0;
   out_5981865355580897191[433] = 0;
   out_5981865355580897191[434] = 0;
   out_5981865355580897191[435] = 0;
   out_5981865355580897191[436] = 0;
   out_5981865355580897191[437] = 0;
   out_5981865355580897191[438] = 0;
   out_5981865355580897191[439] = 0;
   out_5981865355580897191[440] = 1;
}
void h_4(double *state, double *unused, double *out_4570714533928462214) {
   out_4570714533928462214[0] = state[10] + state[13];
   out_4570714533928462214[1] = state[11] + state[14];
   out_4570714533928462214[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2576394617671821494) {
   out_2576394617671821494[0] = 0;
   out_2576394617671821494[1] = 0;
   out_2576394617671821494[2] = 0;
   out_2576394617671821494[3] = 0;
   out_2576394617671821494[4] = 0;
   out_2576394617671821494[5] = 0;
   out_2576394617671821494[6] = 0;
   out_2576394617671821494[7] = 0;
   out_2576394617671821494[8] = 0;
   out_2576394617671821494[9] = 0;
   out_2576394617671821494[10] = 1;
   out_2576394617671821494[11] = 0;
   out_2576394617671821494[12] = 0;
   out_2576394617671821494[13] = 1;
   out_2576394617671821494[14] = 0;
   out_2576394617671821494[15] = 0;
   out_2576394617671821494[16] = 0;
   out_2576394617671821494[17] = 0;
   out_2576394617671821494[18] = 0;
   out_2576394617671821494[19] = 0;
   out_2576394617671821494[20] = 0;
   out_2576394617671821494[21] = 0;
   out_2576394617671821494[22] = 0;
   out_2576394617671821494[23] = 0;
   out_2576394617671821494[24] = 0;
   out_2576394617671821494[25] = 0;
   out_2576394617671821494[26] = 0;
   out_2576394617671821494[27] = 0;
   out_2576394617671821494[28] = 0;
   out_2576394617671821494[29] = 0;
   out_2576394617671821494[30] = 0;
   out_2576394617671821494[31] = 0;
   out_2576394617671821494[32] = 0;
   out_2576394617671821494[33] = 1;
   out_2576394617671821494[34] = 0;
   out_2576394617671821494[35] = 0;
   out_2576394617671821494[36] = 1;
   out_2576394617671821494[37] = 0;
   out_2576394617671821494[38] = 0;
   out_2576394617671821494[39] = 0;
   out_2576394617671821494[40] = 0;
   out_2576394617671821494[41] = 0;
   out_2576394617671821494[42] = 0;
   out_2576394617671821494[43] = 0;
   out_2576394617671821494[44] = 0;
   out_2576394617671821494[45] = 0;
   out_2576394617671821494[46] = 0;
   out_2576394617671821494[47] = 0;
   out_2576394617671821494[48] = 0;
   out_2576394617671821494[49] = 0;
   out_2576394617671821494[50] = 0;
   out_2576394617671821494[51] = 0;
   out_2576394617671821494[52] = 0;
   out_2576394617671821494[53] = 0;
   out_2576394617671821494[54] = 0;
   out_2576394617671821494[55] = 0;
   out_2576394617671821494[56] = 1;
   out_2576394617671821494[57] = 0;
   out_2576394617671821494[58] = 0;
   out_2576394617671821494[59] = 1;
   out_2576394617671821494[60] = 0;
   out_2576394617671821494[61] = 0;
   out_2576394617671821494[62] = 0;
   out_2576394617671821494[63] = 0;
   out_2576394617671821494[64] = 0;
   out_2576394617671821494[65] = 0;
}
void h_9(double *state, double *unused, double *out_9034987958628764348) {
   out_9034987958628764348[0] = state[10];
   out_9034987958628764348[1] = state[11];
   out_9034987958628764348[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8583130520773282652) {
   out_8583130520773282652[0] = 0;
   out_8583130520773282652[1] = 0;
   out_8583130520773282652[2] = 0;
   out_8583130520773282652[3] = 0;
   out_8583130520773282652[4] = 0;
   out_8583130520773282652[5] = 0;
   out_8583130520773282652[6] = 0;
   out_8583130520773282652[7] = 0;
   out_8583130520773282652[8] = 0;
   out_8583130520773282652[9] = 0;
   out_8583130520773282652[10] = 1;
   out_8583130520773282652[11] = 0;
   out_8583130520773282652[12] = 0;
   out_8583130520773282652[13] = 0;
   out_8583130520773282652[14] = 0;
   out_8583130520773282652[15] = 0;
   out_8583130520773282652[16] = 0;
   out_8583130520773282652[17] = 0;
   out_8583130520773282652[18] = 0;
   out_8583130520773282652[19] = 0;
   out_8583130520773282652[20] = 0;
   out_8583130520773282652[21] = 0;
   out_8583130520773282652[22] = 0;
   out_8583130520773282652[23] = 0;
   out_8583130520773282652[24] = 0;
   out_8583130520773282652[25] = 0;
   out_8583130520773282652[26] = 0;
   out_8583130520773282652[27] = 0;
   out_8583130520773282652[28] = 0;
   out_8583130520773282652[29] = 0;
   out_8583130520773282652[30] = 0;
   out_8583130520773282652[31] = 0;
   out_8583130520773282652[32] = 0;
   out_8583130520773282652[33] = 1;
   out_8583130520773282652[34] = 0;
   out_8583130520773282652[35] = 0;
   out_8583130520773282652[36] = 0;
   out_8583130520773282652[37] = 0;
   out_8583130520773282652[38] = 0;
   out_8583130520773282652[39] = 0;
   out_8583130520773282652[40] = 0;
   out_8583130520773282652[41] = 0;
   out_8583130520773282652[42] = 0;
   out_8583130520773282652[43] = 0;
   out_8583130520773282652[44] = 0;
   out_8583130520773282652[45] = 0;
   out_8583130520773282652[46] = 0;
   out_8583130520773282652[47] = 0;
   out_8583130520773282652[48] = 0;
   out_8583130520773282652[49] = 0;
   out_8583130520773282652[50] = 0;
   out_8583130520773282652[51] = 0;
   out_8583130520773282652[52] = 0;
   out_8583130520773282652[53] = 0;
   out_8583130520773282652[54] = 0;
   out_8583130520773282652[55] = 0;
   out_8583130520773282652[56] = 1;
   out_8583130520773282652[57] = 0;
   out_8583130520773282652[58] = 0;
   out_8583130520773282652[59] = 0;
   out_8583130520773282652[60] = 0;
   out_8583130520773282652[61] = 0;
   out_8583130520773282652[62] = 0;
   out_8583130520773282652[63] = 0;
   out_8583130520773282652[64] = 0;
   out_8583130520773282652[65] = 0;
}
void h_10(double *state, double *unused, double *out_8913626492654863476) {
   out_8913626492654863476[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8913626492654863476[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8913626492654863476[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8669899009782713574) {
   out_8669899009782713574[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8669899009782713574[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8669899009782713574[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8669899009782713574[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8669899009782713574[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8669899009782713574[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8669899009782713574[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8669899009782713574[7] = 0;
   out_8669899009782713574[8] = 0;
   out_8669899009782713574[9] = 0;
   out_8669899009782713574[10] = 0;
   out_8669899009782713574[11] = 0;
   out_8669899009782713574[12] = 0;
   out_8669899009782713574[13] = 0;
   out_8669899009782713574[14] = 0;
   out_8669899009782713574[15] = 0;
   out_8669899009782713574[16] = 1;
   out_8669899009782713574[17] = 0;
   out_8669899009782713574[18] = 0;
   out_8669899009782713574[19] = 1;
   out_8669899009782713574[20] = 0;
   out_8669899009782713574[21] = 0;
   out_8669899009782713574[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8669899009782713574[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8669899009782713574[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8669899009782713574[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8669899009782713574[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8669899009782713574[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8669899009782713574[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8669899009782713574[29] = 0;
   out_8669899009782713574[30] = 0;
   out_8669899009782713574[31] = 0;
   out_8669899009782713574[32] = 0;
   out_8669899009782713574[33] = 0;
   out_8669899009782713574[34] = 0;
   out_8669899009782713574[35] = 0;
   out_8669899009782713574[36] = 0;
   out_8669899009782713574[37] = 0;
   out_8669899009782713574[38] = 0;
   out_8669899009782713574[39] = 1;
   out_8669899009782713574[40] = 0;
   out_8669899009782713574[41] = 0;
   out_8669899009782713574[42] = 1;
   out_8669899009782713574[43] = 0;
   out_8669899009782713574[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8669899009782713574[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8669899009782713574[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8669899009782713574[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8669899009782713574[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8669899009782713574[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8669899009782713574[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8669899009782713574[51] = 0;
   out_8669899009782713574[52] = 0;
   out_8669899009782713574[53] = 0;
   out_8669899009782713574[54] = 0;
   out_8669899009782713574[55] = 0;
   out_8669899009782713574[56] = 0;
   out_8669899009782713574[57] = 0;
   out_8669899009782713574[58] = 0;
   out_8669899009782713574[59] = 0;
   out_8669899009782713574[60] = 0;
   out_8669899009782713574[61] = 0;
   out_8669899009782713574[62] = 1;
   out_8669899009782713574[63] = 0;
   out_8669899009782713574[64] = 0;
   out_8669899009782713574[65] = 1;
}
void h_12(double *state, double *unused, double *out_7955755614367253947) {
   out_7955755614367253947[0] = state[0];
   out_7955755614367253947[1] = state[1];
   out_7955755614367253947[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7595851025703783289) {
   out_7595851025703783289[0] = 1;
   out_7595851025703783289[1] = 0;
   out_7595851025703783289[2] = 0;
   out_7595851025703783289[3] = 0;
   out_7595851025703783289[4] = 0;
   out_7595851025703783289[5] = 0;
   out_7595851025703783289[6] = 0;
   out_7595851025703783289[7] = 0;
   out_7595851025703783289[8] = 0;
   out_7595851025703783289[9] = 0;
   out_7595851025703783289[10] = 0;
   out_7595851025703783289[11] = 0;
   out_7595851025703783289[12] = 0;
   out_7595851025703783289[13] = 0;
   out_7595851025703783289[14] = 0;
   out_7595851025703783289[15] = 0;
   out_7595851025703783289[16] = 0;
   out_7595851025703783289[17] = 0;
   out_7595851025703783289[18] = 0;
   out_7595851025703783289[19] = 0;
   out_7595851025703783289[20] = 0;
   out_7595851025703783289[21] = 0;
   out_7595851025703783289[22] = 0;
   out_7595851025703783289[23] = 1;
   out_7595851025703783289[24] = 0;
   out_7595851025703783289[25] = 0;
   out_7595851025703783289[26] = 0;
   out_7595851025703783289[27] = 0;
   out_7595851025703783289[28] = 0;
   out_7595851025703783289[29] = 0;
   out_7595851025703783289[30] = 0;
   out_7595851025703783289[31] = 0;
   out_7595851025703783289[32] = 0;
   out_7595851025703783289[33] = 0;
   out_7595851025703783289[34] = 0;
   out_7595851025703783289[35] = 0;
   out_7595851025703783289[36] = 0;
   out_7595851025703783289[37] = 0;
   out_7595851025703783289[38] = 0;
   out_7595851025703783289[39] = 0;
   out_7595851025703783289[40] = 0;
   out_7595851025703783289[41] = 0;
   out_7595851025703783289[42] = 0;
   out_7595851025703783289[43] = 0;
   out_7595851025703783289[44] = 0;
   out_7595851025703783289[45] = 0;
   out_7595851025703783289[46] = 1;
   out_7595851025703783289[47] = 0;
   out_7595851025703783289[48] = 0;
   out_7595851025703783289[49] = 0;
   out_7595851025703783289[50] = 0;
   out_7595851025703783289[51] = 0;
   out_7595851025703783289[52] = 0;
   out_7595851025703783289[53] = 0;
   out_7595851025703783289[54] = 0;
   out_7595851025703783289[55] = 0;
   out_7595851025703783289[56] = 0;
   out_7595851025703783289[57] = 0;
   out_7595851025703783289[58] = 0;
   out_7595851025703783289[59] = 0;
   out_7595851025703783289[60] = 0;
   out_7595851025703783289[61] = 0;
   out_7595851025703783289[62] = 0;
   out_7595851025703783289[63] = 0;
   out_7595851025703783289[64] = 0;
   out_7595851025703783289[65] = 0;
}
void h_31(double *state, double *unused, double *out_2335013314091180118) {
   out_2335013314091180118[0] = state[7];
   out_2335013314091180118[1] = state[8];
   out_2335013314091180118[2] = state[9];
}
void H_31(double *state, double *unused, double *out_5943056675044428870) {
   out_5943056675044428870[0] = 0;
   out_5943056675044428870[1] = 0;
   out_5943056675044428870[2] = 0;
   out_5943056675044428870[3] = 0;
   out_5943056675044428870[4] = 0;
   out_5943056675044428870[5] = 0;
   out_5943056675044428870[6] = 0;
   out_5943056675044428870[7] = 1;
   out_5943056675044428870[8] = 0;
   out_5943056675044428870[9] = 0;
   out_5943056675044428870[10] = 0;
   out_5943056675044428870[11] = 0;
   out_5943056675044428870[12] = 0;
   out_5943056675044428870[13] = 0;
   out_5943056675044428870[14] = 0;
   out_5943056675044428870[15] = 0;
   out_5943056675044428870[16] = 0;
   out_5943056675044428870[17] = 0;
   out_5943056675044428870[18] = 0;
   out_5943056675044428870[19] = 0;
   out_5943056675044428870[20] = 0;
   out_5943056675044428870[21] = 0;
   out_5943056675044428870[22] = 0;
   out_5943056675044428870[23] = 0;
   out_5943056675044428870[24] = 0;
   out_5943056675044428870[25] = 0;
   out_5943056675044428870[26] = 0;
   out_5943056675044428870[27] = 0;
   out_5943056675044428870[28] = 0;
   out_5943056675044428870[29] = 0;
   out_5943056675044428870[30] = 1;
   out_5943056675044428870[31] = 0;
   out_5943056675044428870[32] = 0;
   out_5943056675044428870[33] = 0;
   out_5943056675044428870[34] = 0;
   out_5943056675044428870[35] = 0;
   out_5943056675044428870[36] = 0;
   out_5943056675044428870[37] = 0;
   out_5943056675044428870[38] = 0;
   out_5943056675044428870[39] = 0;
   out_5943056675044428870[40] = 0;
   out_5943056675044428870[41] = 0;
   out_5943056675044428870[42] = 0;
   out_5943056675044428870[43] = 0;
   out_5943056675044428870[44] = 0;
   out_5943056675044428870[45] = 0;
   out_5943056675044428870[46] = 0;
   out_5943056675044428870[47] = 0;
   out_5943056675044428870[48] = 0;
   out_5943056675044428870[49] = 0;
   out_5943056675044428870[50] = 0;
   out_5943056675044428870[51] = 0;
   out_5943056675044428870[52] = 0;
   out_5943056675044428870[53] = 1;
   out_5943056675044428870[54] = 0;
   out_5943056675044428870[55] = 0;
   out_5943056675044428870[56] = 0;
   out_5943056675044428870[57] = 0;
   out_5943056675044428870[58] = 0;
   out_5943056675044428870[59] = 0;
   out_5943056675044428870[60] = 0;
   out_5943056675044428870[61] = 0;
   out_5943056675044428870[62] = 0;
   out_5943056675044428870[63] = 0;
   out_5943056675044428870[64] = 0;
   out_5943056675044428870[65] = 0;
}
void h_32(double *state, double *unused, double *out_134736651192051036) {
   out_134736651192051036[0] = state[3];
   out_134736651192051036[1] = state[4];
   out_134736651192051036[2] = state[5];
   out_134736651192051036[3] = state[6];
}
void H_32(double *state, double *unused, double *out_343646262177346637) {
   out_343646262177346637[0] = 0;
   out_343646262177346637[1] = 0;
   out_343646262177346637[2] = 0;
   out_343646262177346637[3] = 1;
   out_343646262177346637[4] = 0;
   out_343646262177346637[5] = 0;
   out_343646262177346637[6] = 0;
   out_343646262177346637[7] = 0;
   out_343646262177346637[8] = 0;
   out_343646262177346637[9] = 0;
   out_343646262177346637[10] = 0;
   out_343646262177346637[11] = 0;
   out_343646262177346637[12] = 0;
   out_343646262177346637[13] = 0;
   out_343646262177346637[14] = 0;
   out_343646262177346637[15] = 0;
   out_343646262177346637[16] = 0;
   out_343646262177346637[17] = 0;
   out_343646262177346637[18] = 0;
   out_343646262177346637[19] = 0;
   out_343646262177346637[20] = 0;
   out_343646262177346637[21] = 0;
   out_343646262177346637[22] = 0;
   out_343646262177346637[23] = 0;
   out_343646262177346637[24] = 0;
   out_343646262177346637[25] = 0;
   out_343646262177346637[26] = 1;
   out_343646262177346637[27] = 0;
   out_343646262177346637[28] = 0;
   out_343646262177346637[29] = 0;
   out_343646262177346637[30] = 0;
   out_343646262177346637[31] = 0;
   out_343646262177346637[32] = 0;
   out_343646262177346637[33] = 0;
   out_343646262177346637[34] = 0;
   out_343646262177346637[35] = 0;
   out_343646262177346637[36] = 0;
   out_343646262177346637[37] = 0;
   out_343646262177346637[38] = 0;
   out_343646262177346637[39] = 0;
   out_343646262177346637[40] = 0;
   out_343646262177346637[41] = 0;
   out_343646262177346637[42] = 0;
   out_343646262177346637[43] = 0;
   out_343646262177346637[44] = 0;
   out_343646262177346637[45] = 0;
   out_343646262177346637[46] = 0;
   out_343646262177346637[47] = 0;
   out_343646262177346637[48] = 0;
   out_343646262177346637[49] = 1;
   out_343646262177346637[50] = 0;
   out_343646262177346637[51] = 0;
   out_343646262177346637[52] = 0;
   out_343646262177346637[53] = 0;
   out_343646262177346637[54] = 0;
   out_343646262177346637[55] = 0;
   out_343646262177346637[56] = 0;
   out_343646262177346637[57] = 0;
   out_343646262177346637[58] = 0;
   out_343646262177346637[59] = 0;
   out_343646262177346637[60] = 0;
   out_343646262177346637[61] = 0;
   out_343646262177346637[62] = 0;
   out_343646262177346637[63] = 0;
   out_343646262177346637[64] = 0;
   out_343646262177346637[65] = 0;
   out_343646262177346637[66] = 0;
   out_343646262177346637[67] = 0;
   out_343646262177346637[68] = 0;
   out_343646262177346637[69] = 0;
   out_343646262177346637[70] = 0;
   out_343646262177346637[71] = 0;
   out_343646262177346637[72] = 1;
   out_343646262177346637[73] = 0;
   out_343646262177346637[74] = 0;
   out_343646262177346637[75] = 0;
   out_343646262177346637[76] = 0;
   out_343646262177346637[77] = 0;
   out_343646262177346637[78] = 0;
   out_343646262177346637[79] = 0;
   out_343646262177346637[80] = 0;
   out_343646262177346637[81] = 0;
   out_343646262177346637[82] = 0;
   out_343646262177346637[83] = 0;
   out_343646262177346637[84] = 0;
   out_343646262177346637[85] = 0;
   out_343646262177346637[86] = 0;
   out_343646262177346637[87] = 0;
}
void h_13(double *state, double *unused, double *out_2635231968562706672) {
   out_2635231968562706672[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2635231968562706672[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2635231968562706672[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7251398425607488672) {
   out_7251398425607488672[0] = 0;
   out_7251398425607488672[1] = 0;
   out_7251398425607488672[2] = 0;
   out_7251398425607488672[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7251398425607488672[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7251398425607488672[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7251398425607488672[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7251398425607488672[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7251398425607488672[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7251398425607488672[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7251398425607488672[10] = 0;
   out_7251398425607488672[11] = 0;
   out_7251398425607488672[12] = 0;
   out_7251398425607488672[13] = 0;
   out_7251398425607488672[14] = 0;
   out_7251398425607488672[15] = 0;
   out_7251398425607488672[16] = 0;
   out_7251398425607488672[17] = 0;
   out_7251398425607488672[18] = 0;
   out_7251398425607488672[19] = 0;
   out_7251398425607488672[20] = 0;
   out_7251398425607488672[21] = 0;
   out_7251398425607488672[22] = 0;
   out_7251398425607488672[23] = 0;
   out_7251398425607488672[24] = 0;
   out_7251398425607488672[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7251398425607488672[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7251398425607488672[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7251398425607488672[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7251398425607488672[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7251398425607488672[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7251398425607488672[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7251398425607488672[32] = 0;
   out_7251398425607488672[33] = 0;
   out_7251398425607488672[34] = 0;
   out_7251398425607488672[35] = 0;
   out_7251398425607488672[36] = 0;
   out_7251398425607488672[37] = 0;
   out_7251398425607488672[38] = 0;
   out_7251398425607488672[39] = 0;
   out_7251398425607488672[40] = 0;
   out_7251398425607488672[41] = 0;
   out_7251398425607488672[42] = 0;
   out_7251398425607488672[43] = 0;
   out_7251398425607488672[44] = 0;
   out_7251398425607488672[45] = 0;
   out_7251398425607488672[46] = 0;
   out_7251398425607488672[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7251398425607488672[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7251398425607488672[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7251398425607488672[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7251398425607488672[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7251398425607488672[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7251398425607488672[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7251398425607488672[54] = 0;
   out_7251398425607488672[55] = 0;
   out_7251398425607488672[56] = 0;
   out_7251398425607488672[57] = 0;
   out_7251398425607488672[58] = 0;
   out_7251398425607488672[59] = 0;
   out_7251398425607488672[60] = 0;
   out_7251398425607488672[61] = 0;
   out_7251398425607488672[62] = 0;
   out_7251398425607488672[63] = 0;
   out_7251398425607488672[64] = 0;
   out_7251398425607488672[65] = 0;
}
void h_14(double *state, double *unused, double *out_9034987958628764348) {
   out_9034987958628764348[0] = state[10];
   out_9034987958628764348[1] = state[11];
   out_9034987958628764348[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8583130520773282652) {
   out_8583130520773282652[0] = 0;
   out_8583130520773282652[1] = 0;
   out_8583130520773282652[2] = 0;
   out_8583130520773282652[3] = 0;
   out_8583130520773282652[4] = 0;
   out_8583130520773282652[5] = 0;
   out_8583130520773282652[6] = 0;
   out_8583130520773282652[7] = 0;
   out_8583130520773282652[8] = 0;
   out_8583130520773282652[9] = 0;
   out_8583130520773282652[10] = 1;
   out_8583130520773282652[11] = 0;
   out_8583130520773282652[12] = 0;
   out_8583130520773282652[13] = 0;
   out_8583130520773282652[14] = 0;
   out_8583130520773282652[15] = 0;
   out_8583130520773282652[16] = 0;
   out_8583130520773282652[17] = 0;
   out_8583130520773282652[18] = 0;
   out_8583130520773282652[19] = 0;
   out_8583130520773282652[20] = 0;
   out_8583130520773282652[21] = 0;
   out_8583130520773282652[22] = 0;
   out_8583130520773282652[23] = 0;
   out_8583130520773282652[24] = 0;
   out_8583130520773282652[25] = 0;
   out_8583130520773282652[26] = 0;
   out_8583130520773282652[27] = 0;
   out_8583130520773282652[28] = 0;
   out_8583130520773282652[29] = 0;
   out_8583130520773282652[30] = 0;
   out_8583130520773282652[31] = 0;
   out_8583130520773282652[32] = 0;
   out_8583130520773282652[33] = 1;
   out_8583130520773282652[34] = 0;
   out_8583130520773282652[35] = 0;
   out_8583130520773282652[36] = 0;
   out_8583130520773282652[37] = 0;
   out_8583130520773282652[38] = 0;
   out_8583130520773282652[39] = 0;
   out_8583130520773282652[40] = 0;
   out_8583130520773282652[41] = 0;
   out_8583130520773282652[42] = 0;
   out_8583130520773282652[43] = 0;
   out_8583130520773282652[44] = 0;
   out_8583130520773282652[45] = 0;
   out_8583130520773282652[46] = 0;
   out_8583130520773282652[47] = 0;
   out_8583130520773282652[48] = 0;
   out_8583130520773282652[49] = 0;
   out_8583130520773282652[50] = 0;
   out_8583130520773282652[51] = 0;
   out_8583130520773282652[52] = 0;
   out_8583130520773282652[53] = 0;
   out_8583130520773282652[54] = 0;
   out_8583130520773282652[55] = 0;
   out_8583130520773282652[56] = 1;
   out_8583130520773282652[57] = 0;
   out_8583130520773282652[58] = 0;
   out_8583130520773282652[59] = 0;
   out_8583130520773282652[60] = 0;
   out_8583130520773282652[61] = 0;
   out_8583130520773282652[62] = 0;
   out_8583130520773282652[63] = 0;
   out_8583130520773282652[64] = 0;
   out_8583130520773282652[65] = 0;
}
void h_33(double *state, double *unused, double *out_8921185596023473147) {
   out_8921185596023473147[0] = state[16];
   out_8921185596023473147[1] = state[17];
   out_8921185596023473147[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9093613679683286474) {
   out_9093613679683286474[0] = 0;
   out_9093613679683286474[1] = 0;
   out_9093613679683286474[2] = 0;
   out_9093613679683286474[3] = 0;
   out_9093613679683286474[4] = 0;
   out_9093613679683286474[5] = 0;
   out_9093613679683286474[6] = 0;
   out_9093613679683286474[7] = 0;
   out_9093613679683286474[8] = 0;
   out_9093613679683286474[9] = 0;
   out_9093613679683286474[10] = 0;
   out_9093613679683286474[11] = 0;
   out_9093613679683286474[12] = 0;
   out_9093613679683286474[13] = 0;
   out_9093613679683286474[14] = 0;
   out_9093613679683286474[15] = 0;
   out_9093613679683286474[16] = 1;
   out_9093613679683286474[17] = 0;
   out_9093613679683286474[18] = 0;
   out_9093613679683286474[19] = 0;
   out_9093613679683286474[20] = 0;
   out_9093613679683286474[21] = 0;
   out_9093613679683286474[22] = 0;
   out_9093613679683286474[23] = 0;
   out_9093613679683286474[24] = 0;
   out_9093613679683286474[25] = 0;
   out_9093613679683286474[26] = 0;
   out_9093613679683286474[27] = 0;
   out_9093613679683286474[28] = 0;
   out_9093613679683286474[29] = 0;
   out_9093613679683286474[30] = 0;
   out_9093613679683286474[31] = 0;
   out_9093613679683286474[32] = 0;
   out_9093613679683286474[33] = 0;
   out_9093613679683286474[34] = 0;
   out_9093613679683286474[35] = 0;
   out_9093613679683286474[36] = 0;
   out_9093613679683286474[37] = 0;
   out_9093613679683286474[38] = 0;
   out_9093613679683286474[39] = 1;
   out_9093613679683286474[40] = 0;
   out_9093613679683286474[41] = 0;
   out_9093613679683286474[42] = 0;
   out_9093613679683286474[43] = 0;
   out_9093613679683286474[44] = 0;
   out_9093613679683286474[45] = 0;
   out_9093613679683286474[46] = 0;
   out_9093613679683286474[47] = 0;
   out_9093613679683286474[48] = 0;
   out_9093613679683286474[49] = 0;
   out_9093613679683286474[50] = 0;
   out_9093613679683286474[51] = 0;
   out_9093613679683286474[52] = 0;
   out_9093613679683286474[53] = 0;
   out_9093613679683286474[54] = 0;
   out_9093613679683286474[55] = 0;
   out_9093613679683286474[56] = 0;
   out_9093613679683286474[57] = 0;
   out_9093613679683286474[58] = 0;
   out_9093613679683286474[59] = 0;
   out_9093613679683286474[60] = 0;
   out_9093613679683286474[61] = 0;
   out_9093613679683286474[62] = 1;
   out_9093613679683286474[63] = 0;
   out_9093613679683286474[64] = 0;
   out_9093613679683286474[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3425406721635510492) {
  H(in_vec, out_3425406721635510492);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4797896270428806172) {
  err_fun(nom_x, delta_x, out_4797896270428806172);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5798298191881520623) {
  inv_err_fun(nom_x, true_x, out_5798298191881520623);
}
void live_H_mod_fun(double *state, double *out_2609756539061633336) {
  H_mod_fun(state, out_2609756539061633336);
}
void live_f_fun(double *state, double dt, double *out_4035549592486798493) {
  f_fun(state,  dt, out_4035549592486798493);
}
void live_F_fun(double *state, double dt, double *out_5981865355580897191) {
  F_fun(state,  dt, out_5981865355580897191);
}
void live_h_4(double *state, double *unused, double *out_4570714533928462214) {
  h_4(state, unused, out_4570714533928462214);
}
void live_H_4(double *state, double *unused, double *out_2576394617671821494) {
  H_4(state, unused, out_2576394617671821494);
}
void live_h_9(double *state, double *unused, double *out_9034987958628764348) {
  h_9(state, unused, out_9034987958628764348);
}
void live_H_9(double *state, double *unused, double *out_8583130520773282652) {
  H_9(state, unused, out_8583130520773282652);
}
void live_h_10(double *state, double *unused, double *out_8913626492654863476) {
  h_10(state, unused, out_8913626492654863476);
}
void live_H_10(double *state, double *unused, double *out_8669899009782713574) {
  H_10(state, unused, out_8669899009782713574);
}
void live_h_12(double *state, double *unused, double *out_7955755614367253947) {
  h_12(state, unused, out_7955755614367253947);
}
void live_H_12(double *state, double *unused, double *out_7595851025703783289) {
  H_12(state, unused, out_7595851025703783289);
}
void live_h_31(double *state, double *unused, double *out_2335013314091180118) {
  h_31(state, unused, out_2335013314091180118);
}
void live_H_31(double *state, double *unused, double *out_5943056675044428870) {
  H_31(state, unused, out_5943056675044428870);
}
void live_h_32(double *state, double *unused, double *out_134736651192051036) {
  h_32(state, unused, out_134736651192051036);
}
void live_H_32(double *state, double *unused, double *out_343646262177346637) {
  H_32(state, unused, out_343646262177346637);
}
void live_h_13(double *state, double *unused, double *out_2635231968562706672) {
  h_13(state, unused, out_2635231968562706672);
}
void live_H_13(double *state, double *unused, double *out_7251398425607488672) {
  H_13(state, unused, out_7251398425607488672);
}
void live_h_14(double *state, double *unused, double *out_9034987958628764348) {
  h_14(state, unused, out_9034987958628764348);
}
void live_H_14(double *state, double *unused, double *out_8583130520773282652) {
  H_14(state, unused, out_8583130520773282652);
}
void live_h_33(double *state, double *unused, double *out_8921185596023473147) {
  h_33(state, unused, out_8921185596023473147);
}
void live_H_33(double *state, double *unused, double *out_9093613679683286474) {
  H_33(state, unused, out_9093613679683286474);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
