#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7056038609068127415) {
   out_7056038609068127415[0] = 0;
   out_7056038609068127415[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7056038609068127415[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7056038609068127415[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7056038609068127415[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7056038609068127415[5] = -sin(in_vec[1]);
   out_7056038609068127415[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7056038609068127415[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7056038609068127415[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7056038609068127415[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7056038609068127415[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7056038609068127415[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7056038609068127415[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7056038609068127415[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7056038609068127415[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7056038609068127415[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7056038609068127415[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7056038609068127415[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8728269313774193771) {
   out_8728269313774193771[0] = delta_x[0] + nom_x[0];
   out_8728269313774193771[1] = delta_x[1] + nom_x[1];
   out_8728269313774193771[2] = delta_x[2] + nom_x[2];
   out_8728269313774193771[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8728269313774193771[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8728269313774193771[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8728269313774193771[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8728269313774193771[7] = delta_x[6] + nom_x[7];
   out_8728269313774193771[8] = delta_x[7] + nom_x[8];
   out_8728269313774193771[9] = delta_x[8] + nom_x[9];
   out_8728269313774193771[10] = delta_x[9] + nom_x[10];
   out_8728269313774193771[11] = delta_x[10] + nom_x[11];
   out_8728269313774193771[12] = delta_x[11] + nom_x[12];
   out_8728269313774193771[13] = delta_x[12] + nom_x[13];
   out_8728269313774193771[14] = delta_x[13] + nom_x[14];
   out_8728269313774193771[15] = delta_x[14] + nom_x[15];
   out_8728269313774193771[16] = delta_x[15] + nom_x[16];
   out_8728269313774193771[17] = delta_x[16] + nom_x[17];
   out_8728269313774193771[18] = delta_x[17] + nom_x[18];
   out_8728269313774193771[19] = delta_x[18] + nom_x[19];
   out_8728269313774193771[20] = delta_x[19] + nom_x[20];
   out_8728269313774193771[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2291198337074995052) {
   out_2291198337074995052[0] = -nom_x[0] + true_x[0];
   out_2291198337074995052[1] = -nom_x[1] + true_x[1];
   out_2291198337074995052[2] = -nom_x[2] + true_x[2];
   out_2291198337074995052[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2291198337074995052[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2291198337074995052[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2291198337074995052[6] = -nom_x[7] + true_x[7];
   out_2291198337074995052[7] = -nom_x[8] + true_x[8];
   out_2291198337074995052[8] = -nom_x[9] + true_x[9];
   out_2291198337074995052[9] = -nom_x[10] + true_x[10];
   out_2291198337074995052[10] = -nom_x[11] + true_x[11];
   out_2291198337074995052[11] = -nom_x[12] + true_x[12];
   out_2291198337074995052[12] = -nom_x[13] + true_x[13];
   out_2291198337074995052[13] = -nom_x[14] + true_x[14];
   out_2291198337074995052[14] = -nom_x[15] + true_x[15];
   out_2291198337074995052[15] = -nom_x[16] + true_x[16];
   out_2291198337074995052[16] = -nom_x[17] + true_x[17];
   out_2291198337074995052[17] = -nom_x[18] + true_x[18];
   out_2291198337074995052[18] = -nom_x[19] + true_x[19];
   out_2291198337074995052[19] = -nom_x[20] + true_x[20];
   out_2291198337074995052[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7091612482427988921) {
   out_7091612482427988921[0] = 1.0;
   out_7091612482427988921[1] = 0;
   out_7091612482427988921[2] = 0;
   out_7091612482427988921[3] = 0;
   out_7091612482427988921[4] = 0;
   out_7091612482427988921[5] = 0;
   out_7091612482427988921[6] = 0;
   out_7091612482427988921[7] = 0;
   out_7091612482427988921[8] = 0;
   out_7091612482427988921[9] = 0;
   out_7091612482427988921[10] = 0;
   out_7091612482427988921[11] = 0;
   out_7091612482427988921[12] = 0;
   out_7091612482427988921[13] = 0;
   out_7091612482427988921[14] = 0;
   out_7091612482427988921[15] = 0;
   out_7091612482427988921[16] = 0;
   out_7091612482427988921[17] = 0;
   out_7091612482427988921[18] = 0;
   out_7091612482427988921[19] = 0;
   out_7091612482427988921[20] = 0;
   out_7091612482427988921[21] = 0;
   out_7091612482427988921[22] = 1.0;
   out_7091612482427988921[23] = 0;
   out_7091612482427988921[24] = 0;
   out_7091612482427988921[25] = 0;
   out_7091612482427988921[26] = 0;
   out_7091612482427988921[27] = 0;
   out_7091612482427988921[28] = 0;
   out_7091612482427988921[29] = 0;
   out_7091612482427988921[30] = 0;
   out_7091612482427988921[31] = 0;
   out_7091612482427988921[32] = 0;
   out_7091612482427988921[33] = 0;
   out_7091612482427988921[34] = 0;
   out_7091612482427988921[35] = 0;
   out_7091612482427988921[36] = 0;
   out_7091612482427988921[37] = 0;
   out_7091612482427988921[38] = 0;
   out_7091612482427988921[39] = 0;
   out_7091612482427988921[40] = 0;
   out_7091612482427988921[41] = 0;
   out_7091612482427988921[42] = 0;
   out_7091612482427988921[43] = 0;
   out_7091612482427988921[44] = 1.0;
   out_7091612482427988921[45] = 0;
   out_7091612482427988921[46] = 0;
   out_7091612482427988921[47] = 0;
   out_7091612482427988921[48] = 0;
   out_7091612482427988921[49] = 0;
   out_7091612482427988921[50] = 0;
   out_7091612482427988921[51] = 0;
   out_7091612482427988921[52] = 0;
   out_7091612482427988921[53] = 0;
   out_7091612482427988921[54] = 0;
   out_7091612482427988921[55] = 0;
   out_7091612482427988921[56] = 0;
   out_7091612482427988921[57] = 0;
   out_7091612482427988921[58] = 0;
   out_7091612482427988921[59] = 0;
   out_7091612482427988921[60] = 0;
   out_7091612482427988921[61] = 0;
   out_7091612482427988921[62] = 0;
   out_7091612482427988921[63] = 0;
   out_7091612482427988921[64] = 0;
   out_7091612482427988921[65] = 0;
   out_7091612482427988921[66] = -0.5*state[4];
   out_7091612482427988921[67] = -0.5*state[5];
   out_7091612482427988921[68] = -0.5*state[6];
   out_7091612482427988921[69] = 0;
   out_7091612482427988921[70] = 0;
   out_7091612482427988921[71] = 0;
   out_7091612482427988921[72] = 0;
   out_7091612482427988921[73] = 0;
   out_7091612482427988921[74] = 0;
   out_7091612482427988921[75] = 0;
   out_7091612482427988921[76] = 0;
   out_7091612482427988921[77] = 0;
   out_7091612482427988921[78] = 0;
   out_7091612482427988921[79] = 0;
   out_7091612482427988921[80] = 0;
   out_7091612482427988921[81] = 0;
   out_7091612482427988921[82] = 0;
   out_7091612482427988921[83] = 0;
   out_7091612482427988921[84] = 0;
   out_7091612482427988921[85] = 0;
   out_7091612482427988921[86] = 0;
   out_7091612482427988921[87] = 0.5*state[3];
   out_7091612482427988921[88] = 0.5*state[6];
   out_7091612482427988921[89] = -0.5*state[5];
   out_7091612482427988921[90] = 0;
   out_7091612482427988921[91] = 0;
   out_7091612482427988921[92] = 0;
   out_7091612482427988921[93] = 0;
   out_7091612482427988921[94] = 0;
   out_7091612482427988921[95] = 0;
   out_7091612482427988921[96] = 0;
   out_7091612482427988921[97] = 0;
   out_7091612482427988921[98] = 0;
   out_7091612482427988921[99] = 0;
   out_7091612482427988921[100] = 0;
   out_7091612482427988921[101] = 0;
   out_7091612482427988921[102] = 0;
   out_7091612482427988921[103] = 0;
   out_7091612482427988921[104] = 0;
   out_7091612482427988921[105] = 0;
   out_7091612482427988921[106] = 0;
   out_7091612482427988921[107] = 0;
   out_7091612482427988921[108] = -0.5*state[6];
   out_7091612482427988921[109] = 0.5*state[3];
   out_7091612482427988921[110] = 0.5*state[4];
   out_7091612482427988921[111] = 0;
   out_7091612482427988921[112] = 0;
   out_7091612482427988921[113] = 0;
   out_7091612482427988921[114] = 0;
   out_7091612482427988921[115] = 0;
   out_7091612482427988921[116] = 0;
   out_7091612482427988921[117] = 0;
   out_7091612482427988921[118] = 0;
   out_7091612482427988921[119] = 0;
   out_7091612482427988921[120] = 0;
   out_7091612482427988921[121] = 0;
   out_7091612482427988921[122] = 0;
   out_7091612482427988921[123] = 0;
   out_7091612482427988921[124] = 0;
   out_7091612482427988921[125] = 0;
   out_7091612482427988921[126] = 0;
   out_7091612482427988921[127] = 0;
   out_7091612482427988921[128] = 0;
   out_7091612482427988921[129] = 0.5*state[5];
   out_7091612482427988921[130] = -0.5*state[4];
   out_7091612482427988921[131] = 0.5*state[3];
   out_7091612482427988921[132] = 0;
   out_7091612482427988921[133] = 0;
   out_7091612482427988921[134] = 0;
   out_7091612482427988921[135] = 0;
   out_7091612482427988921[136] = 0;
   out_7091612482427988921[137] = 0;
   out_7091612482427988921[138] = 0;
   out_7091612482427988921[139] = 0;
   out_7091612482427988921[140] = 0;
   out_7091612482427988921[141] = 0;
   out_7091612482427988921[142] = 0;
   out_7091612482427988921[143] = 0;
   out_7091612482427988921[144] = 0;
   out_7091612482427988921[145] = 0;
   out_7091612482427988921[146] = 0;
   out_7091612482427988921[147] = 0;
   out_7091612482427988921[148] = 0;
   out_7091612482427988921[149] = 0;
   out_7091612482427988921[150] = 0;
   out_7091612482427988921[151] = 0;
   out_7091612482427988921[152] = 0;
   out_7091612482427988921[153] = 1.0;
   out_7091612482427988921[154] = 0;
   out_7091612482427988921[155] = 0;
   out_7091612482427988921[156] = 0;
   out_7091612482427988921[157] = 0;
   out_7091612482427988921[158] = 0;
   out_7091612482427988921[159] = 0;
   out_7091612482427988921[160] = 0;
   out_7091612482427988921[161] = 0;
   out_7091612482427988921[162] = 0;
   out_7091612482427988921[163] = 0;
   out_7091612482427988921[164] = 0;
   out_7091612482427988921[165] = 0;
   out_7091612482427988921[166] = 0;
   out_7091612482427988921[167] = 0;
   out_7091612482427988921[168] = 0;
   out_7091612482427988921[169] = 0;
   out_7091612482427988921[170] = 0;
   out_7091612482427988921[171] = 0;
   out_7091612482427988921[172] = 0;
   out_7091612482427988921[173] = 0;
   out_7091612482427988921[174] = 0;
   out_7091612482427988921[175] = 1.0;
   out_7091612482427988921[176] = 0;
   out_7091612482427988921[177] = 0;
   out_7091612482427988921[178] = 0;
   out_7091612482427988921[179] = 0;
   out_7091612482427988921[180] = 0;
   out_7091612482427988921[181] = 0;
   out_7091612482427988921[182] = 0;
   out_7091612482427988921[183] = 0;
   out_7091612482427988921[184] = 0;
   out_7091612482427988921[185] = 0;
   out_7091612482427988921[186] = 0;
   out_7091612482427988921[187] = 0;
   out_7091612482427988921[188] = 0;
   out_7091612482427988921[189] = 0;
   out_7091612482427988921[190] = 0;
   out_7091612482427988921[191] = 0;
   out_7091612482427988921[192] = 0;
   out_7091612482427988921[193] = 0;
   out_7091612482427988921[194] = 0;
   out_7091612482427988921[195] = 0;
   out_7091612482427988921[196] = 0;
   out_7091612482427988921[197] = 1.0;
   out_7091612482427988921[198] = 0;
   out_7091612482427988921[199] = 0;
   out_7091612482427988921[200] = 0;
   out_7091612482427988921[201] = 0;
   out_7091612482427988921[202] = 0;
   out_7091612482427988921[203] = 0;
   out_7091612482427988921[204] = 0;
   out_7091612482427988921[205] = 0;
   out_7091612482427988921[206] = 0;
   out_7091612482427988921[207] = 0;
   out_7091612482427988921[208] = 0;
   out_7091612482427988921[209] = 0;
   out_7091612482427988921[210] = 0;
   out_7091612482427988921[211] = 0;
   out_7091612482427988921[212] = 0;
   out_7091612482427988921[213] = 0;
   out_7091612482427988921[214] = 0;
   out_7091612482427988921[215] = 0;
   out_7091612482427988921[216] = 0;
   out_7091612482427988921[217] = 0;
   out_7091612482427988921[218] = 0;
   out_7091612482427988921[219] = 1.0;
   out_7091612482427988921[220] = 0;
   out_7091612482427988921[221] = 0;
   out_7091612482427988921[222] = 0;
   out_7091612482427988921[223] = 0;
   out_7091612482427988921[224] = 0;
   out_7091612482427988921[225] = 0;
   out_7091612482427988921[226] = 0;
   out_7091612482427988921[227] = 0;
   out_7091612482427988921[228] = 0;
   out_7091612482427988921[229] = 0;
   out_7091612482427988921[230] = 0;
   out_7091612482427988921[231] = 0;
   out_7091612482427988921[232] = 0;
   out_7091612482427988921[233] = 0;
   out_7091612482427988921[234] = 0;
   out_7091612482427988921[235] = 0;
   out_7091612482427988921[236] = 0;
   out_7091612482427988921[237] = 0;
   out_7091612482427988921[238] = 0;
   out_7091612482427988921[239] = 0;
   out_7091612482427988921[240] = 0;
   out_7091612482427988921[241] = 1.0;
   out_7091612482427988921[242] = 0;
   out_7091612482427988921[243] = 0;
   out_7091612482427988921[244] = 0;
   out_7091612482427988921[245] = 0;
   out_7091612482427988921[246] = 0;
   out_7091612482427988921[247] = 0;
   out_7091612482427988921[248] = 0;
   out_7091612482427988921[249] = 0;
   out_7091612482427988921[250] = 0;
   out_7091612482427988921[251] = 0;
   out_7091612482427988921[252] = 0;
   out_7091612482427988921[253] = 0;
   out_7091612482427988921[254] = 0;
   out_7091612482427988921[255] = 0;
   out_7091612482427988921[256] = 0;
   out_7091612482427988921[257] = 0;
   out_7091612482427988921[258] = 0;
   out_7091612482427988921[259] = 0;
   out_7091612482427988921[260] = 0;
   out_7091612482427988921[261] = 0;
   out_7091612482427988921[262] = 0;
   out_7091612482427988921[263] = 1.0;
   out_7091612482427988921[264] = 0;
   out_7091612482427988921[265] = 0;
   out_7091612482427988921[266] = 0;
   out_7091612482427988921[267] = 0;
   out_7091612482427988921[268] = 0;
   out_7091612482427988921[269] = 0;
   out_7091612482427988921[270] = 0;
   out_7091612482427988921[271] = 0;
   out_7091612482427988921[272] = 0;
   out_7091612482427988921[273] = 0;
   out_7091612482427988921[274] = 0;
   out_7091612482427988921[275] = 0;
   out_7091612482427988921[276] = 0;
   out_7091612482427988921[277] = 0;
   out_7091612482427988921[278] = 0;
   out_7091612482427988921[279] = 0;
   out_7091612482427988921[280] = 0;
   out_7091612482427988921[281] = 0;
   out_7091612482427988921[282] = 0;
   out_7091612482427988921[283] = 0;
   out_7091612482427988921[284] = 0;
   out_7091612482427988921[285] = 1.0;
   out_7091612482427988921[286] = 0;
   out_7091612482427988921[287] = 0;
   out_7091612482427988921[288] = 0;
   out_7091612482427988921[289] = 0;
   out_7091612482427988921[290] = 0;
   out_7091612482427988921[291] = 0;
   out_7091612482427988921[292] = 0;
   out_7091612482427988921[293] = 0;
   out_7091612482427988921[294] = 0;
   out_7091612482427988921[295] = 0;
   out_7091612482427988921[296] = 0;
   out_7091612482427988921[297] = 0;
   out_7091612482427988921[298] = 0;
   out_7091612482427988921[299] = 0;
   out_7091612482427988921[300] = 0;
   out_7091612482427988921[301] = 0;
   out_7091612482427988921[302] = 0;
   out_7091612482427988921[303] = 0;
   out_7091612482427988921[304] = 0;
   out_7091612482427988921[305] = 0;
   out_7091612482427988921[306] = 0;
   out_7091612482427988921[307] = 1.0;
   out_7091612482427988921[308] = 0;
   out_7091612482427988921[309] = 0;
   out_7091612482427988921[310] = 0;
   out_7091612482427988921[311] = 0;
   out_7091612482427988921[312] = 0;
   out_7091612482427988921[313] = 0;
   out_7091612482427988921[314] = 0;
   out_7091612482427988921[315] = 0;
   out_7091612482427988921[316] = 0;
   out_7091612482427988921[317] = 0;
   out_7091612482427988921[318] = 0;
   out_7091612482427988921[319] = 0;
   out_7091612482427988921[320] = 0;
   out_7091612482427988921[321] = 0;
   out_7091612482427988921[322] = 0;
   out_7091612482427988921[323] = 0;
   out_7091612482427988921[324] = 0;
   out_7091612482427988921[325] = 0;
   out_7091612482427988921[326] = 0;
   out_7091612482427988921[327] = 0;
   out_7091612482427988921[328] = 0;
   out_7091612482427988921[329] = 1.0;
   out_7091612482427988921[330] = 0;
   out_7091612482427988921[331] = 0;
   out_7091612482427988921[332] = 0;
   out_7091612482427988921[333] = 0;
   out_7091612482427988921[334] = 0;
   out_7091612482427988921[335] = 0;
   out_7091612482427988921[336] = 0;
   out_7091612482427988921[337] = 0;
   out_7091612482427988921[338] = 0;
   out_7091612482427988921[339] = 0;
   out_7091612482427988921[340] = 0;
   out_7091612482427988921[341] = 0;
   out_7091612482427988921[342] = 0;
   out_7091612482427988921[343] = 0;
   out_7091612482427988921[344] = 0;
   out_7091612482427988921[345] = 0;
   out_7091612482427988921[346] = 0;
   out_7091612482427988921[347] = 0;
   out_7091612482427988921[348] = 0;
   out_7091612482427988921[349] = 0;
   out_7091612482427988921[350] = 0;
   out_7091612482427988921[351] = 1.0;
   out_7091612482427988921[352] = 0;
   out_7091612482427988921[353] = 0;
   out_7091612482427988921[354] = 0;
   out_7091612482427988921[355] = 0;
   out_7091612482427988921[356] = 0;
   out_7091612482427988921[357] = 0;
   out_7091612482427988921[358] = 0;
   out_7091612482427988921[359] = 0;
   out_7091612482427988921[360] = 0;
   out_7091612482427988921[361] = 0;
   out_7091612482427988921[362] = 0;
   out_7091612482427988921[363] = 0;
   out_7091612482427988921[364] = 0;
   out_7091612482427988921[365] = 0;
   out_7091612482427988921[366] = 0;
   out_7091612482427988921[367] = 0;
   out_7091612482427988921[368] = 0;
   out_7091612482427988921[369] = 0;
   out_7091612482427988921[370] = 0;
   out_7091612482427988921[371] = 0;
   out_7091612482427988921[372] = 0;
   out_7091612482427988921[373] = 1.0;
   out_7091612482427988921[374] = 0;
   out_7091612482427988921[375] = 0;
   out_7091612482427988921[376] = 0;
   out_7091612482427988921[377] = 0;
   out_7091612482427988921[378] = 0;
   out_7091612482427988921[379] = 0;
   out_7091612482427988921[380] = 0;
   out_7091612482427988921[381] = 0;
   out_7091612482427988921[382] = 0;
   out_7091612482427988921[383] = 0;
   out_7091612482427988921[384] = 0;
   out_7091612482427988921[385] = 0;
   out_7091612482427988921[386] = 0;
   out_7091612482427988921[387] = 0;
   out_7091612482427988921[388] = 0;
   out_7091612482427988921[389] = 0;
   out_7091612482427988921[390] = 0;
   out_7091612482427988921[391] = 0;
   out_7091612482427988921[392] = 0;
   out_7091612482427988921[393] = 0;
   out_7091612482427988921[394] = 0;
   out_7091612482427988921[395] = 1.0;
   out_7091612482427988921[396] = 0;
   out_7091612482427988921[397] = 0;
   out_7091612482427988921[398] = 0;
   out_7091612482427988921[399] = 0;
   out_7091612482427988921[400] = 0;
   out_7091612482427988921[401] = 0;
   out_7091612482427988921[402] = 0;
   out_7091612482427988921[403] = 0;
   out_7091612482427988921[404] = 0;
   out_7091612482427988921[405] = 0;
   out_7091612482427988921[406] = 0;
   out_7091612482427988921[407] = 0;
   out_7091612482427988921[408] = 0;
   out_7091612482427988921[409] = 0;
   out_7091612482427988921[410] = 0;
   out_7091612482427988921[411] = 0;
   out_7091612482427988921[412] = 0;
   out_7091612482427988921[413] = 0;
   out_7091612482427988921[414] = 0;
   out_7091612482427988921[415] = 0;
   out_7091612482427988921[416] = 0;
   out_7091612482427988921[417] = 1.0;
   out_7091612482427988921[418] = 0;
   out_7091612482427988921[419] = 0;
   out_7091612482427988921[420] = 0;
   out_7091612482427988921[421] = 0;
   out_7091612482427988921[422] = 0;
   out_7091612482427988921[423] = 0;
   out_7091612482427988921[424] = 0;
   out_7091612482427988921[425] = 0;
   out_7091612482427988921[426] = 0;
   out_7091612482427988921[427] = 0;
   out_7091612482427988921[428] = 0;
   out_7091612482427988921[429] = 0;
   out_7091612482427988921[430] = 0;
   out_7091612482427988921[431] = 0;
   out_7091612482427988921[432] = 0;
   out_7091612482427988921[433] = 0;
   out_7091612482427988921[434] = 0;
   out_7091612482427988921[435] = 0;
   out_7091612482427988921[436] = 0;
   out_7091612482427988921[437] = 0;
   out_7091612482427988921[438] = 0;
   out_7091612482427988921[439] = 1.0;
   out_7091612482427988921[440] = 0;
   out_7091612482427988921[441] = 0;
   out_7091612482427988921[442] = 0;
   out_7091612482427988921[443] = 0;
   out_7091612482427988921[444] = 0;
   out_7091612482427988921[445] = 0;
   out_7091612482427988921[446] = 0;
   out_7091612482427988921[447] = 0;
   out_7091612482427988921[448] = 0;
   out_7091612482427988921[449] = 0;
   out_7091612482427988921[450] = 0;
   out_7091612482427988921[451] = 0;
   out_7091612482427988921[452] = 0;
   out_7091612482427988921[453] = 0;
   out_7091612482427988921[454] = 0;
   out_7091612482427988921[455] = 0;
   out_7091612482427988921[456] = 0;
   out_7091612482427988921[457] = 0;
   out_7091612482427988921[458] = 0;
   out_7091612482427988921[459] = 0;
   out_7091612482427988921[460] = 0;
   out_7091612482427988921[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8119975525939641860) {
   out_8119975525939641860[0] = dt*state[7] + state[0];
   out_8119975525939641860[1] = dt*state[8] + state[1];
   out_8119975525939641860[2] = dt*state[9] + state[2];
   out_8119975525939641860[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8119975525939641860[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8119975525939641860[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8119975525939641860[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8119975525939641860[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8119975525939641860[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8119975525939641860[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8119975525939641860[10] = state[10];
   out_8119975525939641860[11] = state[11];
   out_8119975525939641860[12] = state[12];
   out_8119975525939641860[13] = state[13];
   out_8119975525939641860[14] = state[14];
   out_8119975525939641860[15] = state[15];
   out_8119975525939641860[16] = state[16];
   out_8119975525939641860[17] = state[17];
   out_8119975525939641860[18] = state[18];
   out_8119975525939641860[19] = state[19];
   out_8119975525939641860[20] = state[20];
   out_8119975525939641860[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2642813710906309799) {
   out_2642813710906309799[0] = 1;
   out_2642813710906309799[1] = 0;
   out_2642813710906309799[2] = 0;
   out_2642813710906309799[3] = 0;
   out_2642813710906309799[4] = 0;
   out_2642813710906309799[5] = 0;
   out_2642813710906309799[6] = dt;
   out_2642813710906309799[7] = 0;
   out_2642813710906309799[8] = 0;
   out_2642813710906309799[9] = 0;
   out_2642813710906309799[10] = 0;
   out_2642813710906309799[11] = 0;
   out_2642813710906309799[12] = 0;
   out_2642813710906309799[13] = 0;
   out_2642813710906309799[14] = 0;
   out_2642813710906309799[15] = 0;
   out_2642813710906309799[16] = 0;
   out_2642813710906309799[17] = 0;
   out_2642813710906309799[18] = 0;
   out_2642813710906309799[19] = 0;
   out_2642813710906309799[20] = 0;
   out_2642813710906309799[21] = 0;
   out_2642813710906309799[22] = 1;
   out_2642813710906309799[23] = 0;
   out_2642813710906309799[24] = 0;
   out_2642813710906309799[25] = 0;
   out_2642813710906309799[26] = 0;
   out_2642813710906309799[27] = 0;
   out_2642813710906309799[28] = dt;
   out_2642813710906309799[29] = 0;
   out_2642813710906309799[30] = 0;
   out_2642813710906309799[31] = 0;
   out_2642813710906309799[32] = 0;
   out_2642813710906309799[33] = 0;
   out_2642813710906309799[34] = 0;
   out_2642813710906309799[35] = 0;
   out_2642813710906309799[36] = 0;
   out_2642813710906309799[37] = 0;
   out_2642813710906309799[38] = 0;
   out_2642813710906309799[39] = 0;
   out_2642813710906309799[40] = 0;
   out_2642813710906309799[41] = 0;
   out_2642813710906309799[42] = 0;
   out_2642813710906309799[43] = 0;
   out_2642813710906309799[44] = 1;
   out_2642813710906309799[45] = 0;
   out_2642813710906309799[46] = 0;
   out_2642813710906309799[47] = 0;
   out_2642813710906309799[48] = 0;
   out_2642813710906309799[49] = 0;
   out_2642813710906309799[50] = dt;
   out_2642813710906309799[51] = 0;
   out_2642813710906309799[52] = 0;
   out_2642813710906309799[53] = 0;
   out_2642813710906309799[54] = 0;
   out_2642813710906309799[55] = 0;
   out_2642813710906309799[56] = 0;
   out_2642813710906309799[57] = 0;
   out_2642813710906309799[58] = 0;
   out_2642813710906309799[59] = 0;
   out_2642813710906309799[60] = 0;
   out_2642813710906309799[61] = 0;
   out_2642813710906309799[62] = 0;
   out_2642813710906309799[63] = 0;
   out_2642813710906309799[64] = 0;
   out_2642813710906309799[65] = 0;
   out_2642813710906309799[66] = 1;
   out_2642813710906309799[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2642813710906309799[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2642813710906309799[69] = 0;
   out_2642813710906309799[70] = 0;
   out_2642813710906309799[71] = 0;
   out_2642813710906309799[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2642813710906309799[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2642813710906309799[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2642813710906309799[75] = 0;
   out_2642813710906309799[76] = 0;
   out_2642813710906309799[77] = 0;
   out_2642813710906309799[78] = 0;
   out_2642813710906309799[79] = 0;
   out_2642813710906309799[80] = 0;
   out_2642813710906309799[81] = 0;
   out_2642813710906309799[82] = 0;
   out_2642813710906309799[83] = 0;
   out_2642813710906309799[84] = 0;
   out_2642813710906309799[85] = 0;
   out_2642813710906309799[86] = 0;
   out_2642813710906309799[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2642813710906309799[88] = 1;
   out_2642813710906309799[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2642813710906309799[90] = 0;
   out_2642813710906309799[91] = 0;
   out_2642813710906309799[92] = 0;
   out_2642813710906309799[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2642813710906309799[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2642813710906309799[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2642813710906309799[96] = 0;
   out_2642813710906309799[97] = 0;
   out_2642813710906309799[98] = 0;
   out_2642813710906309799[99] = 0;
   out_2642813710906309799[100] = 0;
   out_2642813710906309799[101] = 0;
   out_2642813710906309799[102] = 0;
   out_2642813710906309799[103] = 0;
   out_2642813710906309799[104] = 0;
   out_2642813710906309799[105] = 0;
   out_2642813710906309799[106] = 0;
   out_2642813710906309799[107] = 0;
   out_2642813710906309799[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2642813710906309799[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2642813710906309799[110] = 1;
   out_2642813710906309799[111] = 0;
   out_2642813710906309799[112] = 0;
   out_2642813710906309799[113] = 0;
   out_2642813710906309799[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2642813710906309799[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2642813710906309799[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2642813710906309799[117] = 0;
   out_2642813710906309799[118] = 0;
   out_2642813710906309799[119] = 0;
   out_2642813710906309799[120] = 0;
   out_2642813710906309799[121] = 0;
   out_2642813710906309799[122] = 0;
   out_2642813710906309799[123] = 0;
   out_2642813710906309799[124] = 0;
   out_2642813710906309799[125] = 0;
   out_2642813710906309799[126] = 0;
   out_2642813710906309799[127] = 0;
   out_2642813710906309799[128] = 0;
   out_2642813710906309799[129] = 0;
   out_2642813710906309799[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2642813710906309799[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2642813710906309799[132] = 1;
   out_2642813710906309799[133] = 0;
   out_2642813710906309799[134] = 0;
   out_2642813710906309799[135] = 0;
   out_2642813710906309799[136] = 0;
   out_2642813710906309799[137] = 0;
   out_2642813710906309799[138] = 0;
   out_2642813710906309799[139] = 0;
   out_2642813710906309799[140] = 0;
   out_2642813710906309799[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2642813710906309799[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2642813710906309799[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2642813710906309799[144] = 0;
   out_2642813710906309799[145] = 0;
   out_2642813710906309799[146] = 0;
   out_2642813710906309799[147] = 0;
   out_2642813710906309799[148] = 0;
   out_2642813710906309799[149] = 0;
   out_2642813710906309799[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2642813710906309799[151] = 0;
   out_2642813710906309799[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2642813710906309799[153] = 0;
   out_2642813710906309799[154] = 1;
   out_2642813710906309799[155] = 0;
   out_2642813710906309799[156] = 0;
   out_2642813710906309799[157] = 0;
   out_2642813710906309799[158] = 0;
   out_2642813710906309799[159] = 0;
   out_2642813710906309799[160] = 0;
   out_2642813710906309799[161] = 0;
   out_2642813710906309799[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2642813710906309799[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2642813710906309799[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2642813710906309799[165] = 0;
   out_2642813710906309799[166] = 0;
   out_2642813710906309799[167] = 0;
   out_2642813710906309799[168] = 0;
   out_2642813710906309799[169] = 0;
   out_2642813710906309799[170] = 0;
   out_2642813710906309799[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2642813710906309799[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2642813710906309799[173] = 0;
   out_2642813710906309799[174] = 0;
   out_2642813710906309799[175] = 0;
   out_2642813710906309799[176] = 1;
   out_2642813710906309799[177] = 0;
   out_2642813710906309799[178] = 0;
   out_2642813710906309799[179] = 0;
   out_2642813710906309799[180] = 0;
   out_2642813710906309799[181] = 0;
   out_2642813710906309799[182] = 0;
   out_2642813710906309799[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2642813710906309799[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2642813710906309799[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2642813710906309799[186] = 0;
   out_2642813710906309799[187] = 0;
   out_2642813710906309799[188] = 0;
   out_2642813710906309799[189] = 0;
   out_2642813710906309799[190] = 0;
   out_2642813710906309799[191] = 0;
   out_2642813710906309799[192] = 0;
   out_2642813710906309799[193] = 0;
   out_2642813710906309799[194] = 0;
   out_2642813710906309799[195] = 0;
   out_2642813710906309799[196] = 0;
   out_2642813710906309799[197] = 0;
   out_2642813710906309799[198] = 1;
   out_2642813710906309799[199] = 0;
   out_2642813710906309799[200] = 0;
   out_2642813710906309799[201] = 0;
   out_2642813710906309799[202] = 0;
   out_2642813710906309799[203] = 0;
   out_2642813710906309799[204] = 0;
   out_2642813710906309799[205] = 0;
   out_2642813710906309799[206] = 0;
   out_2642813710906309799[207] = 0;
   out_2642813710906309799[208] = 0;
   out_2642813710906309799[209] = 0;
   out_2642813710906309799[210] = 0;
   out_2642813710906309799[211] = 0;
   out_2642813710906309799[212] = 0;
   out_2642813710906309799[213] = 0;
   out_2642813710906309799[214] = 0;
   out_2642813710906309799[215] = 0;
   out_2642813710906309799[216] = 0;
   out_2642813710906309799[217] = 0;
   out_2642813710906309799[218] = 0;
   out_2642813710906309799[219] = 0;
   out_2642813710906309799[220] = 1;
   out_2642813710906309799[221] = 0;
   out_2642813710906309799[222] = 0;
   out_2642813710906309799[223] = 0;
   out_2642813710906309799[224] = 0;
   out_2642813710906309799[225] = 0;
   out_2642813710906309799[226] = 0;
   out_2642813710906309799[227] = 0;
   out_2642813710906309799[228] = 0;
   out_2642813710906309799[229] = 0;
   out_2642813710906309799[230] = 0;
   out_2642813710906309799[231] = 0;
   out_2642813710906309799[232] = 0;
   out_2642813710906309799[233] = 0;
   out_2642813710906309799[234] = 0;
   out_2642813710906309799[235] = 0;
   out_2642813710906309799[236] = 0;
   out_2642813710906309799[237] = 0;
   out_2642813710906309799[238] = 0;
   out_2642813710906309799[239] = 0;
   out_2642813710906309799[240] = 0;
   out_2642813710906309799[241] = 0;
   out_2642813710906309799[242] = 1;
   out_2642813710906309799[243] = 0;
   out_2642813710906309799[244] = 0;
   out_2642813710906309799[245] = 0;
   out_2642813710906309799[246] = 0;
   out_2642813710906309799[247] = 0;
   out_2642813710906309799[248] = 0;
   out_2642813710906309799[249] = 0;
   out_2642813710906309799[250] = 0;
   out_2642813710906309799[251] = 0;
   out_2642813710906309799[252] = 0;
   out_2642813710906309799[253] = 0;
   out_2642813710906309799[254] = 0;
   out_2642813710906309799[255] = 0;
   out_2642813710906309799[256] = 0;
   out_2642813710906309799[257] = 0;
   out_2642813710906309799[258] = 0;
   out_2642813710906309799[259] = 0;
   out_2642813710906309799[260] = 0;
   out_2642813710906309799[261] = 0;
   out_2642813710906309799[262] = 0;
   out_2642813710906309799[263] = 0;
   out_2642813710906309799[264] = 1;
   out_2642813710906309799[265] = 0;
   out_2642813710906309799[266] = 0;
   out_2642813710906309799[267] = 0;
   out_2642813710906309799[268] = 0;
   out_2642813710906309799[269] = 0;
   out_2642813710906309799[270] = 0;
   out_2642813710906309799[271] = 0;
   out_2642813710906309799[272] = 0;
   out_2642813710906309799[273] = 0;
   out_2642813710906309799[274] = 0;
   out_2642813710906309799[275] = 0;
   out_2642813710906309799[276] = 0;
   out_2642813710906309799[277] = 0;
   out_2642813710906309799[278] = 0;
   out_2642813710906309799[279] = 0;
   out_2642813710906309799[280] = 0;
   out_2642813710906309799[281] = 0;
   out_2642813710906309799[282] = 0;
   out_2642813710906309799[283] = 0;
   out_2642813710906309799[284] = 0;
   out_2642813710906309799[285] = 0;
   out_2642813710906309799[286] = 1;
   out_2642813710906309799[287] = 0;
   out_2642813710906309799[288] = 0;
   out_2642813710906309799[289] = 0;
   out_2642813710906309799[290] = 0;
   out_2642813710906309799[291] = 0;
   out_2642813710906309799[292] = 0;
   out_2642813710906309799[293] = 0;
   out_2642813710906309799[294] = 0;
   out_2642813710906309799[295] = 0;
   out_2642813710906309799[296] = 0;
   out_2642813710906309799[297] = 0;
   out_2642813710906309799[298] = 0;
   out_2642813710906309799[299] = 0;
   out_2642813710906309799[300] = 0;
   out_2642813710906309799[301] = 0;
   out_2642813710906309799[302] = 0;
   out_2642813710906309799[303] = 0;
   out_2642813710906309799[304] = 0;
   out_2642813710906309799[305] = 0;
   out_2642813710906309799[306] = 0;
   out_2642813710906309799[307] = 0;
   out_2642813710906309799[308] = 1;
   out_2642813710906309799[309] = 0;
   out_2642813710906309799[310] = 0;
   out_2642813710906309799[311] = 0;
   out_2642813710906309799[312] = 0;
   out_2642813710906309799[313] = 0;
   out_2642813710906309799[314] = 0;
   out_2642813710906309799[315] = 0;
   out_2642813710906309799[316] = 0;
   out_2642813710906309799[317] = 0;
   out_2642813710906309799[318] = 0;
   out_2642813710906309799[319] = 0;
   out_2642813710906309799[320] = 0;
   out_2642813710906309799[321] = 0;
   out_2642813710906309799[322] = 0;
   out_2642813710906309799[323] = 0;
   out_2642813710906309799[324] = 0;
   out_2642813710906309799[325] = 0;
   out_2642813710906309799[326] = 0;
   out_2642813710906309799[327] = 0;
   out_2642813710906309799[328] = 0;
   out_2642813710906309799[329] = 0;
   out_2642813710906309799[330] = 1;
   out_2642813710906309799[331] = 0;
   out_2642813710906309799[332] = 0;
   out_2642813710906309799[333] = 0;
   out_2642813710906309799[334] = 0;
   out_2642813710906309799[335] = 0;
   out_2642813710906309799[336] = 0;
   out_2642813710906309799[337] = 0;
   out_2642813710906309799[338] = 0;
   out_2642813710906309799[339] = 0;
   out_2642813710906309799[340] = 0;
   out_2642813710906309799[341] = 0;
   out_2642813710906309799[342] = 0;
   out_2642813710906309799[343] = 0;
   out_2642813710906309799[344] = 0;
   out_2642813710906309799[345] = 0;
   out_2642813710906309799[346] = 0;
   out_2642813710906309799[347] = 0;
   out_2642813710906309799[348] = 0;
   out_2642813710906309799[349] = 0;
   out_2642813710906309799[350] = 0;
   out_2642813710906309799[351] = 0;
   out_2642813710906309799[352] = 1;
   out_2642813710906309799[353] = 0;
   out_2642813710906309799[354] = 0;
   out_2642813710906309799[355] = 0;
   out_2642813710906309799[356] = 0;
   out_2642813710906309799[357] = 0;
   out_2642813710906309799[358] = 0;
   out_2642813710906309799[359] = 0;
   out_2642813710906309799[360] = 0;
   out_2642813710906309799[361] = 0;
   out_2642813710906309799[362] = 0;
   out_2642813710906309799[363] = 0;
   out_2642813710906309799[364] = 0;
   out_2642813710906309799[365] = 0;
   out_2642813710906309799[366] = 0;
   out_2642813710906309799[367] = 0;
   out_2642813710906309799[368] = 0;
   out_2642813710906309799[369] = 0;
   out_2642813710906309799[370] = 0;
   out_2642813710906309799[371] = 0;
   out_2642813710906309799[372] = 0;
   out_2642813710906309799[373] = 0;
   out_2642813710906309799[374] = 1;
   out_2642813710906309799[375] = 0;
   out_2642813710906309799[376] = 0;
   out_2642813710906309799[377] = 0;
   out_2642813710906309799[378] = 0;
   out_2642813710906309799[379] = 0;
   out_2642813710906309799[380] = 0;
   out_2642813710906309799[381] = 0;
   out_2642813710906309799[382] = 0;
   out_2642813710906309799[383] = 0;
   out_2642813710906309799[384] = 0;
   out_2642813710906309799[385] = 0;
   out_2642813710906309799[386] = 0;
   out_2642813710906309799[387] = 0;
   out_2642813710906309799[388] = 0;
   out_2642813710906309799[389] = 0;
   out_2642813710906309799[390] = 0;
   out_2642813710906309799[391] = 0;
   out_2642813710906309799[392] = 0;
   out_2642813710906309799[393] = 0;
   out_2642813710906309799[394] = 0;
   out_2642813710906309799[395] = 0;
   out_2642813710906309799[396] = 1;
   out_2642813710906309799[397] = 0;
   out_2642813710906309799[398] = 0;
   out_2642813710906309799[399] = 0;
   out_2642813710906309799[400] = 0;
   out_2642813710906309799[401] = 0;
   out_2642813710906309799[402] = 0;
   out_2642813710906309799[403] = 0;
   out_2642813710906309799[404] = 0;
   out_2642813710906309799[405] = 0;
   out_2642813710906309799[406] = 0;
   out_2642813710906309799[407] = 0;
   out_2642813710906309799[408] = 0;
   out_2642813710906309799[409] = 0;
   out_2642813710906309799[410] = 0;
   out_2642813710906309799[411] = 0;
   out_2642813710906309799[412] = 0;
   out_2642813710906309799[413] = 0;
   out_2642813710906309799[414] = 0;
   out_2642813710906309799[415] = 0;
   out_2642813710906309799[416] = 0;
   out_2642813710906309799[417] = 0;
   out_2642813710906309799[418] = 1;
   out_2642813710906309799[419] = 0;
   out_2642813710906309799[420] = 0;
   out_2642813710906309799[421] = 0;
   out_2642813710906309799[422] = 0;
   out_2642813710906309799[423] = 0;
   out_2642813710906309799[424] = 0;
   out_2642813710906309799[425] = 0;
   out_2642813710906309799[426] = 0;
   out_2642813710906309799[427] = 0;
   out_2642813710906309799[428] = 0;
   out_2642813710906309799[429] = 0;
   out_2642813710906309799[430] = 0;
   out_2642813710906309799[431] = 0;
   out_2642813710906309799[432] = 0;
   out_2642813710906309799[433] = 0;
   out_2642813710906309799[434] = 0;
   out_2642813710906309799[435] = 0;
   out_2642813710906309799[436] = 0;
   out_2642813710906309799[437] = 0;
   out_2642813710906309799[438] = 0;
   out_2642813710906309799[439] = 0;
   out_2642813710906309799[440] = 1;
}
void h_4(double *state, double *unused, double *out_8718177427955779130) {
   out_8718177427955779130[0] = state[10] + state[13];
   out_8718177427955779130[1] = state[11] + state[14];
   out_8718177427955779130[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4013255994484741449) {
   out_4013255994484741449[0] = 0;
   out_4013255994484741449[1] = 0;
   out_4013255994484741449[2] = 0;
   out_4013255994484741449[3] = 0;
   out_4013255994484741449[4] = 0;
   out_4013255994484741449[5] = 0;
   out_4013255994484741449[6] = 0;
   out_4013255994484741449[7] = 0;
   out_4013255994484741449[8] = 0;
   out_4013255994484741449[9] = 0;
   out_4013255994484741449[10] = 1;
   out_4013255994484741449[11] = 0;
   out_4013255994484741449[12] = 0;
   out_4013255994484741449[13] = 1;
   out_4013255994484741449[14] = 0;
   out_4013255994484741449[15] = 0;
   out_4013255994484741449[16] = 0;
   out_4013255994484741449[17] = 0;
   out_4013255994484741449[18] = 0;
   out_4013255994484741449[19] = 0;
   out_4013255994484741449[20] = 0;
   out_4013255994484741449[21] = 0;
   out_4013255994484741449[22] = 0;
   out_4013255994484741449[23] = 0;
   out_4013255994484741449[24] = 0;
   out_4013255994484741449[25] = 0;
   out_4013255994484741449[26] = 0;
   out_4013255994484741449[27] = 0;
   out_4013255994484741449[28] = 0;
   out_4013255994484741449[29] = 0;
   out_4013255994484741449[30] = 0;
   out_4013255994484741449[31] = 0;
   out_4013255994484741449[32] = 0;
   out_4013255994484741449[33] = 1;
   out_4013255994484741449[34] = 0;
   out_4013255994484741449[35] = 0;
   out_4013255994484741449[36] = 1;
   out_4013255994484741449[37] = 0;
   out_4013255994484741449[38] = 0;
   out_4013255994484741449[39] = 0;
   out_4013255994484741449[40] = 0;
   out_4013255994484741449[41] = 0;
   out_4013255994484741449[42] = 0;
   out_4013255994484741449[43] = 0;
   out_4013255994484741449[44] = 0;
   out_4013255994484741449[45] = 0;
   out_4013255994484741449[46] = 0;
   out_4013255994484741449[47] = 0;
   out_4013255994484741449[48] = 0;
   out_4013255994484741449[49] = 0;
   out_4013255994484741449[50] = 0;
   out_4013255994484741449[51] = 0;
   out_4013255994484741449[52] = 0;
   out_4013255994484741449[53] = 0;
   out_4013255994484741449[54] = 0;
   out_4013255994484741449[55] = 0;
   out_4013255994484741449[56] = 1;
   out_4013255994484741449[57] = 0;
   out_4013255994484741449[58] = 0;
   out_4013255994484741449[59] = 1;
   out_4013255994484741449[60] = 0;
   out_4013255994484741449[61] = 0;
   out_4013255994484741449[62] = 0;
   out_4013255994484741449[63] = 0;
   out_4013255994484741449[64] = 0;
   out_4013255994484741449[65] = 0;
}
void h_9(double *state, double *unused, double *out_1394785126297930511) {
   out_1394785126297930511[0] = state[10];
   out_1394785126297930511[1] = state[11];
   out_1394785126297930511[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7146269143960362697) {
   out_7146269143960362697[0] = 0;
   out_7146269143960362697[1] = 0;
   out_7146269143960362697[2] = 0;
   out_7146269143960362697[3] = 0;
   out_7146269143960362697[4] = 0;
   out_7146269143960362697[5] = 0;
   out_7146269143960362697[6] = 0;
   out_7146269143960362697[7] = 0;
   out_7146269143960362697[8] = 0;
   out_7146269143960362697[9] = 0;
   out_7146269143960362697[10] = 1;
   out_7146269143960362697[11] = 0;
   out_7146269143960362697[12] = 0;
   out_7146269143960362697[13] = 0;
   out_7146269143960362697[14] = 0;
   out_7146269143960362697[15] = 0;
   out_7146269143960362697[16] = 0;
   out_7146269143960362697[17] = 0;
   out_7146269143960362697[18] = 0;
   out_7146269143960362697[19] = 0;
   out_7146269143960362697[20] = 0;
   out_7146269143960362697[21] = 0;
   out_7146269143960362697[22] = 0;
   out_7146269143960362697[23] = 0;
   out_7146269143960362697[24] = 0;
   out_7146269143960362697[25] = 0;
   out_7146269143960362697[26] = 0;
   out_7146269143960362697[27] = 0;
   out_7146269143960362697[28] = 0;
   out_7146269143960362697[29] = 0;
   out_7146269143960362697[30] = 0;
   out_7146269143960362697[31] = 0;
   out_7146269143960362697[32] = 0;
   out_7146269143960362697[33] = 1;
   out_7146269143960362697[34] = 0;
   out_7146269143960362697[35] = 0;
   out_7146269143960362697[36] = 0;
   out_7146269143960362697[37] = 0;
   out_7146269143960362697[38] = 0;
   out_7146269143960362697[39] = 0;
   out_7146269143960362697[40] = 0;
   out_7146269143960362697[41] = 0;
   out_7146269143960362697[42] = 0;
   out_7146269143960362697[43] = 0;
   out_7146269143960362697[44] = 0;
   out_7146269143960362697[45] = 0;
   out_7146269143960362697[46] = 0;
   out_7146269143960362697[47] = 0;
   out_7146269143960362697[48] = 0;
   out_7146269143960362697[49] = 0;
   out_7146269143960362697[50] = 0;
   out_7146269143960362697[51] = 0;
   out_7146269143960362697[52] = 0;
   out_7146269143960362697[53] = 0;
   out_7146269143960362697[54] = 0;
   out_7146269143960362697[55] = 0;
   out_7146269143960362697[56] = 1;
   out_7146269143960362697[57] = 0;
   out_7146269143960362697[58] = 0;
   out_7146269143960362697[59] = 0;
   out_7146269143960362697[60] = 0;
   out_7146269143960362697[61] = 0;
   out_7146269143960362697[62] = 0;
   out_7146269143960362697[63] = 0;
   out_7146269143960362697[64] = 0;
   out_7146269143960362697[65] = 0;
}
void h_10(double *state, double *unused, double *out_444825269738442303) {
   out_444825269738442303[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_444825269738442303[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_444825269738442303[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2888002740780520945) {
   out_2888002740780520945[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2888002740780520945[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2888002740780520945[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2888002740780520945[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2888002740780520945[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2888002740780520945[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2888002740780520945[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2888002740780520945[7] = 0;
   out_2888002740780520945[8] = 0;
   out_2888002740780520945[9] = 0;
   out_2888002740780520945[10] = 0;
   out_2888002740780520945[11] = 0;
   out_2888002740780520945[12] = 0;
   out_2888002740780520945[13] = 0;
   out_2888002740780520945[14] = 0;
   out_2888002740780520945[15] = 0;
   out_2888002740780520945[16] = 1;
   out_2888002740780520945[17] = 0;
   out_2888002740780520945[18] = 0;
   out_2888002740780520945[19] = 1;
   out_2888002740780520945[20] = 0;
   out_2888002740780520945[21] = 0;
   out_2888002740780520945[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2888002740780520945[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2888002740780520945[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2888002740780520945[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2888002740780520945[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2888002740780520945[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2888002740780520945[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2888002740780520945[29] = 0;
   out_2888002740780520945[30] = 0;
   out_2888002740780520945[31] = 0;
   out_2888002740780520945[32] = 0;
   out_2888002740780520945[33] = 0;
   out_2888002740780520945[34] = 0;
   out_2888002740780520945[35] = 0;
   out_2888002740780520945[36] = 0;
   out_2888002740780520945[37] = 0;
   out_2888002740780520945[38] = 0;
   out_2888002740780520945[39] = 1;
   out_2888002740780520945[40] = 0;
   out_2888002740780520945[41] = 0;
   out_2888002740780520945[42] = 1;
   out_2888002740780520945[43] = 0;
   out_2888002740780520945[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2888002740780520945[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2888002740780520945[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2888002740780520945[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2888002740780520945[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2888002740780520945[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2888002740780520945[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2888002740780520945[51] = 0;
   out_2888002740780520945[52] = 0;
   out_2888002740780520945[53] = 0;
   out_2888002740780520945[54] = 0;
   out_2888002740780520945[55] = 0;
   out_2888002740780520945[56] = 0;
   out_2888002740780520945[57] = 0;
   out_2888002740780520945[58] = 0;
   out_2888002740780520945[59] = 0;
   out_2888002740780520945[60] = 0;
   out_2888002740780520945[61] = 0;
   out_2888002740780520945[62] = 1;
   out_2888002740780520945[63] = 0;
   out_2888002740780520945[64] = 0;
   out_2888002740780520945[65] = 1;
}
void h_12(double *state, double *unused, double *out_3246430753777309875) {
   out_3246430753777309875[0] = state[0];
   out_3246430753777309875[1] = state[1];
   out_3246430753777309875[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2368002382557991547) {
   out_2368002382557991547[0] = 1;
   out_2368002382557991547[1] = 0;
   out_2368002382557991547[2] = 0;
   out_2368002382557991547[3] = 0;
   out_2368002382557991547[4] = 0;
   out_2368002382557991547[5] = 0;
   out_2368002382557991547[6] = 0;
   out_2368002382557991547[7] = 0;
   out_2368002382557991547[8] = 0;
   out_2368002382557991547[9] = 0;
   out_2368002382557991547[10] = 0;
   out_2368002382557991547[11] = 0;
   out_2368002382557991547[12] = 0;
   out_2368002382557991547[13] = 0;
   out_2368002382557991547[14] = 0;
   out_2368002382557991547[15] = 0;
   out_2368002382557991547[16] = 0;
   out_2368002382557991547[17] = 0;
   out_2368002382557991547[18] = 0;
   out_2368002382557991547[19] = 0;
   out_2368002382557991547[20] = 0;
   out_2368002382557991547[21] = 0;
   out_2368002382557991547[22] = 0;
   out_2368002382557991547[23] = 1;
   out_2368002382557991547[24] = 0;
   out_2368002382557991547[25] = 0;
   out_2368002382557991547[26] = 0;
   out_2368002382557991547[27] = 0;
   out_2368002382557991547[28] = 0;
   out_2368002382557991547[29] = 0;
   out_2368002382557991547[30] = 0;
   out_2368002382557991547[31] = 0;
   out_2368002382557991547[32] = 0;
   out_2368002382557991547[33] = 0;
   out_2368002382557991547[34] = 0;
   out_2368002382557991547[35] = 0;
   out_2368002382557991547[36] = 0;
   out_2368002382557991547[37] = 0;
   out_2368002382557991547[38] = 0;
   out_2368002382557991547[39] = 0;
   out_2368002382557991547[40] = 0;
   out_2368002382557991547[41] = 0;
   out_2368002382557991547[42] = 0;
   out_2368002382557991547[43] = 0;
   out_2368002382557991547[44] = 0;
   out_2368002382557991547[45] = 0;
   out_2368002382557991547[46] = 1;
   out_2368002382557991547[47] = 0;
   out_2368002382557991547[48] = 0;
   out_2368002382557991547[49] = 0;
   out_2368002382557991547[50] = 0;
   out_2368002382557991547[51] = 0;
   out_2368002382557991547[52] = 0;
   out_2368002382557991547[53] = 0;
   out_2368002382557991547[54] = 0;
   out_2368002382557991547[55] = 0;
   out_2368002382557991547[56] = 0;
   out_2368002382557991547[57] = 0;
   out_2368002382557991547[58] = 0;
   out_2368002382557991547[59] = 0;
   out_2368002382557991547[60] = 0;
   out_2368002382557991547[61] = 0;
   out_2368002382557991547[62] = 0;
   out_2368002382557991547[63] = 0;
   out_2368002382557991547[64] = 0;
   out_2368002382557991547[65] = 0;
}
void h_31(double *state, double *unused, double *out_1022804539658703843) {
   out_1022804539658703843[0] = state[7];
   out_1022804539658703843[1] = state[8];
   out_1022804539658703843[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6668468638867834663) {
   out_6668468638867834663[0] = 0;
   out_6668468638867834663[1] = 0;
   out_6668468638867834663[2] = 0;
   out_6668468638867834663[3] = 0;
   out_6668468638867834663[4] = 0;
   out_6668468638867834663[5] = 0;
   out_6668468638867834663[6] = 0;
   out_6668468638867834663[7] = 1;
   out_6668468638867834663[8] = 0;
   out_6668468638867834663[9] = 0;
   out_6668468638867834663[10] = 0;
   out_6668468638867834663[11] = 0;
   out_6668468638867834663[12] = 0;
   out_6668468638867834663[13] = 0;
   out_6668468638867834663[14] = 0;
   out_6668468638867834663[15] = 0;
   out_6668468638867834663[16] = 0;
   out_6668468638867834663[17] = 0;
   out_6668468638867834663[18] = 0;
   out_6668468638867834663[19] = 0;
   out_6668468638867834663[20] = 0;
   out_6668468638867834663[21] = 0;
   out_6668468638867834663[22] = 0;
   out_6668468638867834663[23] = 0;
   out_6668468638867834663[24] = 0;
   out_6668468638867834663[25] = 0;
   out_6668468638867834663[26] = 0;
   out_6668468638867834663[27] = 0;
   out_6668468638867834663[28] = 0;
   out_6668468638867834663[29] = 0;
   out_6668468638867834663[30] = 1;
   out_6668468638867834663[31] = 0;
   out_6668468638867834663[32] = 0;
   out_6668468638867834663[33] = 0;
   out_6668468638867834663[34] = 0;
   out_6668468638867834663[35] = 0;
   out_6668468638867834663[36] = 0;
   out_6668468638867834663[37] = 0;
   out_6668468638867834663[38] = 0;
   out_6668468638867834663[39] = 0;
   out_6668468638867834663[40] = 0;
   out_6668468638867834663[41] = 0;
   out_6668468638867834663[42] = 0;
   out_6668468638867834663[43] = 0;
   out_6668468638867834663[44] = 0;
   out_6668468638867834663[45] = 0;
   out_6668468638867834663[46] = 0;
   out_6668468638867834663[47] = 0;
   out_6668468638867834663[48] = 0;
   out_6668468638867834663[49] = 0;
   out_6668468638867834663[50] = 0;
   out_6668468638867834663[51] = 0;
   out_6668468638867834663[52] = 0;
   out_6668468638867834663[53] = 1;
   out_6668468638867834663[54] = 0;
   out_6668468638867834663[55] = 0;
   out_6668468638867834663[56] = 0;
   out_6668468638867834663[57] = 0;
   out_6668468638867834663[58] = 0;
   out_6668468638867834663[59] = 0;
   out_6668468638867834663[60] = 0;
   out_6668468638867834663[61] = 0;
   out_6668468638867834663[62] = 0;
   out_6668468638867834663[63] = 0;
   out_6668468638867834663[64] = 0;
   out_6668468638867834663[65] = 0;
}
void h_32(double *state, double *unused, double *out_4446243020354391339) {
   out_4446243020354391339[0] = state[3];
   out_4446243020354391339[1] = state[4];
   out_4446243020354391339[2] = state[5];
   out_4446243020354391339[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7511082836798089294) {
   out_7511082836798089294[0] = 0;
   out_7511082836798089294[1] = 0;
   out_7511082836798089294[2] = 0;
   out_7511082836798089294[3] = 1;
   out_7511082836798089294[4] = 0;
   out_7511082836798089294[5] = 0;
   out_7511082836798089294[6] = 0;
   out_7511082836798089294[7] = 0;
   out_7511082836798089294[8] = 0;
   out_7511082836798089294[9] = 0;
   out_7511082836798089294[10] = 0;
   out_7511082836798089294[11] = 0;
   out_7511082836798089294[12] = 0;
   out_7511082836798089294[13] = 0;
   out_7511082836798089294[14] = 0;
   out_7511082836798089294[15] = 0;
   out_7511082836798089294[16] = 0;
   out_7511082836798089294[17] = 0;
   out_7511082836798089294[18] = 0;
   out_7511082836798089294[19] = 0;
   out_7511082836798089294[20] = 0;
   out_7511082836798089294[21] = 0;
   out_7511082836798089294[22] = 0;
   out_7511082836798089294[23] = 0;
   out_7511082836798089294[24] = 0;
   out_7511082836798089294[25] = 0;
   out_7511082836798089294[26] = 1;
   out_7511082836798089294[27] = 0;
   out_7511082836798089294[28] = 0;
   out_7511082836798089294[29] = 0;
   out_7511082836798089294[30] = 0;
   out_7511082836798089294[31] = 0;
   out_7511082836798089294[32] = 0;
   out_7511082836798089294[33] = 0;
   out_7511082836798089294[34] = 0;
   out_7511082836798089294[35] = 0;
   out_7511082836798089294[36] = 0;
   out_7511082836798089294[37] = 0;
   out_7511082836798089294[38] = 0;
   out_7511082836798089294[39] = 0;
   out_7511082836798089294[40] = 0;
   out_7511082836798089294[41] = 0;
   out_7511082836798089294[42] = 0;
   out_7511082836798089294[43] = 0;
   out_7511082836798089294[44] = 0;
   out_7511082836798089294[45] = 0;
   out_7511082836798089294[46] = 0;
   out_7511082836798089294[47] = 0;
   out_7511082836798089294[48] = 0;
   out_7511082836798089294[49] = 1;
   out_7511082836798089294[50] = 0;
   out_7511082836798089294[51] = 0;
   out_7511082836798089294[52] = 0;
   out_7511082836798089294[53] = 0;
   out_7511082836798089294[54] = 0;
   out_7511082836798089294[55] = 0;
   out_7511082836798089294[56] = 0;
   out_7511082836798089294[57] = 0;
   out_7511082836798089294[58] = 0;
   out_7511082836798089294[59] = 0;
   out_7511082836798089294[60] = 0;
   out_7511082836798089294[61] = 0;
   out_7511082836798089294[62] = 0;
   out_7511082836798089294[63] = 0;
   out_7511082836798089294[64] = 0;
   out_7511082836798089294[65] = 0;
   out_7511082836798089294[66] = 0;
   out_7511082836798089294[67] = 0;
   out_7511082836798089294[68] = 0;
   out_7511082836798089294[69] = 0;
   out_7511082836798089294[70] = 0;
   out_7511082836798089294[71] = 0;
   out_7511082836798089294[72] = 1;
   out_7511082836798089294[73] = 0;
   out_7511082836798089294[74] = 0;
   out_7511082836798089294[75] = 0;
   out_7511082836798089294[76] = 0;
   out_7511082836798089294[77] = 0;
   out_7511082836798089294[78] = 0;
   out_7511082836798089294[79] = 0;
   out_7511082836798089294[80] = 0;
   out_7511082836798089294[81] = 0;
   out_7511082836798089294[82] = 0;
   out_7511082836798089294[83] = 0;
   out_7511082836798089294[84] = 0;
   out_7511082836798089294[85] = 0;
   out_7511082836798089294[86] = 0;
   out_7511082836798089294[87] = 0;
}
void h_13(double *state, double *unused, double *out_8890749997163658878) {
   out_8890749997163658878[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8890749997163658878[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8890749997163658878[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6180312052694428377) {
   out_6180312052694428377[0] = 0;
   out_6180312052694428377[1] = 0;
   out_6180312052694428377[2] = 0;
   out_6180312052694428377[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6180312052694428377[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6180312052694428377[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6180312052694428377[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6180312052694428377[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6180312052694428377[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6180312052694428377[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6180312052694428377[10] = 0;
   out_6180312052694428377[11] = 0;
   out_6180312052694428377[12] = 0;
   out_6180312052694428377[13] = 0;
   out_6180312052694428377[14] = 0;
   out_6180312052694428377[15] = 0;
   out_6180312052694428377[16] = 0;
   out_6180312052694428377[17] = 0;
   out_6180312052694428377[18] = 0;
   out_6180312052694428377[19] = 0;
   out_6180312052694428377[20] = 0;
   out_6180312052694428377[21] = 0;
   out_6180312052694428377[22] = 0;
   out_6180312052694428377[23] = 0;
   out_6180312052694428377[24] = 0;
   out_6180312052694428377[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6180312052694428377[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6180312052694428377[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6180312052694428377[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6180312052694428377[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6180312052694428377[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6180312052694428377[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6180312052694428377[32] = 0;
   out_6180312052694428377[33] = 0;
   out_6180312052694428377[34] = 0;
   out_6180312052694428377[35] = 0;
   out_6180312052694428377[36] = 0;
   out_6180312052694428377[37] = 0;
   out_6180312052694428377[38] = 0;
   out_6180312052694428377[39] = 0;
   out_6180312052694428377[40] = 0;
   out_6180312052694428377[41] = 0;
   out_6180312052694428377[42] = 0;
   out_6180312052694428377[43] = 0;
   out_6180312052694428377[44] = 0;
   out_6180312052694428377[45] = 0;
   out_6180312052694428377[46] = 0;
   out_6180312052694428377[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6180312052694428377[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6180312052694428377[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6180312052694428377[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6180312052694428377[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6180312052694428377[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6180312052694428377[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6180312052694428377[54] = 0;
   out_6180312052694428377[55] = 0;
   out_6180312052694428377[56] = 0;
   out_6180312052694428377[57] = 0;
   out_6180312052694428377[58] = 0;
   out_6180312052694428377[59] = 0;
   out_6180312052694428377[60] = 0;
   out_6180312052694428377[61] = 0;
   out_6180312052694428377[62] = 0;
   out_6180312052694428377[63] = 0;
   out_6180312052694428377[64] = 0;
   out_6180312052694428377[65] = 0;
}
void h_14(double *state, double *unused, double *out_1394785126297930511) {
   out_1394785126297930511[0] = state[10];
   out_1394785126297930511[1] = state[11];
   out_1394785126297930511[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7146269143960362697) {
   out_7146269143960362697[0] = 0;
   out_7146269143960362697[1] = 0;
   out_7146269143960362697[2] = 0;
   out_7146269143960362697[3] = 0;
   out_7146269143960362697[4] = 0;
   out_7146269143960362697[5] = 0;
   out_7146269143960362697[6] = 0;
   out_7146269143960362697[7] = 0;
   out_7146269143960362697[8] = 0;
   out_7146269143960362697[9] = 0;
   out_7146269143960362697[10] = 1;
   out_7146269143960362697[11] = 0;
   out_7146269143960362697[12] = 0;
   out_7146269143960362697[13] = 0;
   out_7146269143960362697[14] = 0;
   out_7146269143960362697[15] = 0;
   out_7146269143960362697[16] = 0;
   out_7146269143960362697[17] = 0;
   out_7146269143960362697[18] = 0;
   out_7146269143960362697[19] = 0;
   out_7146269143960362697[20] = 0;
   out_7146269143960362697[21] = 0;
   out_7146269143960362697[22] = 0;
   out_7146269143960362697[23] = 0;
   out_7146269143960362697[24] = 0;
   out_7146269143960362697[25] = 0;
   out_7146269143960362697[26] = 0;
   out_7146269143960362697[27] = 0;
   out_7146269143960362697[28] = 0;
   out_7146269143960362697[29] = 0;
   out_7146269143960362697[30] = 0;
   out_7146269143960362697[31] = 0;
   out_7146269143960362697[32] = 0;
   out_7146269143960362697[33] = 1;
   out_7146269143960362697[34] = 0;
   out_7146269143960362697[35] = 0;
   out_7146269143960362697[36] = 0;
   out_7146269143960362697[37] = 0;
   out_7146269143960362697[38] = 0;
   out_7146269143960362697[39] = 0;
   out_7146269143960362697[40] = 0;
   out_7146269143960362697[41] = 0;
   out_7146269143960362697[42] = 0;
   out_7146269143960362697[43] = 0;
   out_7146269143960362697[44] = 0;
   out_7146269143960362697[45] = 0;
   out_7146269143960362697[46] = 0;
   out_7146269143960362697[47] = 0;
   out_7146269143960362697[48] = 0;
   out_7146269143960362697[49] = 0;
   out_7146269143960362697[50] = 0;
   out_7146269143960362697[51] = 0;
   out_7146269143960362697[52] = 0;
   out_7146269143960362697[53] = 0;
   out_7146269143960362697[54] = 0;
   out_7146269143960362697[55] = 0;
   out_7146269143960362697[56] = 1;
   out_7146269143960362697[57] = 0;
   out_7146269143960362697[58] = 0;
   out_7146269143960362697[59] = 0;
   out_7146269143960362697[60] = 0;
   out_7146269143960362697[61] = 0;
   out_7146269143960362697[62] = 0;
   out_7146269143960362697[63] = 0;
   out_7146269143960362697[64] = 0;
   out_7146269143960362697[65] = 0;
}
void h_33(double *state, double *unused, double *out_1483982040104609827) {
   out_1483982040104609827[0] = state[16];
   out_1483982040104609827[1] = state[17];
   out_1483982040104609827[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3517911634228977059) {
   out_3517911634228977059[0] = 0;
   out_3517911634228977059[1] = 0;
   out_3517911634228977059[2] = 0;
   out_3517911634228977059[3] = 0;
   out_3517911634228977059[4] = 0;
   out_3517911634228977059[5] = 0;
   out_3517911634228977059[6] = 0;
   out_3517911634228977059[7] = 0;
   out_3517911634228977059[8] = 0;
   out_3517911634228977059[9] = 0;
   out_3517911634228977059[10] = 0;
   out_3517911634228977059[11] = 0;
   out_3517911634228977059[12] = 0;
   out_3517911634228977059[13] = 0;
   out_3517911634228977059[14] = 0;
   out_3517911634228977059[15] = 0;
   out_3517911634228977059[16] = 1;
   out_3517911634228977059[17] = 0;
   out_3517911634228977059[18] = 0;
   out_3517911634228977059[19] = 0;
   out_3517911634228977059[20] = 0;
   out_3517911634228977059[21] = 0;
   out_3517911634228977059[22] = 0;
   out_3517911634228977059[23] = 0;
   out_3517911634228977059[24] = 0;
   out_3517911634228977059[25] = 0;
   out_3517911634228977059[26] = 0;
   out_3517911634228977059[27] = 0;
   out_3517911634228977059[28] = 0;
   out_3517911634228977059[29] = 0;
   out_3517911634228977059[30] = 0;
   out_3517911634228977059[31] = 0;
   out_3517911634228977059[32] = 0;
   out_3517911634228977059[33] = 0;
   out_3517911634228977059[34] = 0;
   out_3517911634228977059[35] = 0;
   out_3517911634228977059[36] = 0;
   out_3517911634228977059[37] = 0;
   out_3517911634228977059[38] = 0;
   out_3517911634228977059[39] = 1;
   out_3517911634228977059[40] = 0;
   out_3517911634228977059[41] = 0;
   out_3517911634228977059[42] = 0;
   out_3517911634228977059[43] = 0;
   out_3517911634228977059[44] = 0;
   out_3517911634228977059[45] = 0;
   out_3517911634228977059[46] = 0;
   out_3517911634228977059[47] = 0;
   out_3517911634228977059[48] = 0;
   out_3517911634228977059[49] = 0;
   out_3517911634228977059[50] = 0;
   out_3517911634228977059[51] = 0;
   out_3517911634228977059[52] = 0;
   out_3517911634228977059[53] = 0;
   out_3517911634228977059[54] = 0;
   out_3517911634228977059[55] = 0;
   out_3517911634228977059[56] = 0;
   out_3517911634228977059[57] = 0;
   out_3517911634228977059[58] = 0;
   out_3517911634228977059[59] = 0;
   out_3517911634228977059[60] = 0;
   out_3517911634228977059[61] = 0;
   out_3517911634228977059[62] = 1;
   out_3517911634228977059[63] = 0;
   out_3517911634228977059[64] = 0;
   out_3517911634228977059[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7056038609068127415) {
  H(in_vec, out_7056038609068127415);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8728269313774193771) {
  err_fun(nom_x, delta_x, out_8728269313774193771);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2291198337074995052) {
  inv_err_fun(nom_x, true_x, out_2291198337074995052);
}
void live_H_mod_fun(double *state, double *out_7091612482427988921) {
  H_mod_fun(state, out_7091612482427988921);
}
void live_f_fun(double *state, double dt, double *out_8119975525939641860) {
  f_fun(state,  dt, out_8119975525939641860);
}
void live_F_fun(double *state, double dt, double *out_2642813710906309799) {
  F_fun(state,  dt, out_2642813710906309799);
}
void live_h_4(double *state, double *unused, double *out_8718177427955779130) {
  h_4(state, unused, out_8718177427955779130);
}
void live_H_4(double *state, double *unused, double *out_4013255994484741449) {
  H_4(state, unused, out_4013255994484741449);
}
void live_h_9(double *state, double *unused, double *out_1394785126297930511) {
  h_9(state, unused, out_1394785126297930511);
}
void live_H_9(double *state, double *unused, double *out_7146269143960362697) {
  H_9(state, unused, out_7146269143960362697);
}
void live_h_10(double *state, double *unused, double *out_444825269738442303) {
  h_10(state, unused, out_444825269738442303);
}
void live_H_10(double *state, double *unused, double *out_2888002740780520945) {
  H_10(state, unused, out_2888002740780520945);
}
void live_h_12(double *state, double *unused, double *out_3246430753777309875) {
  h_12(state, unused, out_3246430753777309875);
}
void live_H_12(double *state, double *unused, double *out_2368002382557991547) {
  H_12(state, unused, out_2368002382557991547);
}
void live_h_31(double *state, double *unused, double *out_1022804539658703843) {
  h_31(state, unused, out_1022804539658703843);
}
void live_H_31(double *state, double *unused, double *out_6668468638867834663) {
  H_31(state, unused, out_6668468638867834663);
}
void live_h_32(double *state, double *unused, double *out_4446243020354391339) {
  h_32(state, unused, out_4446243020354391339);
}
void live_H_32(double *state, double *unused, double *out_7511082836798089294) {
  H_32(state, unused, out_7511082836798089294);
}
void live_h_13(double *state, double *unused, double *out_8890749997163658878) {
  h_13(state, unused, out_8890749997163658878);
}
void live_H_13(double *state, double *unused, double *out_6180312052694428377) {
  H_13(state, unused, out_6180312052694428377);
}
void live_h_14(double *state, double *unused, double *out_1394785126297930511) {
  h_14(state, unused, out_1394785126297930511);
}
void live_H_14(double *state, double *unused, double *out_7146269143960362697) {
  H_14(state, unused, out_7146269143960362697);
}
void live_h_33(double *state, double *unused, double *out_1483982040104609827) {
  h_33(state, unused, out_1483982040104609827);
}
void live_H_33(double *state, double *unused, double *out_3517911634228977059) {
  H_33(state, unused, out_3517911634228977059);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
