#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3796868102103770979) {
   out_3796868102103770979[0] = 0;
   out_3796868102103770979[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3796868102103770979[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3796868102103770979[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3796868102103770979[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3796868102103770979[5] = -sin(in_vec[1]);
   out_3796868102103770979[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3796868102103770979[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3796868102103770979[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3796868102103770979[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3796868102103770979[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3796868102103770979[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3796868102103770979[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3796868102103770979[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3796868102103770979[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3796868102103770979[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3796868102103770979[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3796868102103770979[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7507187861718128714) {
   out_7507187861718128714[0] = delta_x[0] + nom_x[0];
   out_7507187861718128714[1] = delta_x[1] + nom_x[1];
   out_7507187861718128714[2] = delta_x[2] + nom_x[2];
   out_7507187861718128714[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7507187861718128714[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7507187861718128714[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7507187861718128714[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7507187861718128714[7] = delta_x[6] + nom_x[7];
   out_7507187861718128714[8] = delta_x[7] + nom_x[8];
   out_7507187861718128714[9] = delta_x[8] + nom_x[9];
   out_7507187861718128714[10] = delta_x[9] + nom_x[10];
   out_7507187861718128714[11] = delta_x[10] + nom_x[11];
   out_7507187861718128714[12] = delta_x[11] + nom_x[12];
   out_7507187861718128714[13] = delta_x[12] + nom_x[13];
   out_7507187861718128714[14] = delta_x[13] + nom_x[14];
   out_7507187861718128714[15] = delta_x[14] + nom_x[15];
   out_7507187861718128714[16] = delta_x[15] + nom_x[16];
   out_7507187861718128714[17] = delta_x[16] + nom_x[17];
   out_7507187861718128714[18] = delta_x[17] + nom_x[18];
   out_7507187861718128714[19] = delta_x[18] + nom_x[19];
   out_7507187861718128714[20] = delta_x[19] + nom_x[20];
   out_7507187861718128714[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5892106134665915380) {
   out_5892106134665915380[0] = -nom_x[0] + true_x[0];
   out_5892106134665915380[1] = -nom_x[1] + true_x[1];
   out_5892106134665915380[2] = -nom_x[2] + true_x[2];
   out_5892106134665915380[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5892106134665915380[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5892106134665915380[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5892106134665915380[6] = -nom_x[7] + true_x[7];
   out_5892106134665915380[7] = -nom_x[8] + true_x[8];
   out_5892106134665915380[8] = -nom_x[9] + true_x[9];
   out_5892106134665915380[9] = -nom_x[10] + true_x[10];
   out_5892106134665915380[10] = -nom_x[11] + true_x[11];
   out_5892106134665915380[11] = -nom_x[12] + true_x[12];
   out_5892106134665915380[12] = -nom_x[13] + true_x[13];
   out_5892106134665915380[13] = -nom_x[14] + true_x[14];
   out_5892106134665915380[14] = -nom_x[15] + true_x[15];
   out_5892106134665915380[15] = -nom_x[16] + true_x[16];
   out_5892106134665915380[16] = -nom_x[17] + true_x[17];
   out_5892106134665915380[17] = -nom_x[18] + true_x[18];
   out_5892106134665915380[18] = -nom_x[19] + true_x[19];
   out_5892106134665915380[19] = -nom_x[20] + true_x[20];
   out_5892106134665915380[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4192746810752475091) {
   out_4192746810752475091[0] = 1.0;
   out_4192746810752475091[1] = 0;
   out_4192746810752475091[2] = 0;
   out_4192746810752475091[3] = 0;
   out_4192746810752475091[4] = 0;
   out_4192746810752475091[5] = 0;
   out_4192746810752475091[6] = 0;
   out_4192746810752475091[7] = 0;
   out_4192746810752475091[8] = 0;
   out_4192746810752475091[9] = 0;
   out_4192746810752475091[10] = 0;
   out_4192746810752475091[11] = 0;
   out_4192746810752475091[12] = 0;
   out_4192746810752475091[13] = 0;
   out_4192746810752475091[14] = 0;
   out_4192746810752475091[15] = 0;
   out_4192746810752475091[16] = 0;
   out_4192746810752475091[17] = 0;
   out_4192746810752475091[18] = 0;
   out_4192746810752475091[19] = 0;
   out_4192746810752475091[20] = 0;
   out_4192746810752475091[21] = 0;
   out_4192746810752475091[22] = 1.0;
   out_4192746810752475091[23] = 0;
   out_4192746810752475091[24] = 0;
   out_4192746810752475091[25] = 0;
   out_4192746810752475091[26] = 0;
   out_4192746810752475091[27] = 0;
   out_4192746810752475091[28] = 0;
   out_4192746810752475091[29] = 0;
   out_4192746810752475091[30] = 0;
   out_4192746810752475091[31] = 0;
   out_4192746810752475091[32] = 0;
   out_4192746810752475091[33] = 0;
   out_4192746810752475091[34] = 0;
   out_4192746810752475091[35] = 0;
   out_4192746810752475091[36] = 0;
   out_4192746810752475091[37] = 0;
   out_4192746810752475091[38] = 0;
   out_4192746810752475091[39] = 0;
   out_4192746810752475091[40] = 0;
   out_4192746810752475091[41] = 0;
   out_4192746810752475091[42] = 0;
   out_4192746810752475091[43] = 0;
   out_4192746810752475091[44] = 1.0;
   out_4192746810752475091[45] = 0;
   out_4192746810752475091[46] = 0;
   out_4192746810752475091[47] = 0;
   out_4192746810752475091[48] = 0;
   out_4192746810752475091[49] = 0;
   out_4192746810752475091[50] = 0;
   out_4192746810752475091[51] = 0;
   out_4192746810752475091[52] = 0;
   out_4192746810752475091[53] = 0;
   out_4192746810752475091[54] = 0;
   out_4192746810752475091[55] = 0;
   out_4192746810752475091[56] = 0;
   out_4192746810752475091[57] = 0;
   out_4192746810752475091[58] = 0;
   out_4192746810752475091[59] = 0;
   out_4192746810752475091[60] = 0;
   out_4192746810752475091[61] = 0;
   out_4192746810752475091[62] = 0;
   out_4192746810752475091[63] = 0;
   out_4192746810752475091[64] = 0;
   out_4192746810752475091[65] = 0;
   out_4192746810752475091[66] = -0.5*state[4];
   out_4192746810752475091[67] = -0.5*state[5];
   out_4192746810752475091[68] = -0.5*state[6];
   out_4192746810752475091[69] = 0;
   out_4192746810752475091[70] = 0;
   out_4192746810752475091[71] = 0;
   out_4192746810752475091[72] = 0;
   out_4192746810752475091[73] = 0;
   out_4192746810752475091[74] = 0;
   out_4192746810752475091[75] = 0;
   out_4192746810752475091[76] = 0;
   out_4192746810752475091[77] = 0;
   out_4192746810752475091[78] = 0;
   out_4192746810752475091[79] = 0;
   out_4192746810752475091[80] = 0;
   out_4192746810752475091[81] = 0;
   out_4192746810752475091[82] = 0;
   out_4192746810752475091[83] = 0;
   out_4192746810752475091[84] = 0;
   out_4192746810752475091[85] = 0;
   out_4192746810752475091[86] = 0;
   out_4192746810752475091[87] = 0.5*state[3];
   out_4192746810752475091[88] = 0.5*state[6];
   out_4192746810752475091[89] = -0.5*state[5];
   out_4192746810752475091[90] = 0;
   out_4192746810752475091[91] = 0;
   out_4192746810752475091[92] = 0;
   out_4192746810752475091[93] = 0;
   out_4192746810752475091[94] = 0;
   out_4192746810752475091[95] = 0;
   out_4192746810752475091[96] = 0;
   out_4192746810752475091[97] = 0;
   out_4192746810752475091[98] = 0;
   out_4192746810752475091[99] = 0;
   out_4192746810752475091[100] = 0;
   out_4192746810752475091[101] = 0;
   out_4192746810752475091[102] = 0;
   out_4192746810752475091[103] = 0;
   out_4192746810752475091[104] = 0;
   out_4192746810752475091[105] = 0;
   out_4192746810752475091[106] = 0;
   out_4192746810752475091[107] = 0;
   out_4192746810752475091[108] = -0.5*state[6];
   out_4192746810752475091[109] = 0.5*state[3];
   out_4192746810752475091[110] = 0.5*state[4];
   out_4192746810752475091[111] = 0;
   out_4192746810752475091[112] = 0;
   out_4192746810752475091[113] = 0;
   out_4192746810752475091[114] = 0;
   out_4192746810752475091[115] = 0;
   out_4192746810752475091[116] = 0;
   out_4192746810752475091[117] = 0;
   out_4192746810752475091[118] = 0;
   out_4192746810752475091[119] = 0;
   out_4192746810752475091[120] = 0;
   out_4192746810752475091[121] = 0;
   out_4192746810752475091[122] = 0;
   out_4192746810752475091[123] = 0;
   out_4192746810752475091[124] = 0;
   out_4192746810752475091[125] = 0;
   out_4192746810752475091[126] = 0;
   out_4192746810752475091[127] = 0;
   out_4192746810752475091[128] = 0;
   out_4192746810752475091[129] = 0.5*state[5];
   out_4192746810752475091[130] = -0.5*state[4];
   out_4192746810752475091[131] = 0.5*state[3];
   out_4192746810752475091[132] = 0;
   out_4192746810752475091[133] = 0;
   out_4192746810752475091[134] = 0;
   out_4192746810752475091[135] = 0;
   out_4192746810752475091[136] = 0;
   out_4192746810752475091[137] = 0;
   out_4192746810752475091[138] = 0;
   out_4192746810752475091[139] = 0;
   out_4192746810752475091[140] = 0;
   out_4192746810752475091[141] = 0;
   out_4192746810752475091[142] = 0;
   out_4192746810752475091[143] = 0;
   out_4192746810752475091[144] = 0;
   out_4192746810752475091[145] = 0;
   out_4192746810752475091[146] = 0;
   out_4192746810752475091[147] = 0;
   out_4192746810752475091[148] = 0;
   out_4192746810752475091[149] = 0;
   out_4192746810752475091[150] = 0;
   out_4192746810752475091[151] = 0;
   out_4192746810752475091[152] = 0;
   out_4192746810752475091[153] = 1.0;
   out_4192746810752475091[154] = 0;
   out_4192746810752475091[155] = 0;
   out_4192746810752475091[156] = 0;
   out_4192746810752475091[157] = 0;
   out_4192746810752475091[158] = 0;
   out_4192746810752475091[159] = 0;
   out_4192746810752475091[160] = 0;
   out_4192746810752475091[161] = 0;
   out_4192746810752475091[162] = 0;
   out_4192746810752475091[163] = 0;
   out_4192746810752475091[164] = 0;
   out_4192746810752475091[165] = 0;
   out_4192746810752475091[166] = 0;
   out_4192746810752475091[167] = 0;
   out_4192746810752475091[168] = 0;
   out_4192746810752475091[169] = 0;
   out_4192746810752475091[170] = 0;
   out_4192746810752475091[171] = 0;
   out_4192746810752475091[172] = 0;
   out_4192746810752475091[173] = 0;
   out_4192746810752475091[174] = 0;
   out_4192746810752475091[175] = 1.0;
   out_4192746810752475091[176] = 0;
   out_4192746810752475091[177] = 0;
   out_4192746810752475091[178] = 0;
   out_4192746810752475091[179] = 0;
   out_4192746810752475091[180] = 0;
   out_4192746810752475091[181] = 0;
   out_4192746810752475091[182] = 0;
   out_4192746810752475091[183] = 0;
   out_4192746810752475091[184] = 0;
   out_4192746810752475091[185] = 0;
   out_4192746810752475091[186] = 0;
   out_4192746810752475091[187] = 0;
   out_4192746810752475091[188] = 0;
   out_4192746810752475091[189] = 0;
   out_4192746810752475091[190] = 0;
   out_4192746810752475091[191] = 0;
   out_4192746810752475091[192] = 0;
   out_4192746810752475091[193] = 0;
   out_4192746810752475091[194] = 0;
   out_4192746810752475091[195] = 0;
   out_4192746810752475091[196] = 0;
   out_4192746810752475091[197] = 1.0;
   out_4192746810752475091[198] = 0;
   out_4192746810752475091[199] = 0;
   out_4192746810752475091[200] = 0;
   out_4192746810752475091[201] = 0;
   out_4192746810752475091[202] = 0;
   out_4192746810752475091[203] = 0;
   out_4192746810752475091[204] = 0;
   out_4192746810752475091[205] = 0;
   out_4192746810752475091[206] = 0;
   out_4192746810752475091[207] = 0;
   out_4192746810752475091[208] = 0;
   out_4192746810752475091[209] = 0;
   out_4192746810752475091[210] = 0;
   out_4192746810752475091[211] = 0;
   out_4192746810752475091[212] = 0;
   out_4192746810752475091[213] = 0;
   out_4192746810752475091[214] = 0;
   out_4192746810752475091[215] = 0;
   out_4192746810752475091[216] = 0;
   out_4192746810752475091[217] = 0;
   out_4192746810752475091[218] = 0;
   out_4192746810752475091[219] = 1.0;
   out_4192746810752475091[220] = 0;
   out_4192746810752475091[221] = 0;
   out_4192746810752475091[222] = 0;
   out_4192746810752475091[223] = 0;
   out_4192746810752475091[224] = 0;
   out_4192746810752475091[225] = 0;
   out_4192746810752475091[226] = 0;
   out_4192746810752475091[227] = 0;
   out_4192746810752475091[228] = 0;
   out_4192746810752475091[229] = 0;
   out_4192746810752475091[230] = 0;
   out_4192746810752475091[231] = 0;
   out_4192746810752475091[232] = 0;
   out_4192746810752475091[233] = 0;
   out_4192746810752475091[234] = 0;
   out_4192746810752475091[235] = 0;
   out_4192746810752475091[236] = 0;
   out_4192746810752475091[237] = 0;
   out_4192746810752475091[238] = 0;
   out_4192746810752475091[239] = 0;
   out_4192746810752475091[240] = 0;
   out_4192746810752475091[241] = 1.0;
   out_4192746810752475091[242] = 0;
   out_4192746810752475091[243] = 0;
   out_4192746810752475091[244] = 0;
   out_4192746810752475091[245] = 0;
   out_4192746810752475091[246] = 0;
   out_4192746810752475091[247] = 0;
   out_4192746810752475091[248] = 0;
   out_4192746810752475091[249] = 0;
   out_4192746810752475091[250] = 0;
   out_4192746810752475091[251] = 0;
   out_4192746810752475091[252] = 0;
   out_4192746810752475091[253] = 0;
   out_4192746810752475091[254] = 0;
   out_4192746810752475091[255] = 0;
   out_4192746810752475091[256] = 0;
   out_4192746810752475091[257] = 0;
   out_4192746810752475091[258] = 0;
   out_4192746810752475091[259] = 0;
   out_4192746810752475091[260] = 0;
   out_4192746810752475091[261] = 0;
   out_4192746810752475091[262] = 0;
   out_4192746810752475091[263] = 1.0;
   out_4192746810752475091[264] = 0;
   out_4192746810752475091[265] = 0;
   out_4192746810752475091[266] = 0;
   out_4192746810752475091[267] = 0;
   out_4192746810752475091[268] = 0;
   out_4192746810752475091[269] = 0;
   out_4192746810752475091[270] = 0;
   out_4192746810752475091[271] = 0;
   out_4192746810752475091[272] = 0;
   out_4192746810752475091[273] = 0;
   out_4192746810752475091[274] = 0;
   out_4192746810752475091[275] = 0;
   out_4192746810752475091[276] = 0;
   out_4192746810752475091[277] = 0;
   out_4192746810752475091[278] = 0;
   out_4192746810752475091[279] = 0;
   out_4192746810752475091[280] = 0;
   out_4192746810752475091[281] = 0;
   out_4192746810752475091[282] = 0;
   out_4192746810752475091[283] = 0;
   out_4192746810752475091[284] = 0;
   out_4192746810752475091[285] = 1.0;
   out_4192746810752475091[286] = 0;
   out_4192746810752475091[287] = 0;
   out_4192746810752475091[288] = 0;
   out_4192746810752475091[289] = 0;
   out_4192746810752475091[290] = 0;
   out_4192746810752475091[291] = 0;
   out_4192746810752475091[292] = 0;
   out_4192746810752475091[293] = 0;
   out_4192746810752475091[294] = 0;
   out_4192746810752475091[295] = 0;
   out_4192746810752475091[296] = 0;
   out_4192746810752475091[297] = 0;
   out_4192746810752475091[298] = 0;
   out_4192746810752475091[299] = 0;
   out_4192746810752475091[300] = 0;
   out_4192746810752475091[301] = 0;
   out_4192746810752475091[302] = 0;
   out_4192746810752475091[303] = 0;
   out_4192746810752475091[304] = 0;
   out_4192746810752475091[305] = 0;
   out_4192746810752475091[306] = 0;
   out_4192746810752475091[307] = 1.0;
   out_4192746810752475091[308] = 0;
   out_4192746810752475091[309] = 0;
   out_4192746810752475091[310] = 0;
   out_4192746810752475091[311] = 0;
   out_4192746810752475091[312] = 0;
   out_4192746810752475091[313] = 0;
   out_4192746810752475091[314] = 0;
   out_4192746810752475091[315] = 0;
   out_4192746810752475091[316] = 0;
   out_4192746810752475091[317] = 0;
   out_4192746810752475091[318] = 0;
   out_4192746810752475091[319] = 0;
   out_4192746810752475091[320] = 0;
   out_4192746810752475091[321] = 0;
   out_4192746810752475091[322] = 0;
   out_4192746810752475091[323] = 0;
   out_4192746810752475091[324] = 0;
   out_4192746810752475091[325] = 0;
   out_4192746810752475091[326] = 0;
   out_4192746810752475091[327] = 0;
   out_4192746810752475091[328] = 0;
   out_4192746810752475091[329] = 1.0;
   out_4192746810752475091[330] = 0;
   out_4192746810752475091[331] = 0;
   out_4192746810752475091[332] = 0;
   out_4192746810752475091[333] = 0;
   out_4192746810752475091[334] = 0;
   out_4192746810752475091[335] = 0;
   out_4192746810752475091[336] = 0;
   out_4192746810752475091[337] = 0;
   out_4192746810752475091[338] = 0;
   out_4192746810752475091[339] = 0;
   out_4192746810752475091[340] = 0;
   out_4192746810752475091[341] = 0;
   out_4192746810752475091[342] = 0;
   out_4192746810752475091[343] = 0;
   out_4192746810752475091[344] = 0;
   out_4192746810752475091[345] = 0;
   out_4192746810752475091[346] = 0;
   out_4192746810752475091[347] = 0;
   out_4192746810752475091[348] = 0;
   out_4192746810752475091[349] = 0;
   out_4192746810752475091[350] = 0;
   out_4192746810752475091[351] = 1.0;
   out_4192746810752475091[352] = 0;
   out_4192746810752475091[353] = 0;
   out_4192746810752475091[354] = 0;
   out_4192746810752475091[355] = 0;
   out_4192746810752475091[356] = 0;
   out_4192746810752475091[357] = 0;
   out_4192746810752475091[358] = 0;
   out_4192746810752475091[359] = 0;
   out_4192746810752475091[360] = 0;
   out_4192746810752475091[361] = 0;
   out_4192746810752475091[362] = 0;
   out_4192746810752475091[363] = 0;
   out_4192746810752475091[364] = 0;
   out_4192746810752475091[365] = 0;
   out_4192746810752475091[366] = 0;
   out_4192746810752475091[367] = 0;
   out_4192746810752475091[368] = 0;
   out_4192746810752475091[369] = 0;
   out_4192746810752475091[370] = 0;
   out_4192746810752475091[371] = 0;
   out_4192746810752475091[372] = 0;
   out_4192746810752475091[373] = 1.0;
   out_4192746810752475091[374] = 0;
   out_4192746810752475091[375] = 0;
   out_4192746810752475091[376] = 0;
   out_4192746810752475091[377] = 0;
   out_4192746810752475091[378] = 0;
   out_4192746810752475091[379] = 0;
   out_4192746810752475091[380] = 0;
   out_4192746810752475091[381] = 0;
   out_4192746810752475091[382] = 0;
   out_4192746810752475091[383] = 0;
   out_4192746810752475091[384] = 0;
   out_4192746810752475091[385] = 0;
   out_4192746810752475091[386] = 0;
   out_4192746810752475091[387] = 0;
   out_4192746810752475091[388] = 0;
   out_4192746810752475091[389] = 0;
   out_4192746810752475091[390] = 0;
   out_4192746810752475091[391] = 0;
   out_4192746810752475091[392] = 0;
   out_4192746810752475091[393] = 0;
   out_4192746810752475091[394] = 0;
   out_4192746810752475091[395] = 1.0;
   out_4192746810752475091[396] = 0;
   out_4192746810752475091[397] = 0;
   out_4192746810752475091[398] = 0;
   out_4192746810752475091[399] = 0;
   out_4192746810752475091[400] = 0;
   out_4192746810752475091[401] = 0;
   out_4192746810752475091[402] = 0;
   out_4192746810752475091[403] = 0;
   out_4192746810752475091[404] = 0;
   out_4192746810752475091[405] = 0;
   out_4192746810752475091[406] = 0;
   out_4192746810752475091[407] = 0;
   out_4192746810752475091[408] = 0;
   out_4192746810752475091[409] = 0;
   out_4192746810752475091[410] = 0;
   out_4192746810752475091[411] = 0;
   out_4192746810752475091[412] = 0;
   out_4192746810752475091[413] = 0;
   out_4192746810752475091[414] = 0;
   out_4192746810752475091[415] = 0;
   out_4192746810752475091[416] = 0;
   out_4192746810752475091[417] = 1.0;
   out_4192746810752475091[418] = 0;
   out_4192746810752475091[419] = 0;
   out_4192746810752475091[420] = 0;
   out_4192746810752475091[421] = 0;
   out_4192746810752475091[422] = 0;
   out_4192746810752475091[423] = 0;
   out_4192746810752475091[424] = 0;
   out_4192746810752475091[425] = 0;
   out_4192746810752475091[426] = 0;
   out_4192746810752475091[427] = 0;
   out_4192746810752475091[428] = 0;
   out_4192746810752475091[429] = 0;
   out_4192746810752475091[430] = 0;
   out_4192746810752475091[431] = 0;
   out_4192746810752475091[432] = 0;
   out_4192746810752475091[433] = 0;
   out_4192746810752475091[434] = 0;
   out_4192746810752475091[435] = 0;
   out_4192746810752475091[436] = 0;
   out_4192746810752475091[437] = 0;
   out_4192746810752475091[438] = 0;
   out_4192746810752475091[439] = 1.0;
   out_4192746810752475091[440] = 0;
   out_4192746810752475091[441] = 0;
   out_4192746810752475091[442] = 0;
   out_4192746810752475091[443] = 0;
   out_4192746810752475091[444] = 0;
   out_4192746810752475091[445] = 0;
   out_4192746810752475091[446] = 0;
   out_4192746810752475091[447] = 0;
   out_4192746810752475091[448] = 0;
   out_4192746810752475091[449] = 0;
   out_4192746810752475091[450] = 0;
   out_4192746810752475091[451] = 0;
   out_4192746810752475091[452] = 0;
   out_4192746810752475091[453] = 0;
   out_4192746810752475091[454] = 0;
   out_4192746810752475091[455] = 0;
   out_4192746810752475091[456] = 0;
   out_4192746810752475091[457] = 0;
   out_4192746810752475091[458] = 0;
   out_4192746810752475091[459] = 0;
   out_4192746810752475091[460] = 0;
   out_4192746810752475091[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1205702479476172964) {
   out_1205702479476172964[0] = dt*state[7] + state[0];
   out_1205702479476172964[1] = dt*state[8] + state[1];
   out_1205702479476172964[2] = dt*state[9] + state[2];
   out_1205702479476172964[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1205702479476172964[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1205702479476172964[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1205702479476172964[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1205702479476172964[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1205702479476172964[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1205702479476172964[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1205702479476172964[10] = state[10];
   out_1205702479476172964[11] = state[11];
   out_1205702479476172964[12] = state[12];
   out_1205702479476172964[13] = state[13];
   out_1205702479476172964[14] = state[14];
   out_1205702479476172964[15] = state[15];
   out_1205702479476172964[16] = state[16];
   out_1205702479476172964[17] = state[17];
   out_1205702479476172964[18] = state[18];
   out_1205702479476172964[19] = state[19];
   out_1205702479476172964[20] = state[20];
   out_1205702479476172964[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1691520411734880419) {
   out_1691520411734880419[0] = 1;
   out_1691520411734880419[1] = 0;
   out_1691520411734880419[2] = 0;
   out_1691520411734880419[3] = 0;
   out_1691520411734880419[4] = 0;
   out_1691520411734880419[5] = 0;
   out_1691520411734880419[6] = dt;
   out_1691520411734880419[7] = 0;
   out_1691520411734880419[8] = 0;
   out_1691520411734880419[9] = 0;
   out_1691520411734880419[10] = 0;
   out_1691520411734880419[11] = 0;
   out_1691520411734880419[12] = 0;
   out_1691520411734880419[13] = 0;
   out_1691520411734880419[14] = 0;
   out_1691520411734880419[15] = 0;
   out_1691520411734880419[16] = 0;
   out_1691520411734880419[17] = 0;
   out_1691520411734880419[18] = 0;
   out_1691520411734880419[19] = 0;
   out_1691520411734880419[20] = 0;
   out_1691520411734880419[21] = 0;
   out_1691520411734880419[22] = 1;
   out_1691520411734880419[23] = 0;
   out_1691520411734880419[24] = 0;
   out_1691520411734880419[25] = 0;
   out_1691520411734880419[26] = 0;
   out_1691520411734880419[27] = 0;
   out_1691520411734880419[28] = dt;
   out_1691520411734880419[29] = 0;
   out_1691520411734880419[30] = 0;
   out_1691520411734880419[31] = 0;
   out_1691520411734880419[32] = 0;
   out_1691520411734880419[33] = 0;
   out_1691520411734880419[34] = 0;
   out_1691520411734880419[35] = 0;
   out_1691520411734880419[36] = 0;
   out_1691520411734880419[37] = 0;
   out_1691520411734880419[38] = 0;
   out_1691520411734880419[39] = 0;
   out_1691520411734880419[40] = 0;
   out_1691520411734880419[41] = 0;
   out_1691520411734880419[42] = 0;
   out_1691520411734880419[43] = 0;
   out_1691520411734880419[44] = 1;
   out_1691520411734880419[45] = 0;
   out_1691520411734880419[46] = 0;
   out_1691520411734880419[47] = 0;
   out_1691520411734880419[48] = 0;
   out_1691520411734880419[49] = 0;
   out_1691520411734880419[50] = dt;
   out_1691520411734880419[51] = 0;
   out_1691520411734880419[52] = 0;
   out_1691520411734880419[53] = 0;
   out_1691520411734880419[54] = 0;
   out_1691520411734880419[55] = 0;
   out_1691520411734880419[56] = 0;
   out_1691520411734880419[57] = 0;
   out_1691520411734880419[58] = 0;
   out_1691520411734880419[59] = 0;
   out_1691520411734880419[60] = 0;
   out_1691520411734880419[61] = 0;
   out_1691520411734880419[62] = 0;
   out_1691520411734880419[63] = 0;
   out_1691520411734880419[64] = 0;
   out_1691520411734880419[65] = 0;
   out_1691520411734880419[66] = 1;
   out_1691520411734880419[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1691520411734880419[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1691520411734880419[69] = 0;
   out_1691520411734880419[70] = 0;
   out_1691520411734880419[71] = 0;
   out_1691520411734880419[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1691520411734880419[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1691520411734880419[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1691520411734880419[75] = 0;
   out_1691520411734880419[76] = 0;
   out_1691520411734880419[77] = 0;
   out_1691520411734880419[78] = 0;
   out_1691520411734880419[79] = 0;
   out_1691520411734880419[80] = 0;
   out_1691520411734880419[81] = 0;
   out_1691520411734880419[82] = 0;
   out_1691520411734880419[83] = 0;
   out_1691520411734880419[84] = 0;
   out_1691520411734880419[85] = 0;
   out_1691520411734880419[86] = 0;
   out_1691520411734880419[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1691520411734880419[88] = 1;
   out_1691520411734880419[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1691520411734880419[90] = 0;
   out_1691520411734880419[91] = 0;
   out_1691520411734880419[92] = 0;
   out_1691520411734880419[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1691520411734880419[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1691520411734880419[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1691520411734880419[96] = 0;
   out_1691520411734880419[97] = 0;
   out_1691520411734880419[98] = 0;
   out_1691520411734880419[99] = 0;
   out_1691520411734880419[100] = 0;
   out_1691520411734880419[101] = 0;
   out_1691520411734880419[102] = 0;
   out_1691520411734880419[103] = 0;
   out_1691520411734880419[104] = 0;
   out_1691520411734880419[105] = 0;
   out_1691520411734880419[106] = 0;
   out_1691520411734880419[107] = 0;
   out_1691520411734880419[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1691520411734880419[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1691520411734880419[110] = 1;
   out_1691520411734880419[111] = 0;
   out_1691520411734880419[112] = 0;
   out_1691520411734880419[113] = 0;
   out_1691520411734880419[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1691520411734880419[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1691520411734880419[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1691520411734880419[117] = 0;
   out_1691520411734880419[118] = 0;
   out_1691520411734880419[119] = 0;
   out_1691520411734880419[120] = 0;
   out_1691520411734880419[121] = 0;
   out_1691520411734880419[122] = 0;
   out_1691520411734880419[123] = 0;
   out_1691520411734880419[124] = 0;
   out_1691520411734880419[125] = 0;
   out_1691520411734880419[126] = 0;
   out_1691520411734880419[127] = 0;
   out_1691520411734880419[128] = 0;
   out_1691520411734880419[129] = 0;
   out_1691520411734880419[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1691520411734880419[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1691520411734880419[132] = 1;
   out_1691520411734880419[133] = 0;
   out_1691520411734880419[134] = 0;
   out_1691520411734880419[135] = 0;
   out_1691520411734880419[136] = 0;
   out_1691520411734880419[137] = 0;
   out_1691520411734880419[138] = 0;
   out_1691520411734880419[139] = 0;
   out_1691520411734880419[140] = 0;
   out_1691520411734880419[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1691520411734880419[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1691520411734880419[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1691520411734880419[144] = 0;
   out_1691520411734880419[145] = 0;
   out_1691520411734880419[146] = 0;
   out_1691520411734880419[147] = 0;
   out_1691520411734880419[148] = 0;
   out_1691520411734880419[149] = 0;
   out_1691520411734880419[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1691520411734880419[151] = 0;
   out_1691520411734880419[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1691520411734880419[153] = 0;
   out_1691520411734880419[154] = 1;
   out_1691520411734880419[155] = 0;
   out_1691520411734880419[156] = 0;
   out_1691520411734880419[157] = 0;
   out_1691520411734880419[158] = 0;
   out_1691520411734880419[159] = 0;
   out_1691520411734880419[160] = 0;
   out_1691520411734880419[161] = 0;
   out_1691520411734880419[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1691520411734880419[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1691520411734880419[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1691520411734880419[165] = 0;
   out_1691520411734880419[166] = 0;
   out_1691520411734880419[167] = 0;
   out_1691520411734880419[168] = 0;
   out_1691520411734880419[169] = 0;
   out_1691520411734880419[170] = 0;
   out_1691520411734880419[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1691520411734880419[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1691520411734880419[173] = 0;
   out_1691520411734880419[174] = 0;
   out_1691520411734880419[175] = 0;
   out_1691520411734880419[176] = 1;
   out_1691520411734880419[177] = 0;
   out_1691520411734880419[178] = 0;
   out_1691520411734880419[179] = 0;
   out_1691520411734880419[180] = 0;
   out_1691520411734880419[181] = 0;
   out_1691520411734880419[182] = 0;
   out_1691520411734880419[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1691520411734880419[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1691520411734880419[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1691520411734880419[186] = 0;
   out_1691520411734880419[187] = 0;
   out_1691520411734880419[188] = 0;
   out_1691520411734880419[189] = 0;
   out_1691520411734880419[190] = 0;
   out_1691520411734880419[191] = 0;
   out_1691520411734880419[192] = 0;
   out_1691520411734880419[193] = 0;
   out_1691520411734880419[194] = 0;
   out_1691520411734880419[195] = 0;
   out_1691520411734880419[196] = 0;
   out_1691520411734880419[197] = 0;
   out_1691520411734880419[198] = 1;
   out_1691520411734880419[199] = 0;
   out_1691520411734880419[200] = 0;
   out_1691520411734880419[201] = 0;
   out_1691520411734880419[202] = 0;
   out_1691520411734880419[203] = 0;
   out_1691520411734880419[204] = 0;
   out_1691520411734880419[205] = 0;
   out_1691520411734880419[206] = 0;
   out_1691520411734880419[207] = 0;
   out_1691520411734880419[208] = 0;
   out_1691520411734880419[209] = 0;
   out_1691520411734880419[210] = 0;
   out_1691520411734880419[211] = 0;
   out_1691520411734880419[212] = 0;
   out_1691520411734880419[213] = 0;
   out_1691520411734880419[214] = 0;
   out_1691520411734880419[215] = 0;
   out_1691520411734880419[216] = 0;
   out_1691520411734880419[217] = 0;
   out_1691520411734880419[218] = 0;
   out_1691520411734880419[219] = 0;
   out_1691520411734880419[220] = 1;
   out_1691520411734880419[221] = 0;
   out_1691520411734880419[222] = 0;
   out_1691520411734880419[223] = 0;
   out_1691520411734880419[224] = 0;
   out_1691520411734880419[225] = 0;
   out_1691520411734880419[226] = 0;
   out_1691520411734880419[227] = 0;
   out_1691520411734880419[228] = 0;
   out_1691520411734880419[229] = 0;
   out_1691520411734880419[230] = 0;
   out_1691520411734880419[231] = 0;
   out_1691520411734880419[232] = 0;
   out_1691520411734880419[233] = 0;
   out_1691520411734880419[234] = 0;
   out_1691520411734880419[235] = 0;
   out_1691520411734880419[236] = 0;
   out_1691520411734880419[237] = 0;
   out_1691520411734880419[238] = 0;
   out_1691520411734880419[239] = 0;
   out_1691520411734880419[240] = 0;
   out_1691520411734880419[241] = 0;
   out_1691520411734880419[242] = 1;
   out_1691520411734880419[243] = 0;
   out_1691520411734880419[244] = 0;
   out_1691520411734880419[245] = 0;
   out_1691520411734880419[246] = 0;
   out_1691520411734880419[247] = 0;
   out_1691520411734880419[248] = 0;
   out_1691520411734880419[249] = 0;
   out_1691520411734880419[250] = 0;
   out_1691520411734880419[251] = 0;
   out_1691520411734880419[252] = 0;
   out_1691520411734880419[253] = 0;
   out_1691520411734880419[254] = 0;
   out_1691520411734880419[255] = 0;
   out_1691520411734880419[256] = 0;
   out_1691520411734880419[257] = 0;
   out_1691520411734880419[258] = 0;
   out_1691520411734880419[259] = 0;
   out_1691520411734880419[260] = 0;
   out_1691520411734880419[261] = 0;
   out_1691520411734880419[262] = 0;
   out_1691520411734880419[263] = 0;
   out_1691520411734880419[264] = 1;
   out_1691520411734880419[265] = 0;
   out_1691520411734880419[266] = 0;
   out_1691520411734880419[267] = 0;
   out_1691520411734880419[268] = 0;
   out_1691520411734880419[269] = 0;
   out_1691520411734880419[270] = 0;
   out_1691520411734880419[271] = 0;
   out_1691520411734880419[272] = 0;
   out_1691520411734880419[273] = 0;
   out_1691520411734880419[274] = 0;
   out_1691520411734880419[275] = 0;
   out_1691520411734880419[276] = 0;
   out_1691520411734880419[277] = 0;
   out_1691520411734880419[278] = 0;
   out_1691520411734880419[279] = 0;
   out_1691520411734880419[280] = 0;
   out_1691520411734880419[281] = 0;
   out_1691520411734880419[282] = 0;
   out_1691520411734880419[283] = 0;
   out_1691520411734880419[284] = 0;
   out_1691520411734880419[285] = 0;
   out_1691520411734880419[286] = 1;
   out_1691520411734880419[287] = 0;
   out_1691520411734880419[288] = 0;
   out_1691520411734880419[289] = 0;
   out_1691520411734880419[290] = 0;
   out_1691520411734880419[291] = 0;
   out_1691520411734880419[292] = 0;
   out_1691520411734880419[293] = 0;
   out_1691520411734880419[294] = 0;
   out_1691520411734880419[295] = 0;
   out_1691520411734880419[296] = 0;
   out_1691520411734880419[297] = 0;
   out_1691520411734880419[298] = 0;
   out_1691520411734880419[299] = 0;
   out_1691520411734880419[300] = 0;
   out_1691520411734880419[301] = 0;
   out_1691520411734880419[302] = 0;
   out_1691520411734880419[303] = 0;
   out_1691520411734880419[304] = 0;
   out_1691520411734880419[305] = 0;
   out_1691520411734880419[306] = 0;
   out_1691520411734880419[307] = 0;
   out_1691520411734880419[308] = 1;
   out_1691520411734880419[309] = 0;
   out_1691520411734880419[310] = 0;
   out_1691520411734880419[311] = 0;
   out_1691520411734880419[312] = 0;
   out_1691520411734880419[313] = 0;
   out_1691520411734880419[314] = 0;
   out_1691520411734880419[315] = 0;
   out_1691520411734880419[316] = 0;
   out_1691520411734880419[317] = 0;
   out_1691520411734880419[318] = 0;
   out_1691520411734880419[319] = 0;
   out_1691520411734880419[320] = 0;
   out_1691520411734880419[321] = 0;
   out_1691520411734880419[322] = 0;
   out_1691520411734880419[323] = 0;
   out_1691520411734880419[324] = 0;
   out_1691520411734880419[325] = 0;
   out_1691520411734880419[326] = 0;
   out_1691520411734880419[327] = 0;
   out_1691520411734880419[328] = 0;
   out_1691520411734880419[329] = 0;
   out_1691520411734880419[330] = 1;
   out_1691520411734880419[331] = 0;
   out_1691520411734880419[332] = 0;
   out_1691520411734880419[333] = 0;
   out_1691520411734880419[334] = 0;
   out_1691520411734880419[335] = 0;
   out_1691520411734880419[336] = 0;
   out_1691520411734880419[337] = 0;
   out_1691520411734880419[338] = 0;
   out_1691520411734880419[339] = 0;
   out_1691520411734880419[340] = 0;
   out_1691520411734880419[341] = 0;
   out_1691520411734880419[342] = 0;
   out_1691520411734880419[343] = 0;
   out_1691520411734880419[344] = 0;
   out_1691520411734880419[345] = 0;
   out_1691520411734880419[346] = 0;
   out_1691520411734880419[347] = 0;
   out_1691520411734880419[348] = 0;
   out_1691520411734880419[349] = 0;
   out_1691520411734880419[350] = 0;
   out_1691520411734880419[351] = 0;
   out_1691520411734880419[352] = 1;
   out_1691520411734880419[353] = 0;
   out_1691520411734880419[354] = 0;
   out_1691520411734880419[355] = 0;
   out_1691520411734880419[356] = 0;
   out_1691520411734880419[357] = 0;
   out_1691520411734880419[358] = 0;
   out_1691520411734880419[359] = 0;
   out_1691520411734880419[360] = 0;
   out_1691520411734880419[361] = 0;
   out_1691520411734880419[362] = 0;
   out_1691520411734880419[363] = 0;
   out_1691520411734880419[364] = 0;
   out_1691520411734880419[365] = 0;
   out_1691520411734880419[366] = 0;
   out_1691520411734880419[367] = 0;
   out_1691520411734880419[368] = 0;
   out_1691520411734880419[369] = 0;
   out_1691520411734880419[370] = 0;
   out_1691520411734880419[371] = 0;
   out_1691520411734880419[372] = 0;
   out_1691520411734880419[373] = 0;
   out_1691520411734880419[374] = 1;
   out_1691520411734880419[375] = 0;
   out_1691520411734880419[376] = 0;
   out_1691520411734880419[377] = 0;
   out_1691520411734880419[378] = 0;
   out_1691520411734880419[379] = 0;
   out_1691520411734880419[380] = 0;
   out_1691520411734880419[381] = 0;
   out_1691520411734880419[382] = 0;
   out_1691520411734880419[383] = 0;
   out_1691520411734880419[384] = 0;
   out_1691520411734880419[385] = 0;
   out_1691520411734880419[386] = 0;
   out_1691520411734880419[387] = 0;
   out_1691520411734880419[388] = 0;
   out_1691520411734880419[389] = 0;
   out_1691520411734880419[390] = 0;
   out_1691520411734880419[391] = 0;
   out_1691520411734880419[392] = 0;
   out_1691520411734880419[393] = 0;
   out_1691520411734880419[394] = 0;
   out_1691520411734880419[395] = 0;
   out_1691520411734880419[396] = 1;
   out_1691520411734880419[397] = 0;
   out_1691520411734880419[398] = 0;
   out_1691520411734880419[399] = 0;
   out_1691520411734880419[400] = 0;
   out_1691520411734880419[401] = 0;
   out_1691520411734880419[402] = 0;
   out_1691520411734880419[403] = 0;
   out_1691520411734880419[404] = 0;
   out_1691520411734880419[405] = 0;
   out_1691520411734880419[406] = 0;
   out_1691520411734880419[407] = 0;
   out_1691520411734880419[408] = 0;
   out_1691520411734880419[409] = 0;
   out_1691520411734880419[410] = 0;
   out_1691520411734880419[411] = 0;
   out_1691520411734880419[412] = 0;
   out_1691520411734880419[413] = 0;
   out_1691520411734880419[414] = 0;
   out_1691520411734880419[415] = 0;
   out_1691520411734880419[416] = 0;
   out_1691520411734880419[417] = 0;
   out_1691520411734880419[418] = 1;
   out_1691520411734880419[419] = 0;
   out_1691520411734880419[420] = 0;
   out_1691520411734880419[421] = 0;
   out_1691520411734880419[422] = 0;
   out_1691520411734880419[423] = 0;
   out_1691520411734880419[424] = 0;
   out_1691520411734880419[425] = 0;
   out_1691520411734880419[426] = 0;
   out_1691520411734880419[427] = 0;
   out_1691520411734880419[428] = 0;
   out_1691520411734880419[429] = 0;
   out_1691520411734880419[430] = 0;
   out_1691520411734880419[431] = 0;
   out_1691520411734880419[432] = 0;
   out_1691520411734880419[433] = 0;
   out_1691520411734880419[434] = 0;
   out_1691520411734880419[435] = 0;
   out_1691520411734880419[436] = 0;
   out_1691520411734880419[437] = 0;
   out_1691520411734880419[438] = 0;
   out_1691520411734880419[439] = 0;
   out_1691520411734880419[440] = 1;
}
void h_4(double *state, double *unused, double *out_4767559188458182025) {
   out_4767559188458182025[0] = state[10] + state[13];
   out_4767559188458182025[1] = state[11] + state[14];
   out_4767559188458182025[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7174878267494420528) {
   out_7174878267494420528[0] = 0;
   out_7174878267494420528[1] = 0;
   out_7174878267494420528[2] = 0;
   out_7174878267494420528[3] = 0;
   out_7174878267494420528[4] = 0;
   out_7174878267494420528[5] = 0;
   out_7174878267494420528[6] = 0;
   out_7174878267494420528[7] = 0;
   out_7174878267494420528[8] = 0;
   out_7174878267494420528[9] = 0;
   out_7174878267494420528[10] = 1;
   out_7174878267494420528[11] = 0;
   out_7174878267494420528[12] = 0;
   out_7174878267494420528[13] = 1;
   out_7174878267494420528[14] = 0;
   out_7174878267494420528[15] = 0;
   out_7174878267494420528[16] = 0;
   out_7174878267494420528[17] = 0;
   out_7174878267494420528[18] = 0;
   out_7174878267494420528[19] = 0;
   out_7174878267494420528[20] = 0;
   out_7174878267494420528[21] = 0;
   out_7174878267494420528[22] = 0;
   out_7174878267494420528[23] = 0;
   out_7174878267494420528[24] = 0;
   out_7174878267494420528[25] = 0;
   out_7174878267494420528[26] = 0;
   out_7174878267494420528[27] = 0;
   out_7174878267494420528[28] = 0;
   out_7174878267494420528[29] = 0;
   out_7174878267494420528[30] = 0;
   out_7174878267494420528[31] = 0;
   out_7174878267494420528[32] = 0;
   out_7174878267494420528[33] = 1;
   out_7174878267494420528[34] = 0;
   out_7174878267494420528[35] = 0;
   out_7174878267494420528[36] = 1;
   out_7174878267494420528[37] = 0;
   out_7174878267494420528[38] = 0;
   out_7174878267494420528[39] = 0;
   out_7174878267494420528[40] = 0;
   out_7174878267494420528[41] = 0;
   out_7174878267494420528[42] = 0;
   out_7174878267494420528[43] = 0;
   out_7174878267494420528[44] = 0;
   out_7174878267494420528[45] = 0;
   out_7174878267494420528[46] = 0;
   out_7174878267494420528[47] = 0;
   out_7174878267494420528[48] = 0;
   out_7174878267494420528[49] = 0;
   out_7174878267494420528[50] = 0;
   out_7174878267494420528[51] = 0;
   out_7174878267494420528[52] = 0;
   out_7174878267494420528[53] = 0;
   out_7174878267494420528[54] = 0;
   out_7174878267494420528[55] = 0;
   out_7174878267494420528[56] = 1;
   out_7174878267494420528[57] = 0;
   out_7174878267494420528[58] = 0;
   out_7174878267494420528[59] = 1;
   out_7174878267494420528[60] = 0;
   out_7174878267494420528[61] = 0;
   out_7174878267494420528[62] = 0;
   out_7174878267494420528[63] = 0;
   out_7174878267494420528[64] = 0;
   out_7174878267494420528[65] = 0;
}
void h_9(double *state, double *unused, double *out_1897727502726321434) {
   out_1897727502726321434[0] = state[10];
   out_1897727502726321434[1] = state[11];
   out_1897727502726321434[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3017710531139643045) {
   out_3017710531139643045[0] = 0;
   out_3017710531139643045[1] = 0;
   out_3017710531139643045[2] = 0;
   out_3017710531139643045[3] = 0;
   out_3017710531139643045[4] = 0;
   out_3017710531139643045[5] = 0;
   out_3017710531139643045[6] = 0;
   out_3017710531139643045[7] = 0;
   out_3017710531139643045[8] = 0;
   out_3017710531139643045[9] = 0;
   out_3017710531139643045[10] = 1;
   out_3017710531139643045[11] = 0;
   out_3017710531139643045[12] = 0;
   out_3017710531139643045[13] = 0;
   out_3017710531139643045[14] = 0;
   out_3017710531139643045[15] = 0;
   out_3017710531139643045[16] = 0;
   out_3017710531139643045[17] = 0;
   out_3017710531139643045[18] = 0;
   out_3017710531139643045[19] = 0;
   out_3017710531139643045[20] = 0;
   out_3017710531139643045[21] = 0;
   out_3017710531139643045[22] = 0;
   out_3017710531139643045[23] = 0;
   out_3017710531139643045[24] = 0;
   out_3017710531139643045[25] = 0;
   out_3017710531139643045[26] = 0;
   out_3017710531139643045[27] = 0;
   out_3017710531139643045[28] = 0;
   out_3017710531139643045[29] = 0;
   out_3017710531139643045[30] = 0;
   out_3017710531139643045[31] = 0;
   out_3017710531139643045[32] = 0;
   out_3017710531139643045[33] = 1;
   out_3017710531139643045[34] = 0;
   out_3017710531139643045[35] = 0;
   out_3017710531139643045[36] = 0;
   out_3017710531139643045[37] = 0;
   out_3017710531139643045[38] = 0;
   out_3017710531139643045[39] = 0;
   out_3017710531139643045[40] = 0;
   out_3017710531139643045[41] = 0;
   out_3017710531139643045[42] = 0;
   out_3017710531139643045[43] = 0;
   out_3017710531139643045[44] = 0;
   out_3017710531139643045[45] = 0;
   out_3017710531139643045[46] = 0;
   out_3017710531139643045[47] = 0;
   out_3017710531139643045[48] = 0;
   out_3017710531139643045[49] = 0;
   out_3017710531139643045[50] = 0;
   out_3017710531139643045[51] = 0;
   out_3017710531139643045[52] = 0;
   out_3017710531139643045[53] = 0;
   out_3017710531139643045[54] = 0;
   out_3017710531139643045[55] = 0;
   out_3017710531139643045[56] = 1;
   out_3017710531139643045[57] = 0;
   out_3017710531139643045[58] = 0;
   out_3017710531139643045[59] = 0;
   out_3017710531139643045[60] = 0;
   out_3017710531139643045[61] = 0;
   out_3017710531139643045[62] = 0;
   out_3017710531139643045[63] = 0;
   out_3017710531139643045[64] = 0;
   out_3017710531139643045[65] = 0;
}
void h_10(double *state, double *unused, double *out_3147874293051680291) {
   out_3147874293051680291[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3147874293051680291[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3147874293051680291[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4966352340262754741) {
   out_4966352340262754741[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4966352340262754741[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4966352340262754741[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4966352340262754741[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4966352340262754741[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4966352340262754741[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4966352340262754741[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4966352340262754741[7] = 0;
   out_4966352340262754741[8] = 0;
   out_4966352340262754741[9] = 0;
   out_4966352340262754741[10] = 0;
   out_4966352340262754741[11] = 0;
   out_4966352340262754741[12] = 0;
   out_4966352340262754741[13] = 0;
   out_4966352340262754741[14] = 0;
   out_4966352340262754741[15] = 0;
   out_4966352340262754741[16] = 1;
   out_4966352340262754741[17] = 0;
   out_4966352340262754741[18] = 0;
   out_4966352340262754741[19] = 1;
   out_4966352340262754741[20] = 0;
   out_4966352340262754741[21] = 0;
   out_4966352340262754741[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4966352340262754741[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4966352340262754741[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4966352340262754741[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4966352340262754741[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4966352340262754741[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4966352340262754741[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4966352340262754741[29] = 0;
   out_4966352340262754741[30] = 0;
   out_4966352340262754741[31] = 0;
   out_4966352340262754741[32] = 0;
   out_4966352340262754741[33] = 0;
   out_4966352340262754741[34] = 0;
   out_4966352340262754741[35] = 0;
   out_4966352340262754741[36] = 0;
   out_4966352340262754741[37] = 0;
   out_4966352340262754741[38] = 0;
   out_4966352340262754741[39] = 1;
   out_4966352340262754741[40] = 0;
   out_4966352340262754741[41] = 0;
   out_4966352340262754741[42] = 1;
   out_4966352340262754741[43] = 0;
   out_4966352340262754741[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4966352340262754741[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4966352340262754741[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4966352340262754741[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4966352340262754741[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4966352340262754741[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4966352340262754741[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4966352340262754741[51] = 0;
   out_4966352340262754741[52] = 0;
   out_4966352340262754741[53] = 0;
   out_4966352340262754741[54] = 0;
   out_4966352340262754741[55] = 0;
   out_4966352340262754741[56] = 0;
   out_4966352340262754741[57] = 0;
   out_4966352340262754741[58] = 0;
   out_4966352340262754741[59] = 0;
   out_4966352340262754741[60] = 0;
   out_4966352340262754741[61] = 0;
   out_4966352340262754741[62] = 1;
   out_4966352340262754741[63] = 0;
   out_4966352340262754741[64] = 0;
   out_4966352340262754741[65] = 1;
}
void h_12(double *state, double *unused, double *out_8895808911183884641) {
   out_8895808911183884641[0] = state[0];
   out_8895808911183884641[1] = state[1];
   out_8895808911183884641[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7795977292542014195) {
   out_7795977292542014195[0] = 1;
   out_7795977292542014195[1] = 0;
   out_7795977292542014195[2] = 0;
   out_7795977292542014195[3] = 0;
   out_7795977292542014195[4] = 0;
   out_7795977292542014195[5] = 0;
   out_7795977292542014195[6] = 0;
   out_7795977292542014195[7] = 0;
   out_7795977292542014195[8] = 0;
   out_7795977292542014195[9] = 0;
   out_7795977292542014195[10] = 0;
   out_7795977292542014195[11] = 0;
   out_7795977292542014195[12] = 0;
   out_7795977292542014195[13] = 0;
   out_7795977292542014195[14] = 0;
   out_7795977292542014195[15] = 0;
   out_7795977292542014195[16] = 0;
   out_7795977292542014195[17] = 0;
   out_7795977292542014195[18] = 0;
   out_7795977292542014195[19] = 0;
   out_7795977292542014195[20] = 0;
   out_7795977292542014195[21] = 0;
   out_7795977292542014195[22] = 0;
   out_7795977292542014195[23] = 1;
   out_7795977292542014195[24] = 0;
   out_7795977292542014195[25] = 0;
   out_7795977292542014195[26] = 0;
   out_7795977292542014195[27] = 0;
   out_7795977292542014195[28] = 0;
   out_7795977292542014195[29] = 0;
   out_7795977292542014195[30] = 0;
   out_7795977292542014195[31] = 0;
   out_7795977292542014195[32] = 0;
   out_7795977292542014195[33] = 0;
   out_7795977292542014195[34] = 0;
   out_7795977292542014195[35] = 0;
   out_7795977292542014195[36] = 0;
   out_7795977292542014195[37] = 0;
   out_7795977292542014195[38] = 0;
   out_7795977292542014195[39] = 0;
   out_7795977292542014195[40] = 0;
   out_7795977292542014195[41] = 0;
   out_7795977292542014195[42] = 0;
   out_7795977292542014195[43] = 0;
   out_7795977292542014195[44] = 0;
   out_7795977292542014195[45] = 0;
   out_7795977292542014195[46] = 1;
   out_7795977292542014195[47] = 0;
   out_7795977292542014195[48] = 0;
   out_7795977292542014195[49] = 0;
   out_7795977292542014195[50] = 0;
   out_7795977292542014195[51] = 0;
   out_7795977292542014195[52] = 0;
   out_7795977292542014195[53] = 0;
   out_7795977292542014195[54] = 0;
   out_7795977292542014195[55] = 0;
   out_7795977292542014195[56] = 0;
   out_7795977292542014195[57] = 0;
   out_7795977292542014195[58] = 0;
   out_7795977292542014195[59] = 0;
   out_7795977292542014195[60] = 0;
   out_7795977292542014195[61] = 0;
   out_7795977292542014195[62] = 0;
   out_7795977292542014195[63] = 0;
   out_7795977292542014195[64] = 0;
   out_7795977292542014195[65] = 0;
}
void h_31(double *state, double *unused, double *out_2639856322092056917) {
   out_2639856322092056917[0] = state[7];
   out_2639856322092056917[1] = state[8];
   out_2639856322092056917[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7905203748842523712) {
   out_7905203748842523712[0] = 0;
   out_7905203748842523712[1] = 0;
   out_7905203748842523712[2] = 0;
   out_7905203748842523712[3] = 0;
   out_7905203748842523712[4] = 0;
   out_7905203748842523712[5] = 0;
   out_7905203748842523712[6] = 0;
   out_7905203748842523712[7] = 1;
   out_7905203748842523712[8] = 0;
   out_7905203748842523712[9] = 0;
   out_7905203748842523712[10] = 0;
   out_7905203748842523712[11] = 0;
   out_7905203748842523712[12] = 0;
   out_7905203748842523712[13] = 0;
   out_7905203748842523712[14] = 0;
   out_7905203748842523712[15] = 0;
   out_7905203748842523712[16] = 0;
   out_7905203748842523712[17] = 0;
   out_7905203748842523712[18] = 0;
   out_7905203748842523712[19] = 0;
   out_7905203748842523712[20] = 0;
   out_7905203748842523712[21] = 0;
   out_7905203748842523712[22] = 0;
   out_7905203748842523712[23] = 0;
   out_7905203748842523712[24] = 0;
   out_7905203748842523712[25] = 0;
   out_7905203748842523712[26] = 0;
   out_7905203748842523712[27] = 0;
   out_7905203748842523712[28] = 0;
   out_7905203748842523712[29] = 0;
   out_7905203748842523712[30] = 1;
   out_7905203748842523712[31] = 0;
   out_7905203748842523712[32] = 0;
   out_7905203748842523712[33] = 0;
   out_7905203748842523712[34] = 0;
   out_7905203748842523712[35] = 0;
   out_7905203748842523712[36] = 0;
   out_7905203748842523712[37] = 0;
   out_7905203748842523712[38] = 0;
   out_7905203748842523712[39] = 0;
   out_7905203748842523712[40] = 0;
   out_7905203748842523712[41] = 0;
   out_7905203748842523712[42] = 0;
   out_7905203748842523712[43] = 0;
   out_7905203748842523712[44] = 0;
   out_7905203748842523712[45] = 0;
   out_7905203748842523712[46] = 0;
   out_7905203748842523712[47] = 0;
   out_7905203748842523712[48] = 0;
   out_7905203748842523712[49] = 0;
   out_7905203748842523712[50] = 0;
   out_7905203748842523712[51] = 0;
   out_7905203748842523712[52] = 0;
   out_7905203748842523712[53] = 1;
   out_7905203748842523712[54] = 0;
   out_7905203748842523712[55] = 0;
   out_7905203748842523712[56] = 0;
   out_7905203748842523712[57] = 0;
   out_7905203748842523712[58] = 0;
   out_7905203748842523712[59] = 0;
   out_7905203748842523712[60] = 0;
   out_7905203748842523712[61] = 0;
   out_7905203748842523712[62] = 0;
   out_7905203748842523712[63] = 0;
   out_7905203748842523712[64] = 0;
   out_7905203748842523712[65] = 0;
}
void h_32(double *state, double *unused, double *out_4440336405208144338) {
   out_4440336405208144338[0] = state[3];
   out_4440336405208144338[1] = state[4];
   out_4440336405208144338[2] = state[5];
   out_4440336405208144338[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8896700815156128302) {
   out_8896700815156128302[0] = 0;
   out_8896700815156128302[1] = 0;
   out_8896700815156128302[2] = 0;
   out_8896700815156128302[3] = 1;
   out_8896700815156128302[4] = 0;
   out_8896700815156128302[5] = 0;
   out_8896700815156128302[6] = 0;
   out_8896700815156128302[7] = 0;
   out_8896700815156128302[8] = 0;
   out_8896700815156128302[9] = 0;
   out_8896700815156128302[10] = 0;
   out_8896700815156128302[11] = 0;
   out_8896700815156128302[12] = 0;
   out_8896700815156128302[13] = 0;
   out_8896700815156128302[14] = 0;
   out_8896700815156128302[15] = 0;
   out_8896700815156128302[16] = 0;
   out_8896700815156128302[17] = 0;
   out_8896700815156128302[18] = 0;
   out_8896700815156128302[19] = 0;
   out_8896700815156128302[20] = 0;
   out_8896700815156128302[21] = 0;
   out_8896700815156128302[22] = 0;
   out_8896700815156128302[23] = 0;
   out_8896700815156128302[24] = 0;
   out_8896700815156128302[25] = 0;
   out_8896700815156128302[26] = 1;
   out_8896700815156128302[27] = 0;
   out_8896700815156128302[28] = 0;
   out_8896700815156128302[29] = 0;
   out_8896700815156128302[30] = 0;
   out_8896700815156128302[31] = 0;
   out_8896700815156128302[32] = 0;
   out_8896700815156128302[33] = 0;
   out_8896700815156128302[34] = 0;
   out_8896700815156128302[35] = 0;
   out_8896700815156128302[36] = 0;
   out_8896700815156128302[37] = 0;
   out_8896700815156128302[38] = 0;
   out_8896700815156128302[39] = 0;
   out_8896700815156128302[40] = 0;
   out_8896700815156128302[41] = 0;
   out_8896700815156128302[42] = 0;
   out_8896700815156128302[43] = 0;
   out_8896700815156128302[44] = 0;
   out_8896700815156128302[45] = 0;
   out_8896700815156128302[46] = 0;
   out_8896700815156128302[47] = 0;
   out_8896700815156128302[48] = 0;
   out_8896700815156128302[49] = 1;
   out_8896700815156128302[50] = 0;
   out_8896700815156128302[51] = 0;
   out_8896700815156128302[52] = 0;
   out_8896700815156128302[53] = 0;
   out_8896700815156128302[54] = 0;
   out_8896700815156128302[55] = 0;
   out_8896700815156128302[56] = 0;
   out_8896700815156128302[57] = 0;
   out_8896700815156128302[58] = 0;
   out_8896700815156128302[59] = 0;
   out_8896700815156128302[60] = 0;
   out_8896700815156128302[61] = 0;
   out_8896700815156128302[62] = 0;
   out_8896700815156128302[63] = 0;
   out_8896700815156128302[64] = 0;
   out_8896700815156128302[65] = 0;
   out_8896700815156128302[66] = 0;
   out_8896700815156128302[67] = 0;
   out_8896700815156128302[68] = 0;
   out_8896700815156128302[69] = 0;
   out_8896700815156128302[70] = 0;
   out_8896700815156128302[71] = 0;
   out_8896700815156128302[72] = 1;
   out_8896700815156128302[73] = 0;
   out_8896700815156128302[74] = 0;
   out_8896700815156128302[75] = 0;
   out_8896700815156128302[76] = 0;
   out_8896700815156128302[77] = 0;
   out_8896700815156128302[78] = 0;
   out_8896700815156128302[79] = 0;
   out_8896700815156128302[80] = 0;
   out_8896700815156128302[81] = 0;
   out_8896700815156128302[82] = 0;
   out_8896700815156128302[83] = 0;
   out_8896700815156128302[84] = 0;
   out_8896700815156128302[85] = 0;
   out_8896700815156128302[86] = 0;
   out_8896700815156128302[87] = 0;
}
void h_13(double *state, double *unused, double *out_1287230079996720546) {
   out_1287230079996720546[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1287230079996720546[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1287230079996720546[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_469682175391566911) {
   out_469682175391566911[0] = 0;
   out_469682175391566911[1] = 0;
   out_469682175391566911[2] = 0;
   out_469682175391566911[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_469682175391566911[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_469682175391566911[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_469682175391566911[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_469682175391566911[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_469682175391566911[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_469682175391566911[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_469682175391566911[10] = 0;
   out_469682175391566911[11] = 0;
   out_469682175391566911[12] = 0;
   out_469682175391566911[13] = 0;
   out_469682175391566911[14] = 0;
   out_469682175391566911[15] = 0;
   out_469682175391566911[16] = 0;
   out_469682175391566911[17] = 0;
   out_469682175391566911[18] = 0;
   out_469682175391566911[19] = 0;
   out_469682175391566911[20] = 0;
   out_469682175391566911[21] = 0;
   out_469682175391566911[22] = 0;
   out_469682175391566911[23] = 0;
   out_469682175391566911[24] = 0;
   out_469682175391566911[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_469682175391566911[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_469682175391566911[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_469682175391566911[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_469682175391566911[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_469682175391566911[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_469682175391566911[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_469682175391566911[32] = 0;
   out_469682175391566911[33] = 0;
   out_469682175391566911[34] = 0;
   out_469682175391566911[35] = 0;
   out_469682175391566911[36] = 0;
   out_469682175391566911[37] = 0;
   out_469682175391566911[38] = 0;
   out_469682175391566911[39] = 0;
   out_469682175391566911[40] = 0;
   out_469682175391566911[41] = 0;
   out_469682175391566911[42] = 0;
   out_469682175391566911[43] = 0;
   out_469682175391566911[44] = 0;
   out_469682175391566911[45] = 0;
   out_469682175391566911[46] = 0;
   out_469682175391566911[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_469682175391566911[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_469682175391566911[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_469682175391566911[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_469682175391566911[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_469682175391566911[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_469682175391566911[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_469682175391566911[54] = 0;
   out_469682175391566911[55] = 0;
   out_469682175391566911[56] = 0;
   out_469682175391566911[57] = 0;
   out_469682175391566911[58] = 0;
   out_469682175391566911[59] = 0;
   out_469682175391566911[60] = 0;
   out_469682175391566911[61] = 0;
   out_469682175391566911[62] = 0;
   out_469682175391566911[63] = 0;
   out_469682175391566911[64] = 0;
   out_469682175391566911[65] = 0;
}
void h_14(double *state, double *unused, double *out_1897727502726321434) {
   out_1897727502726321434[0] = state[10];
   out_1897727502726321434[1] = state[11];
   out_1897727502726321434[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3017710531139643045) {
   out_3017710531139643045[0] = 0;
   out_3017710531139643045[1] = 0;
   out_3017710531139643045[2] = 0;
   out_3017710531139643045[3] = 0;
   out_3017710531139643045[4] = 0;
   out_3017710531139643045[5] = 0;
   out_3017710531139643045[6] = 0;
   out_3017710531139643045[7] = 0;
   out_3017710531139643045[8] = 0;
   out_3017710531139643045[9] = 0;
   out_3017710531139643045[10] = 1;
   out_3017710531139643045[11] = 0;
   out_3017710531139643045[12] = 0;
   out_3017710531139643045[13] = 0;
   out_3017710531139643045[14] = 0;
   out_3017710531139643045[15] = 0;
   out_3017710531139643045[16] = 0;
   out_3017710531139643045[17] = 0;
   out_3017710531139643045[18] = 0;
   out_3017710531139643045[19] = 0;
   out_3017710531139643045[20] = 0;
   out_3017710531139643045[21] = 0;
   out_3017710531139643045[22] = 0;
   out_3017710531139643045[23] = 0;
   out_3017710531139643045[24] = 0;
   out_3017710531139643045[25] = 0;
   out_3017710531139643045[26] = 0;
   out_3017710531139643045[27] = 0;
   out_3017710531139643045[28] = 0;
   out_3017710531139643045[29] = 0;
   out_3017710531139643045[30] = 0;
   out_3017710531139643045[31] = 0;
   out_3017710531139643045[32] = 0;
   out_3017710531139643045[33] = 1;
   out_3017710531139643045[34] = 0;
   out_3017710531139643045[35] = 0;
   out_3017710531139643045[36] = 0;
   out_3017710531139643045[37] = 0;
   out_3017710531139643045[38] = 0;
   out_3017710531139643045[39] = 0;
   out_3017710531139643045[40] = 0;
   out_3017710531139643045[41] = 0;
   out_3017710531139643045[42] = 0;
   out_3017710531139643045[43] = 0;
   out_3017710531139643045[44] = 0;
   out_3017710531139643045[45] = 0;
   out_3017710531139643045[46] = 0;
   out_3017710531139643045[47] = 0;
   out_3017710531139643045[48] = 0;
   out_3017710531139643045[49] = 0;
   out_3017710531139643045[50] = 0;
   out_3017710531139643045[51] = 0;
   out_3017710531139643045[52] = 0;
   out_3017710531139643045[53] = 0;
   out_3017710531139643045[54] = 0;
   out_3017710531139643045[55] = 0;
   out_3017710531139643045[56] = 1;
   out_3017710531139643045[57] = 0;
   out_3017710531139643045[58] = 0;
   out_3017710531139643045[59] = 0;
   out_3017710531139643045[60] = 0;
   out_3017710531139643045[61] = 0;
   out_3017710531139643045[62] = 0;
   out_3017710531139643045[63] = 0;
   out_3017710531139643045[64] = 0;
   out_3017710531139643045[65] = 0;
}
void h_33(double *state, double *unused, double *out_8667330531082858134) {
   out_8667330531082858134[0] = state[16];
   out_8667330531082858134[1] = state[17];
   out_8667330531082858134[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4754646744203666108) {
   out_4754646744203666108[0] = 0;
   out_4754646744203666108[1] = 0;
   out_4754646744203666108[2] = 0;
   out_4754646744203666108[3] = 0;
   out_4754646744203666108[4] = 0;
   out_4754646744203666108[5] = 0;
   out_4754646744203666108[6] = 0;
   out_4754646744203666108[7] = 0;
   out_4754646744203666108[8] = 0;
   out_4754646744203666108[9] = 0;
   out_4754646744203666108[10] = 0;
   out_4754646744203666108[11] = 0;
   out_4754646744203666108[12] = 0;
   out_4754646744203666108[13] = 0;
   out_4754646744203666108[14] = 0;
   out_4754646744203666108[15] = 0;
   out_4754646744203666108[16] = 1;
   out_4754646744203666108[17] = 0;
   out_4754646744203666108[18] = 0;
   out_4754646744203666108[19] = 0;
   out_4754646744203666108[20] = 0;
   out_4754646744203666108[21] = 0;
   out_4754646744203666108[22] = 0;
   out_4754646744203666108[23] = 0;
   out_4754646744203666108[24] = 0;
   out_4754646744203666108[25] = 0;
   out_4754646744203666108[26] = 0;
   out_4754646744203666108[27] = 0;
   out_4754646744203666108[28] = 0;
   out_4754646744203666108[29] = 0;
   out_4754646744203666108[30] = 0;
   out_4754646744203666108[31] = 0;
   out_4754646744203666108[32] = 0;
   out_4754646744203666108[33] = 0;
   out_4754646744203666108[34] = 0;
   out_4754646744203666108[35] = 0;
   out_4754646744203666108[36] = 0;
   out_4754646744203666108[37] = 0;
   out_4754646744203666108[38] = 0;
   out_4754646744203666108[39] = 1;
   out_4754646744203666108[40] = 0;
   out_4754646744203666108[41] = 0;
   out_4754646744203666108[42] = 0;
   out_4754646744203666108[43] = 0;
   out_4754646744203666108[44] = 0;
   out_4754646744203666108[45] = 0;
   out_4754646744203666108[46] = 0;
   out_4754646744203666108[47] = 0;
   out_4754646744203666108[48] = 0;
   out_4754646744203666108[49] = 0;
   out_4754646744203666108[50] = 0;
   out_4754646744203666108[51] = 0;
   out_4754646744203666108[52] = 0;
   out_4754646744203666108[53] = 0;
   out_4754646744203666108[54] = 0;
   out_4754646744203666108[55] = 0;
   out_4754646744203666108[56] = 0;
   out_4754646744203666108[57] = 0;
   out_4754646744203666108[58] = 0;
   out_4754646744203666108[59] = 0;
   out_4754646744203666108[60] = 0;
   out_4754646744203666108[61] = 0;
   out_4754646744203666108[62] = 1;
   out_4754646744203666108[63] = 0;
   out_4754646744203666108[64] = 0;
   out_4754646744203666108[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3796868102103770979) {
  H(in_vec, out_3796868102103770979);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7507187861718128714) {
  err_fun(nom_x, delta_x, out_7507187861718128714);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5892106134665915380) {
  inv_err_fun(nom_x, true_x, out_5892106134665915380);
}
void live_H_mod_fun(double *state, double *out_4192746810752475091) {
  H_mod_fun(state, out_4192746810752475091);
}
void live_f_fun(double *state, double dt, double *out_1205702479476172964) {
  f_fun(state,  dt, out_1205702479476172964);
}
void live_F_fun(double *state, double dt, double *out_1691520411734880419) {
  F_fun(state,  dt, out_1691520411734880419);
}
void live_h_4(double *state, double *unused, double *out_4767559188458182025) {
  h_4(state, unused, out_4767559188458182025);
}
void live_H_4(double *state, double *unused, double *out_7174878267494420528) {
  H_4(state, unused, out_7174878267494420528);
}
void live_h_9(double *state, double *unused, double *out_1897727502726321434) {
  h_9(state, unused, out_1897727502726321434);
}
void live_H_9(double *state, double *unused, double *out_3017710531139643045) {
  H_9(state, unused, out_3017710531139643045);
}
void live_h_10(double *state, double *unused, double *out_3147874293051680291) {
  h_10(state, unused, out_3147874293051680291);
}
void live_H_10(double *state, double *unused, double *out_4966352340262754741) {
  H_10(state, unused, out_4966352340262754741);
}
void live_h_12(double *state, double *unused, double *out_8895808911183884641) {
  h_12(state, unused, out_8895808911183884641);
}
void live_H_12(double *state, double *unused, double *out_7795977292542014195) {
  H_12(state, unused, out_7795977292542014195);
}
void live_h_31(double *state, double *unused, double *out_2639856322092056917) {
  h_31(state, unused, out_2639856322092056917);
}
void live_H_31(double *state, double *unused, double *out_7905203748842523712) {
  H_31(state, unused, out_7905203748842523712);
}
void live_h_32(double *state, double *unused, double *out_4440336405208144338) {
  h_32(state, unused, out_4440336405208144338);
}
void live_H_32(double *state, double *unused, double *out_8896700815156128302) {
  H_32(state, unused, out_8896700815156128302);
}
void live_h_13(double *state, double *unused, double *out_1287230079996720546) {
  h_13(state, unused, out_1287230079996720546);
}
void live_H_13(double *state, double *unused, double *out_469682175391566911) {
  H_13(state, unused, out_469682175391566911);
}
void live_h_14(double *state, double *unused, double *out_1897727502726321434) {
  h_14(state, unused, out_1897727502726321434);
}
void live_H_14(double *state, double *unused, double *out_3017710531139643045) {
  H_14(state, unused, out_3017710531139643045);
}
void live_h_33(double *state, double *unused, double *out_8667330531082858134) {
  h_33(state, unused, out_8667330531082858134);
}
void live_H_33(double *state, double *unused, double *out_4754646744203666108) {
  H_33(state, unused, out_4754646744203666108);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
