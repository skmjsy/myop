#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_654241702107958367) {
   out_654241702107958367[0] = 0;
   out_654241702107958367[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_654241702107958367[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_654241702107958367[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_654241702107958367[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_654241702107958367[5] = -sin(in_vec[1]);
   out_654241702107958367[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_654241702107958367[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_654241702107958367[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_654241702107958367[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_654241702107958367[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_654241702107958367[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_654241702107958367[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_654241702107958367[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_654241702107958367[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_654241702107958367[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_654241702107958367[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_654241702107958367[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5125877990615348777) {
   out_5125877990615348777[0] = delta_x[0] + nom_x[0];
   out_5125877990615348777[1] = delta_x[1] + nom_x[1];
   out_5125877990615348777[2] = delta_x[2] + nom_x[2];
   out_5125877990615348777[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5125877990615348777[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5125877990615348777[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5125877990615348777[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5125877990615348777[7] = delta_x[6] + nom_x[7];
   out_5125877990615348777[8] = delta_x[7] + nom_x[8];
   out_5125877990615348777[9] = delta_x[8] + nom_x[9];
   out_5125877990615348777[10] = delta_x[9] + nom_x[10];
   out_5125877990615348777[11] = delta_x[10] + nom_x[11];
   out_5125877990615348777[12] = delta_x[11] + nom_x[12];
   out_5125877990615348777[13] = delta_x[12] + nom_x[13];
   out_5125877990615348777[14] = delta_x[13] + nom_x[14];
   out_5125877990615348777[15] = delta_x[14] + nom_x[15];
   out_5125877990615348777[16] = delta_x[15] + nom_x[16];
   out_5125877990615348777[17] = delta_x[16] + nom_x[17];
   out_5125877990615348777[18] = delta_x[17] + nom_x[18];
   out_5125877990615348777[19] = delta_x[18] + nom_x[19];
   out_5125877990615348777[20] = delta_x[19] + nom_x[20];
   out_5125877990615348777[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6267094538257137714) {
   out_6267094538257137714[0] = -nom_x[0] + true_x[0];
   out_6267094538257137714[1] = -nom_x[1] + true_x[1];
   out_6267094538257137714[2] = -nom_x[2] + true_x[2];
   out_6267094538257137714[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6267094538257137714[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6267094538257137714[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6267094538257137714[6] = -nom_x[7] + true_x[7];
   out_6267094538257137714[7] = -nom_x[8] + true_x[8];
   out_6267094538257137714[8] = -nom_x[9] + true_x[9];
   out_6267094538257137714[9] = -nom_x[10] + true_x[10];
   out_6267094538257137714[10] = -nom_x[11] + true_x[11];
   out_6267094538257137714[11] = -nom_x[12] + true_x[12];
   out_6267094538257137714[12] = -nom_x[13] + true_x[13];
   out_6267094538257137714[13] = -nom_x[14] + true_x[14];
   out_6267094538257137714[14] = -nom_x[15] + true_x[15];
   out_6267094538257137714[15] = -nom_x[16] + true_x[16];
   out_6267094538257137714[16] = -nom_x[17] + true_x[17];
   out_6267094538257137714[17] = -nom_x[18] + true_x[18];
   out_6267094538257137714[18] = -nom_x[19] + true_x[19];
   out_6267094538257137714[19] = -nom_x[20] + true_x[20];
   out_6267094538257137714[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_9122635722341517273) {
   out_9122635722341517273[0] = 1.0;
   out_9122635722341517273[1] = 0;
   out_9122635722341517273[2] = 0;
   out_9122635722341517273[3] = 0;
   out_9122635722341517273[4] = 0;
   out_9122635722341517273[5] = 0;
   out_9122635722341517273[6] = 0;
   out_9122635722341517273[7] = 0;
   out_9122635722341517273[8] = 0;
   out_9122635722341517273[9] = 0;
   out_9122635722341517273[10] = 0;
   out_9122635722341517273[11] = 0;
   out_9122635722341517273[12] = 0;
   out_9122635722341517273[13] = 0;
   out_9122635722341517273[14] = 0;
   out_9122635722341517273[15] = 0;
   out_9122635722341517273[16] = 0;
   out_9122635722341517273[17] = 0;
   out_9122635722341517273[18] = 0;
   out_9122635722341517273[19] = 0;
   out_9122635722341517273[20] = 0;
   out_9122635722341517273[21] = 0;
   out_9122635722341517273[22] = 1.0;
   out_9122635722341517273[23] = 0;
   out_9122635722341517273[24] = 0;
   out_9122635722341517273[25] = 0;
   out_9122635722341517273[26] = 0;
   out_9122635722341517273[27] = 0;
   out_9122635722341517273[28] = 0;
   out_9122635722341517273[29] = 0;
   out_9122635722341517273[30] = 0;
   out_9122635722341517273[31] = 0;
   out_9122635722341517273[32] = 0;
   out_9122635722341517273[33] = 0;
   out_9122635722341517273[34] = 0;
   out_9122635722341517273[35] = 0;
   out_9122635722341517273[36] = 0;
   out_9122635722341517273[37] = 0;
   out_9122635722341517273[38] = 0;
   out_9122635722341517273[39] = 0;
   out_9122635722341517273[40] = 0;
   out_9122635722341517273[41] = 0;
   out_9122635722341517273[42] = 0;
   out_9122635722341517273[43] = 0;
   out_9122635722341517273[44] = 1.0;
   out_9122635722341517273[45] = 0;
   out_9122635722341517273[46] = 0;
   out_9122635722341517273[47] = 0;
   out_9122635722341517273[48] = 0;
   out_9122635722341517273[49] = 0;
   out_9122635722341517273[50] = 0;
   out_9122635722341517273[51] = 0;
   out_9122635722341517273[52] = 0;
   out_9122635722341517273[53] = 0;
   out_9122635722341517273[54] = 0;
   out_9122635722341517273[55] = 0;
   out_9122635722341517273[56] = 0;
   out_9122635722341517273[57] = 0;
   out_9122635722341517273[58] = 0;
   out_9122635722341517273[59] = 0;
   out_9122635722341517273[60] = 0;
   out_9122635722341517273[61] = 0;
   out_9122635722341517273[62] = 0;
   out_9122635722341517273[63] = 0;
   out_9122635722341517273[64] = 0;
   out_9122635722341517273[65] = 0;
   out_9122635722341517273[66] = -0.5*state[4];
   out_9122635722341517273[67] = -0.5*state[5];
   out_9122635722341517273[68] = -0.5*state[6];
   out_9122635722341517273[69] = 0;
   out_9122635722341517273[70] = 0;
   out_9122635722341517273[71] = 0;
   out_9122635722341517273[72] = 0;
   out_9122635722341517273[73] = 0;
   out_9122635722341517273[74] = 0;
   out_9122635722341517273[75] = 0;
   out_9122635722341517273[76] = 0;
   out_9122635722341517273[77] = 0;
   out_9122635722341517273[78] = 0;
   out_9122635722341517273[79] = 0;
   out_9122635722341517273[80] = 0;
   out_9122635722341517273[81] = 0;
   out_9122635722341517273[82] = 0;
   out_9122635722341517273[83] = 0;
   out_9122635722341517273[84] = 0;
   out_9122635722341517273[85] = 0;
   out_9122635722341517273[86] = 0;
   out_9122635722341517273[87] = 0.5*state[3];
   out_9122635722341517273[88] = 0.5*state[6];
   out_9122635722341517273[89] = -0.5*state[5];
   out_9122635722341517273[90] = 0;
   out_9122635722341517273[91] = 0;
   out_9122635722341517273[92] = 0;
   out_9122635722341517273[93] = 0;
   out_9122635722341517273[94] = 0;
   out_9122635722341517273[95] = 0;
   out_9122635722341517273[96] = 0;
   out_9122635722341517273[97] = 0;
   out_9122635722341517273[98] = 0;
   out_9122635722341517273[99] = 0;
   out_9122635722341517273[100] = 0;
   out_9122635722341517273[101] = 0;
   out_9122635722341517273[102] = 0;
   out_9122635722341517273[103] = 0;
   out_9122635722341517273[104] = 0;
   out_9122635722341517273[105] = 0;
   out_9122635722341517273[106] = 0;
   out_9122635722341517273[107] = 0;
   out_9122635722341517273[108] = -0.5*state[6];
   out_9122635722341517273[109] = 0.5*state[3];
   out_9122635722341517273[110] = 0.5*state[4];
   out_9122635722341517273[111] = 0;
   out_9122635722341517273[112] = 0;
   out_9122635722341517273[113] = 0;
   out_9122635722341517273[114] = 0;
   out_9122635722341517273[115] = 0;
   out_9122635722341517273[116] = 0;
   out_9122635722341517273[117] = 0;
   out_9122635722341517273[118] = 0;
   out_9122635722341517273[119] = 0;
   out_9122635722341517273[120] = 0;
   out_9122635722341517273[121] = 0;
   out_9122635722341517273[122] = 0;
   out_9122635722341517273[123] = 0;
   out_9122635722341517273[124] = 0;
   out_9122635722341517273[125] = 0;
   out_9122635722341517273[126] = 0;
   out_9122635722341517273[127] = 0;
   out_9122635722341517273[128] = 0;
   out_9122635722341517273[129] = 0.5*state[5];
   out_9122635722341517273[130] = -0.5*state[4];
   out_9122635722341517273[131] = 0.5*state[3];
   out_9122635722341517273[132] = 0;
   out_9122635722341517273[133] = 0;
   out_9122635722341517273[134] = 0;
   out_9122635722341517273[135] = 0;
   out_9122635722341517273[136] = 0;
   out_9122635722341517273[137] = 0;
   out_9122635722341517273[138] = 0;
   out_9122635722341517273[139] = 0;
   out_9122635722341517273[140] = 0;
   out_9122635722341517273[141] = 0;
   out_9122635722341517273[142] = 0;
   out_9122635722341517273[143] = 0;
   out_9122635722341517273[144] = 0;
   out_9122635722341517273[145] = 0;
   out_9122635722341517273[146] = 0;
   out_9122635722341517273[147] = 0;
   out_9122635722341517273[148] = 0;
   out_9122635722341517273[149] = 0;
   out_9122635722341517273[150] = 0;
   out_9122635722341517273[151] = 0;
   out_9122635722341517273[152] = 0;
   out_9122635722341517273[153] = 1.0;
   out_9122635722341517273[154] = 0;
   out_9122635722341517273[155] = 0;
   out_9122635722341517273[156] = 0;
   out_9122635722341517273[157] = 0;
   out_9122635722341517273[158] = 0;
   out_9122635722341517273[159] = 0;
   out_9122635722341517273[160] = 0;
   out_9122635722341517273[161] = 0;
   out_9122635722341517273[162] = 0;
   out_9122635722341517273[163] = 0;
   out_9122635722341517273[164] = 0;
   out_9122635722341517273[165] = 0;
   out_9122635722341517273[166] = 0;
   out_9122635722341517273[167] = 0;
   out_9122635722341517273[168] = 0;
   out_9122635722341517273[169] = 0;
   out_9122635722341517273[170] = 0;
   out_9122635722341517273[171] = 0;
   out_9122635722341517273[172] = 0;
   out_9122635722341517273[173] = 0;
   out_9122635722341517273[174] = 0;
   out_9122635722341517273[175] = 1.0;
   out_9122635722341517273[176] = 0;
   out_9122635722341517273[177] = 0;
   out_9122635722341517273[178] = 0;
   out_9122635722341517273[179] = 0;
   out_9122635722341517273[180] = 0;
   out_9122635722341517273[181] = 0;
   out_9122635722341517273[182] = 0;
   out_9122635722341517273[183] = 0;
   out_9122635722341517273[184] = 0;
   out_9122635722341517273[185] = 0;
   out_9122635722341517273[186] = 0;
   out_9122635722341517273[187] = 0;
   out_9122635722341517273[188] = 0;
   out_9122635722341517273[189] = 0;
   out_9122635722341517273[190] = 0;
   out_9122635722341517273[191] = 0;
   out_9122635722341517273[192] = 0;
   out_9122635722341517273[193] = 0;
   out_9122635722341517273[194] = 0;
   out_9122635722341517273[195] = 0;
   out_9122635722341517273[196] = 0;
   out_9122635722341517273[197] = 1.0;
   out_9122635722341517273[198] = 0;
   out_9122635722341517273[199] = 0;
   out_9122635722341517273[200] = 0;
   out_9122635722341517273[201] = 0;
   out_9122635722341517273[202] = 0;
   out_9122635722341517273[203] = 0;
   out_9122635722341517273[204] = 0;
   out_9122635722341517273[205] = 0;
   out_9122635722341517273[206] = 0;
   out_9122635722341517273[207] = 0;
   out_9122635722341517273[208] = 0;
   out_9122635722341517273[209] = 0;
   out_9122635722341517273[210] = 0;
   out_9122635722341517273[211] = 0;
   out_9122635722341517273[212] = 0;
   out_9122635722341517273[213] = 0;
   out_9122635722341517273[214] = 0;
   out_9122635722341517273[215] = 0;
   out_9122635722341517273[216] = 0;
   out_9122635722341517273[217] = 0;
   out_9122635722341517273[218] = 0;
   out_9122635722341517273[219] = 1.0;
   out_9122635722341517273[220] = 0;
   out_9122635722341517273[221] = 0;
   out_9122635722341517273[222] = 0;
   out_9122635722341517273[223] = 0;
   out_9122635722341517273[224] = 0;
   out_9122635722341517273[225] = 0;
   out_9122635722341517273[226] = 0;
   out_9122635722341517273[227] = 0;
   out_9122635722341517273[228] = 0;
   out_9122635722341517273[229] = 0;
   out_9122635722341517273[230] = 0;
   out_9122635722341517273[231] = 0;
   out_9122635722341517273[232] = 0;
   out_9122635722341517273[233] = 0;
   out_9122635722341517273[234] = 0;
   out_9122635722341517273[235] = 0;
   out_9122635722341517273[236] = 0;
   out_9122635722341517273[237] = 0;
   out_9122635722341517273[238] = 0;
   out_9122635722341517273[239] = 0;
   out_9122635722341517273[240] = 0;
   out_9122635722341517273[241] = 1.0;
   out_9122635722341517273[242] = 0;
   out_9122635722341517273[243] = 0;
   out_9122635722341517273[244] = 0;
   out_9122635722341517273[245] = 0;
   out_9122635722341517273[246] = 0;
   out_9122635722341517273[247] = 0;
   out_9122635722341517273[248] = 0;
   out_9122635722341517273[249] = 0;
   out_9122635722341517273[250] = 0;
   out_9122635722341517273[251] = 0;
   out_9122635722341517273[252] = 0;
   out_9122635722341517273[253] = 0;
   out_9122635722341517273[254] = 0;
   out_9122635722341517273[255] = 0;
   out_9122635722341517273[256] = 0;
   out_9122635722341517273[257] = 0;
   out_9122635722341517273[258] = 0;
   out_9122635722341517273[259] = 0;
   out_9122635722341517273[260] = 0;
   out_9122635722341517273[261] = 0;
   out_9122635722341517273[262] = 0;
   out_9122635722341517273[263] = 1.0;
   out_9122635722341517273[264] = 0;
   out_9122635722341517273[265] = 0;
   out_9122635722341517273[266] = 0;
   out_9122635722341517273[267] = 0;
   out_9122635722341517273[268] = 0;
   out_9122635722341517273[269] = 0;
   out_9122635722341517273[270] = 0;
   out_9122635722341517273[271] = 0;
   out_9122635722341517273[272] = 0;
   out_9122635722341517273[273] = 0;
   out_9122635722341517273[274] = 0;
   out_9122635722341517273[275] = 0;
   out_9122635722341517273[276] = 0;
   out_9122635722341517273[277] = 0;
   out_9122635722341517273[278] = 0;
   out_9122635722341517273[279] = 0;
   out_9122635722341517273[280] = 0;
   out_9122635722341517273[281] = 0;
   out_9122635722341517273[282] = 0;
   out_9122635722341517273[283] = 0;
   out_9122635722341517273[284] = 0;
   out_9122635722341517273[285] = 1.0;
   out_9122635722341517273[286] = 0;
   out_9122635722341517273[287] = 0;
   out_9122635722341517273[288] = 0;
   out_9122635722341517273[289] = 0;
   out_9122635722341517273[290] = 0;
   out_9122635722341517273[291] = 0;
   out_9122635722341517273[292] = 0;
   out_9122635722341517273[293] = 0;
   out_9122635722341517273[294] = 0;
   out_9122635722341517273[295] = 0;
   out_9122635722341517273[296] = 0;
   out_9122635722341517273[297] = 0;
   out_9122635722341517273[298] = 0;
   out_9122635722341517273[299] = 0;
   out_9122635722341517273[300] = 0;
   out_9122635722341517273[301] = 0;
   out_9122635722341517273[302] = 0;
   out_9122635722341517273[303] = 0;
   out_9122635722341517273[304] = 0;
   out_9122635722341517273[305] = 0;
   out_9122635722341517273[306] = 0;
   out_9122635722341517273[307] = 1.0;
   out_9122635722341517273[308] = 0;
   out_9122635722341517273[309] = 0;
   out_9122635722341517273[310] = 0;
   out_9122635722341517273[311] = 0;
   out_9122635722341517273[312] = 0;
   out_9122635722341517273[313] = 0;
   out_9122635722341517273[314] = 0;
   out_9122635722341517273[315] = 0;
   out_9122635722341517273[316] = 0;
   out_9122635722341517273[317] = 0;
   out_9122635722341517273[318] = 0;
   out_9122635722341517273[319] = 0;
   out_9122635722341517273[320] = 0;
   out_9122635722341517273[321] = 0;
   out_9122635722341517273[322] = 0;
   out_9122635722341517273[323] = 0;
   out_9122635722341517273[324] = 0;
   out_9122635722341517273[325] = 0;
   out_9122635722341517273[326] = 0;
   out_9122635722341517273[327] = 0;
   out_9122635722341517273[328] = 0;
   out_9122635722341517273[329] = 1.0;
   out_9122635722341517273[330] = 0;
   out_9122635722341517273[331] = 0;
   out_9122635722341517273[332] = 0;
   out_9122635722341517273[333] = 0;
   out_9122635722341517273[334] = 0;
   out_9122635722341517273[335] = 0;
   out_9122635722341517273[336] = 0;
   out_9122635722341517273[337] = 0;
   out_9122635722341517273[338] = 0;
   out_9122635722341517273[339] = 0;
   out_9122635722341517273[340] = 0;
   out_9122635722341517273[341] = 0;
   out_9122635722341517273[342] = 0;
   out_9122635722341517273[343] = 0;
   out_9122635722341517273[344] = 0;
   out_9122635722341517273[345] = 0;
   out_9122635722341517273[346] = 0;
   out_9122635722341517273[347] = 0;
   out_9122635722341517273[348] = 0;
   out_9122635722341517273[349] = 0;
   out_9122635722341517273[350] = 0;
   out_9122635722341517273[351] = 1.0;
   out_9122635722341517273[352] = 0;
   out_9122635722341517273[353] = 0;
   out_9122635722341517273[354] = 0;
   out_9122635722341517273[355] = 0;
   out_9122635722341517273[356] = 0;
   out_9122635722341517273[357] = 0;
   out_9122635722341517273[358] = 0;
   out_9122635722341517273[359] = 0;
   out_9122635722341517273[360] = 0;
   out_9122635722341517273[361] = 0;
   out_9122635722341517273[362] = 0;
   out_9122635722341517273[363] = 0;
   out_9122635722341517273[364] = 0;
   out_9122635722341517273[365] = 0;
   out_9122635722341517273[366] = 0;
   out_9122635722341517273[367] = 0;
   out_9122635722341517273[368] = 0;
   out_9122635722341517273[369] = 0;
   out_9122635722341517273[370] = 0;
   out_9122635722341517273[371] = 0;
   out_9122635722341517273[372] = 0;
   out_9122635722341517273[373] = 1.0;
   out_9122635722341517273[374] = 0;
   out_9122635722341517273[375] = 0;
   out_9122635722341517273[376] = 0;
   out_9122635722341517273[377] = 0;
   out_9122635722341517273[378] = 0;
   out_9122635722341517273[379] = 0;
   out_9122635722341517273[380] = 0;
   out_9122635722341517273[381] = 0;
   out_9122635722341517273[382] = 0;
   out_9122635722341517273[383] = 0;
   out_9122635722341517273[384] = 0;
   out_9122635722341517273[385] = 0;
   out_9122635722341517273[386] = 0;
   out_9122635722341517273[387] = 0;
   out_9122635722341517273[388] = 0;
   out_9122635722341517273[389] = 0;
   out_9122635722341517273[390] = 0;
   out_9122635722341517273[391] = 0;
   out_9122635722341517273[392] = 0;
   out_9122635722341517273[393] = 0;
   out_9122635722341517273[394] = 0;
   out_9122635722341517273[395] = 1.0;
   out_9122635722341517273[396] = 0;
   out_9122635722341517273[397] = 0;
   out_9122635722341517273[398] = 0;
   out_9122635722341517273[399] = 0;
   out_9122635722341517273[400] = 0;
   out_9122635722341517273[401] = 0;
   out_9122635722341517273[402] = 0;
   out_9122635722341517273[403] = 0;
   out_9122635722341517273[404] = 0;
   out_9122635722341517273[405] = 0;
   out_9122635722341517273[406] = 0;
   out_9122635722341517273[407] = 0;
   out_9122635722341517273[408] = 0;
   out_9122635722341517273[409] = 0;
   out_9122635722341517273[410] = 0;
   out_9122635722341517273[411] = 0;
   out_9122635722341517273[412] = 0;
   out_9122635722341517273[413] = 0;
   out_9122635722341517273[414] = 0;
   out_9122635722341517273[415] = 0;
   out_9122635722341517273[416] = 0;
   out_9122635722341517273[417] = 1.0;
   out_9122635722341517273[418] = 0;
   out_9122635722341517273[419] = 0;
   out_9122635722341517273[420] = 0;
   out_9122635722341517273[421] = 0;
   out_9122635722341517273[422] = 0;
   out_9122635722341517273[423] = 0;
   out_9122635722341517273[424] = 0;
   out_9122635722341517273[425] = 0;
   out_9122635722341517273[426] = 0;
   out_9122635722341517273[427] = 0;
   out_9122635722341517273[428] = 0;
   out_9122635722341517273[429] = 0;
   out_9122635722341517273[430] = 0;
   out_9122635722341517273[431] = 0;
   out_9122635722341517273[432] = 0;
   out_9122635722341517273[433] = 0;
   out_9122635722341517273[434] = 0;
   out_9122635722341517273[435] = 0;
   out_9122635722341517273[436] = 0;
   out_9122635722341517273[437] = 0;
   out_9122635722341517273[438] = 0;
   out_9122635722341517273[439] = 1.0;
   out_9122635722341517273[440] = 0;
   out_9122635722341517273[441] = 0;
   out_9122635722341517273[442] = 0;
   out_9122635722341517273[443] = 0;
   out_9122635722341517273[444] = 0;
   out_9122635722341517273[445] = 0;
   out_9122635722341517273[446] = 0;
   out_9122635722341517273[447] = 0;
   out_9122635722341517273[448] = 0;
   out_9122635722341517273[449] = 0;
   out_9122635722341517273[450] = 0;
   out_9122635722341517273[451] = 0;
   out_9122635722341517273[452] = 0;
   out_9122635722341517273[453] = 0;
   out_9122635722341517273[454] = 0;
   out_9122635722341517273[455] = 0;
   out_9122635722341517273[456] = 0;
   out_9122635722341517273[457] = 0;
   out_9122635722341517273[458] = 0;
   out_9122635722341517273[459] = 0;
   out_9122635722341517273[460] = 0;
   out_9122635722341517273[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8022326375520724887) {
   out_8022326375520724887[0] = dt*state[7] + state[0];
   out_8022326375520724887[1] = dt*state[8] + state[1];
   out_8022326375520724887[2] = dt*state[9] + state[2];
   out_8022326375520724887[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8022326375520724887[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8022326375520724887[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8022326375520724887[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8022326375520724887[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8022326375520724887[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8022326375520724887[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8022326375520724887[10] = state[10];
   out_8022326375520724887[11] = state[11];
   out_8022326375520724887[12] = state[12];
   out_8022326375520724887[13] = state[13];
   out_8022326375520724887[14] = state[14];
   out_8022326375520724887[15] = state[15];
   out_8022326375520724887[16] = state[16];
   out_8022326375520724887[17] = state[17];
   out_8022326375520724887[18] = state[18];
   out_8022326375520724887[19] = state[19];
   out_8022326375520724887[20] = state[20];
   out_8022326375520724887[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2606084813432559444) {
   out_2606084813432559444[0] = 1;
   out_2606084813432559444[1] = 0;
   out_2606084813432559444[2] = 0;
   out_2606084813432559444[3] = 0;
   out_2606084813432559444[4] = 0;
   out_2606084813432559444[5] = 0;
   out_2606084813432559444[6] = dt;
   out_2606084813432559444[7] = 0;
   out_2606084813432559444[8] = 0;
   out_2606084813432559444[9] = 0;
   out_2606084813432559444[10] = 0;
   out_2606084813432559444[11] = 0;
   out_2606084813432559444[12] = 0;
   out_2606084813432559444[13] = 0;
   out_2606084813432559444[14] = 0;
   out_2606084813432559444[15] = 0;
   out_2606084813432559444[16] = 0;
   out_2606084813432559444[17] = 0;
   out_2606084813432559444[18] = 0;
   out_2606084813432559444[19] = 0;
   out_2606084813432559444[20] = 0;
   out_2606084813432559444[21] = 0;
   out_2606084813432559444[22] = 1;
   out_2606084813432559444[23] = 0;
   out_2606084813432559444[24] = 0;
   out_2606084813432559444[25] = 0;
   out_2606084813432559444[26] = 0;
   out_2606084813432559444[27] = 0;
   out_2606084813432559444[28] = dt;
   out_2606084813432559444[29] = 0;
   out_2606084813432559444[30] = 0;
   out_2606084813432559444[31] = 0;
   out_2606084813432559444[32] = 0;
   out_2606084813432559444[33] = 0;
   out_2606084813432559444[34] = 0;
   out_2606084813432559444[35] = 0;
   out_2606084813432559444[36] = 0;
   out_2606084813432559444[37] = 0;
   out_2606084813432559444[38] = 0;
   out_2606084813432559444[39] = 0;
   out_2606084813432559444[40] = 0;
   out_2606084813432559444[41] = 0;
   out_2606084813432559444[42] = 0;
   out_2606084813432559444[43] = 0;
   out_2606084813432559444[44] = 1;
   out_2606084813432559444[45] = 0;
   out_2606084813432559444[46] = 0;
   out_2606084813432559444[47] = 0;
   out_2606084813432559444[48] = 0;
   out_2606084813432559444[49] = 0;
   out_2606084813432559444[50] = dt;
   out_2606084813432559444[51] = 0;
   out_2606084813432559444[52] = 0;
   out_2606084813432559444[53] = 0;
   out_2606084813432559444[54] = 0;
   out_2606084813432559444[55] = 0;
   out_2606084813432559444[56] = 0;
   out_2606084813432559444[57] = 0;
   out_2606084813432559444[58] = 0;
   out_2606084813432559444[59] = 0;
   out_2606084813432559444[60] = 0;
   out_2606084813432559444[61] = 0;
   out_2606084813432559444[62] = 0;
   out_2606084813432559444[63] = 0;
   out_2606084813432559444[64] = 0;
   out_2606084813432559444[65] = 0;
   out_2606084813432559444[66] = 1;
   out_2606084813432559444[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2606084813432559444[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2606084813432559444[69] = 0;
   out_2606084813432559444[70] = 0;
   out_2606084813432559444[71] = 0;
   out_2606084813432559444[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2606084813432559444[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2606084813432559444[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2606084813432559444[75] = 0;
   out_2606084813432559444[76] = 0;
   out_2606084813432559444[77] = 0;
   out_2606084813432559444[78] = 0;
   out_2606084813432559444[79] = 0;
   out_2606084813432559444[80] = 0;
   out_2606084813432559444[81] = 0;
   out_2606084813432559444[82] = 0;
   out_2606084813432559444[83] = 0;
   out_2606084813432559444[84] = 0;
   out_2606084813432559444[85] = 0;
   out_2606084813432559444[86] = 0;
   out_2606084813432559444[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2606084813432559444[88] = 1;
   out_2606084813432559444[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2606084813432559444[90] = 0;
   out_2606084813432559444[91] = 0;
   out_2606084813432559444[92] = 0;
   out_2606084813432559444[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2606084813432559444[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2606084813432559444[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2606084813432559444[96] = 0;
   out_2606084813432559444[97] = 0;
   out_2606084813432559444[98] = 0;
   out_2606084813432559444[99] = 0;
   out_2606084813432559444[100] = 0;
   out_2606084813432559444[101] = 0;
   out_2606084813432559444[102] = 0;
   out_2606084813432559444[103] = 0;
   out_2606084813432559444[104] = 0;
   out_2606084813432559444[105] = 0;
   out_2606084813432559444[106] = 0;
   out_2606084813432559444[107] = 0;
   out_2606084813432559444[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2606084813432559444[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2606084813432559444[110] = 1;
   out_2606084813432559444[111] = 0;
   out_2606084813432559444[112] = 0;
   out_2606084813432559444[113] = 0;
   out_2606084813432559444[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2606084813432559444[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2606084813432559444[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2606084813432559444[117] = 0;
   out_2606084813432559444[118] = 0;
   out_2606084813432559444[119] = 0;
   out_2606084813432559444[120] = 0;
   out_2606084813432559444[121] = 0;
   out_2606084813432559444[122] = 0;
   out_2606084813432559444[123] = 0;
   out_2606084813432559444[124] = 0;
   out_2606084813432559444[125] = 0;
   out_2606084813432559444[126] = 0;
   out_2606084813432559444[127] = 0;
   out_2606084813432559444[128] = 0;
   out_2606084813432559444[129] = 0;
   out_2606084813432559444[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2606084813432559444[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2606084813432559444[132] = 1;
   out_2606084813432559444[133] = 0;
   out_2606084813432559444[134] = 0;
   out_2606084813432559444[135] = 0;
   out_2606084813432559444[136] = 0;
   out_2606084813432559444[137] = 0;
   out_2606084813432559444[138] = 0;
   out_2606084813432559444[139] = 0;
   out_2606084813432559444[140] = 0;
   out_2606084813432559444[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2606084813432559444[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2606084813432559444[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2606084813432559444[144] = 0;
   out_2606084813432559444[145] = 0;
   out_2606084813432559444[146] = 0;
   out_2606084813432559444[147] = 0;
   out_2606084813432559444[148] = 0;
   out_2606084813432559444[149] = 0;
   out_2606084813432559444[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2606084813432559444[151] = 0;
   out_2606084813432559444[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2606084813432559444[153] = 0;
   out_2606084813432559444[154] = 1;
   out_2606084813432559444[155] = 0;
   out_2606084813432559444[156] = 0;
   out_2606084813432559444[157] = 0;
   out_2606084813432559444[158] = 0;
   out_2606084813432559444[159] = 0;
   out_2606084813432559444[160] = 0;
   out_2606084813432559444[161] = 0;
   out_2606084813432559444[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2606084813432559444[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2606084813432559444[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2606084813432559444[165] = 0;
   out_2606084813432559444[166] = 0;
   out_2606084813432559444[167] = 0;
   out_2606084813432559444[168] = 0;
   out_2606084813432559444[169] = 0;
   out_2606084813432559444[170] = 0;
   out_2606084813432559444[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2606084813432559444[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2606084813432559444[173] = 0;
   out_2606084813432559444[174] = 0;
   out_2606084813432559444[175] = 0;
   out_2606084813432559444[176] = 1;
   out_2606084813432559444[177] = 0;
   out_2606084813432559444[178] = 0;
   out_2606084813432559444[179] = 0;
   out_2606084813432559444[180] = 0;
   out_2606084813432559444[181] = 0;
   out_2606084813432559444[182] = 0;
   out_2606084813432559444[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2606084813432559444[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2606084813432559444[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2606084813432559444[186] = 0;
   out_2606084813432559444[187] = 0;
   out_2606084813432559444[188] = 0;
   out_2606084813432559444[189] = 0;
   out_2606084813432559444[190] = 0;
   out_2606084813432559444[191] = 0;
   out_2606084813432559444[192] = 0;
   out_2606084813432559444[193] = 0;
   out_2606084813432559444[194] = 0;
   out_2606084813432559444[195] = 0;
   out_2606084813432559444[196] = 0;
   out_2606084813432559444[197] = 0;
   out_2606084813432559444[198] = 1;
   out_2606084813432559444[199] = 0;
   out_2606084813432559444[200] = 0;
   out_2606084813432559444[201] = 0;
   out_2606084813432559444[202] = 0;
   out_2606084813432559444[203] = 0;
   out_2606084813432559444[204] = 0;
   out_2606084813432559444[205] = 0;
   out_2606084813432559444[206] = 0;
   out_2606084813432559444[207] = 0;
   out_2606084813432559444[208] = 0;
   out_2606084813432559444[209] = 0;
   out_2606084813432559444[210] = 0;
   out_2606084813432559444[211] = 0;
   out_2606084813432559444[212] = 0;
   out_2606084813432559444[213] = 0;
   out_2606084813432559444[214] = 0;
   out_2606084813432559444[215] = 0;
   out_2606084813432559444[216] = 0;
   out_2606084813432559444[217] = 0;
   out_2606084813432559444[218] = 0;
   out_2606084813432559444[219] = 0;
   out_2606084813432559444[220] = 1;
   out_2606084813432559444[221] = 0;
   out_2606084813432559444[222] = 0;
   out_2606084813432559444[223] = 0;
   out_2606084813432559444[224] = 0;
   out_2606084813432559444[225] = 0;
   out_2606084813432559444[226] = 0;
   out_2606084813432559444[227] = 0;
   out_2606084813432559444[228] = 0;
   out_2606084813432559444[229] = 0;
   out_2606084813432559444[230] = 0;
   out_2606084813432559444[231] = 0;
   out_2606084813432559444[232] = 0;
   out_2606084813432559444[233] = 0;
   out_2606084813432559444[234] = 0;
   out_2606084813432559444[235] = 0;
   out_2606084813432559444[236] = 0;
   out_2606084813432559444[237] = 0;
   out_2606084813432559444[238] = 0;
   out_2606084813432559444[239] = 0;
   out_2606084813432559444[240] = 0;
   out_2606084813432559444[241] = 0;
   out_2606084813432559444[242] = 1;
   out_2606084813432559444[243] = 0;
   out_2606084813432559444[244] = 0;
   out_2606084813432559444[245] = 0;
   out_2606084813432559444[246] = 0;
   out_2606084813432559444[247] = 0;
   out_2606084813432559444[248] = 0;
   out_2606084813432559444[249] = 0;
   out_2606084813432559444[250] = 0;
   out_2606084813432559444[251] = 0;
   out_2606084813432559444[252] = 0;
   out_2606084813432559444[253] = 0;
   out_2606084813432559444[254] = 0;
   out_2606084813432559444[255] = 0;
   out_2606084813432559444[256] = 0;
   out_2606084813432559444[257] = 0;
   out_2606084813432559444[258] = 0;
   out_2606084813432559444[259] = 0;
   out_2606084813432559444[260] = 0;
   out_2606084813432559444[261] = 0;
   out_2606084813432559444[262] = 0;
   out_2606084813432559444[263] = 0;
   out_2606084813432559444[264] = 1;
   out_2606084813432559444[265] = 0;
   out_2606084813432559444[266] = 0;
   out_2606084813432559444[267] = 0;
   out_2606084813432559444[268] = 0;
   out_2606084813432559444[269] = 0;
   out_2606084813432559444[270] = 0;
   out_2606084813432559444[271] = 0;
   out_2606084813432559444[272] = 0;
   out_2606084813432559444[273] = 0;
   out_2606084813432559444[274] = 0;
   out_2606084813432559444[275] = 0;
   out_2606084813432559444[276] = 0;
   out_2606084813432559444[277] = 0;
   out_2606084813432559444[278] = 0;
   out_2606084813432559444[279] = 0;
   out_2606084813432559444[280] = 0;
   out_2606084813432559444[281] = 0;
   out_2606084813432559444[282] = 0;
   out_2606084813432559444[283] = 0;
   out_2606084813432559444[284] = 0;
   out_2606084813432559444[285] = 0;
   out_2606084813432559444[286] = 1;
   out_2606084813432559444[287] = 0;
   out_2606084813432559444[288] = 0;
   out_2606084813432559444[289] = 0;
   out_2606084813432559444[290] = 0;
   out_2606084813432559444[291] = 0;
   out_2606084813432559444[292] = 0;
   out_2606084813432559444[293] = 0;
   out_2606084813432559444[294] = 0;
   out_2606084813432559444[295] = 0;
   out_2606084813432559444[296] = 0;
   out_2606084813432559444[297] = 0;
   out_2606084813432559444[298] = 0;
   out_2606084813432559444[299] = 0;
   out_2606084813432559444[300] = 0;
   out_2606084813432559444[301] = 0;
   out_2606084813432559444[302] = 0;
   out_2606084813432559444[303] = 0;
   out_2606084813432559444[304] = 0;
   out_2606084813432559444[305] = 0;
   out_2606084813432559444[306] = 0;
   out_2606084813432559444[307] = 0;
   out_2606084813432559444[308] = 1;
   out_2606084813432559444[309] = 0;
   out_2606084813432559444[310] = 0;
   out_2606084813432559444[311] = 0;
   out_2606084813432559444[312] = 0;
   out_2606084813432559444[313] = 0;
   out_2606084813432559444[314] = 0;
   out_2606084813432559444[315] = 0;
   out_2606084813432559444[316] = 0;
   out_2606084813432559444[317] = 0;
   out_2606084813432559444[318] = 0;
   out_2606084813432559444[319] = 0;
   out_2606084813432559444[320] = 0;
   out_2606084813432559444[321] = 0;
   out_2606084813432559444[322] = 0;
   out_2606084813432559444[323] = 0;
   out_2606084813432559444[324] = 0;
   out_2606084813432559444[325] = 0;
   out_2606084813432559444[326] = 0;
   out_2606084813432559444[327] = 0;
   out_2606084813432559444[328] = 0;
   out_2606084813432559444[329] = 0;
   out_2606084813432559444[330] = 1;
   out_2606084813432559444[331] = 0;
   out_2606084813432559444[332] = 0;
   out_2606084813432559444[333] = 0;
   out_2606084813432559444[334] = 0;
   out_2606084813432559444[335] = 0;
   out_2606084813432559444[336] = 0;
   out_2606084813432559444[337] = 0;
   out_2606084813432559444[338] = 0;
   out_2606084813432559444[339] = 0;
   out_2606084813432559444[340] = 0;
   out_2606084813432559444[341] = 0;
   out_2606084813432559444[342] = 0;
   out_2606084813432559444[343] = 0;
   out_2606084813432559444[344] = 0;
   out_2606084813432559444[345] = 0;
   out_2606084813432559444[346] = 0;
   out_2606084813432559444[347] = 0;
   out_2606084813432559444[348] = 0;
   out_2606084813432559444[349] = 0;
   out_2606084813432559444[350] = 0;
   out_2606084813432559444[351] = 0;
   out_2606084813432559444[352] = 1;
   out_2606084813432559444[353] = 0;
   out_2606084813432559444[354] = 0;
   out_2606084813432559444[355] = 0;
   out_2606084813432559444[356] = 0;
   out_2606084813432559444[357] = 0;
   out_2606084813432559444[358] = 0;
   out_2606084813432559444[359] = 0;
   out_2606084813432559444[360] = 0;
   out_2606084813432559444[361] = 0;
   out_2606084813432559444[362] = 0;
   out_2606084813432559444[363] = 0;
   out_2606084813432559444[364] = 0;
   out_2606084813432559444[365] = 0;
   out_2606084813432559444[366] = 0;
   out_2606084813432559444[367] = 0;
   out_2606084813432559444[368] = 0;
   out_2606084813432559444[369] = 0;
   out_2606084813432559444[370] = 0;
   out_2606084813432559444[371] = 0;
   out_2606084813432559444[372] = 0;
   out_2606084813432559444[373] = 0;
   out_2606084813432559444[374] = 1;
   out_2606084813432559444[375] = 0;
   out_2606084813432559444[376] = 0;
   out_2606084813432559444[377] = 0;
   out_2606084813432559444[378] = 0;
   out_2606084813432559444[379] = 0;
   out_2606084813432559444[380] = 0;
   out_2606084813432559444[381] = 0;
   out_2606084813432559444[382] = 0;
   out_2606084813432559444[383] = 0;
   out_2606084813432559444[384] = 0;
   out_2606084813432559444[385] = 0;
   out_2606084813432559444[386] = 0;
   out_2606084813432559444[387] = 0;
   out_2606084813432559444[388] = 0;
   out_2606084813432559444[389] = 0;
   out_2606084813432559444[390] = 0;
   out_2606084813432559444[391] = 0;
   out_2606084813432559444[392] = 0;
   out_2606084813432559444[393] = 0;
   out_2606084813432559444[394] = 0;
   out_2606084813432559444[395] = 0;
   out_2606084813432559444[396] = 1;
   out_2606084813432559444[397] = 0;
   out_2606084813432559444[398] = 0;
   out_2606084813432559444[399] = 0;
   out_2606084813432559444[400] = 0;
   out_2606084813432559444[401] = 0;
   out_2606084813432559444[402] = 0;
   out_2606084813432559444[403] = 0;
   out_2606084813432559444[404] = 0;
   out_2606084813432559444[405] = 0;
   out_2606084813432559444[406] = 0;
   out_2606084813432559444[407] = 0;
   out_2606084813432559444[408] = 0;
   out_2606084813432559444[409] = 0;
   out_2606084813432559444[410] = 0;
   out_2606084813432559444[411] = 0;
   out_2606084813432559444[412] = 0;
   out_2606084813432559444[413] = 0;
   out_2606084813432559444[414] = 0;
   out_2606084813432559444[415] = 0;
   out_2606084813432559444[416] = 0;
   out_2606084813432559444[417] = 0;
   out_2606084813432559444[418] = 1;
   out_2606084813432559444[419] = 0;
   out_2606084813432559444[420] = 0;
   out_2606084813432559444[421] = 0;
   out_2606084813432559444[422] = 0;
   out_2606084813432559444[423] = 0;
   out_2606084813432559444[424] = 0;
   out_2606084813432559444[425] = 0;
   out_2606084813432559444[426] = 0;
   out_2606084813432559444[427] = 0;
   out_2606084813432559444[428] = 0;
   out_2606084813432559444[429] = 0;
   out_2606084813432559444[430] = 0;
   out_2606084813432559444[431] = 0;
   out_2606084813432559444[432] = 0;
   out_2606084813432559444[433] = 0;
   out_2606084813432559444[434] = 0;
   out_2606084813432559444[435] = 0;
   out_2606084813432559444[436] = 0;
   out_2606084813432559444[437] = 0;
   out_2606084813432559444[438] = 0;
   out_2606084813432559444[439] = 0;
   out_2606084813432559444[440] = 1;
}
void h_4(double *state, double *unused, double *out_3884732784060602165) {
   out_3884732784060602165[0] = state[10] + state[13];
   out_3884732784060602165[1] = state[11] + state[14];
   out_3884732784060602165[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7998511476979429796) {
   out_7998511476979429796[0] = 0;
   out_7998511476979429796[1] = 0;
   out_7998511476979429796[2] = 0;
   out_7998511476979429796[3] = 0;
   out_7998511476979429796[4] = 0;
   out_7998511476979429796[5] = 0;
   out_7998511476979429796[6] = 0;
   out_7998511476979429796[7] = 0;
   out_7998511476979429796[8] = 0;
   out_7998511476979429796[9] = 0;
   out_7998511476979429796[10] = 1;
   out_7998511476979429796[11] = 0;
   out_7998511476979429796[12] = 0;
   out_7998511476979429796[13] = 1;
   out_7998511476979429796[14] = 0;
   out_7998511476979429796[15] = 0;
   out_7998511476979429796[16] = 0;
   out_7998511476979429796[17] = 0;
   out_7998511476979429796[18] = 0;
   out_7998511476979429796[19] = 0;
   out_7998511476979429796[20] = 0;
   out_7998511476979429796[21] = 0;
   out_7998511476979429796[22] = 0;
   out_7998511476979429796[23] = 0;
   out_7998511476979429796[24] = 0;
   out_7998511476979429796[25] = 0;
   out_7998511476979429796[26] = 0;
   out_7998511476979429796[27] = 0;
   out_7998511476979429796[28] = 0;
   out_7998511476979429796[29] = 0;
   out_7998511476979429796[30] = 0;
   out_7998511476979429796[31] = 0;
   out_7998511476979429796[32] = 0;
   out_7998511476979429796[33] = 1;
   out_7998511476979429796[34] = 0;
   out_7998511476979429796[35] = 0;
   out_7998511476979429796[36] = 1;
   out_7998511476979429796[37] = 0;
   out_7998511476979429796[38] = 0;
   out_7998511476979429796[39] = 0;
   out_7998511476979429796[40] = 0;
   out_7998511476979429796[41] = 0;
   out_7998511476979429796[42] = 0;
   out_7998511476979429796[43] = 0;
   out_7998511476979429796[44] = 0;
   out_7998511476979429796[45] = 0;
   out_7998511476979429796[46] = 0;
   out_7998511476979429796[47] = 0;
   out_7998511476979429796[48] = 0;
   out_7998511476979429796[49] = 0;
   out_7998511476979429796[50] = 0;
   out_7998511476979429796[51] = 0;
   out_7998511476979429796[52] = 0;
   out_7998511476979429796[53] = 0;
   out_7998511476979429796[54] = 0;
   out_7998511476979429796[55] = 0;
   out_7998511476979429796[56] = 1;
   out_7998511476979429796[57] = 0;
   out_7998511476979429796[58] = 0;
   out_7998511476979429796[59] = 1;
   out_7998511476979429796[60] = 0;
   out_7998511476979429796[61] = 0;
   out_7998511476979429796[62] = 0;
   out_7998511476979429796[63] = 0;
   out_7998511476979429796[64] = 0;
   out_7998511476979429796[65] = 0;
}
void h_9(double *state, double *unused, double *out_4025118706756764653) {
   out_4025118706756764653[0] = state[10];
   out_4025118706756764653[1] = state[11];
   out_4025118706756764653[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7757321830349839151) {
   out_7757321830349839151[0] = 0;
   out_7757321830349839151[1] = 0;
   out_7757321830349839151[2] = 0;
   out_7757321830349839151[3] = 0;
   out_7757321830349839151[4] = 0;
   out_7757321830349839151[5] = 0;
   out_7757321830349839151[6] = 0;
   out_7757321830349839151[7] = 0;
   out_7757321830349839151[8] = 0;
   out_7757321830349839151[9] = 0;
   out_7757321830349839151[10] = 1;
   out_7757321830349839151[11] = 0;
   out_7757321830349839151[12] = 0;
   out_7757321830349839151[13] = 0;
   out_7757321830349839151[14] = 0;
   out_7757321830349839151[15] = 0;
   out_7757321830349839151[16] = 0;
   out_7757321830349839151[17] = 0;
   out_7757321830349839151[18] = 0;
   out_7757321830349839151[19] = 0;
   out_7757321830349839151[20] = 0;
   out_7757321830349839151[21] = 0;
   out_7757321830349839151[22] = 0;
   out_7757321830349839151[23] = 0;
   out_7757321830349839151[24] = 0;
   out_7757321830349839151[25] = 0;
   out_7757321830349839151[26] = 0;
   out_7757321830349839151[27] = 0;
   out_7757321830349839151[28] = 0;
   out_7757321830349839151[29] = 0;
   out_7757321830349839151[30] = 0;
   out_7757321830349839151[31] = 0;
   out_7757321830349839151[32] = 0;
   out_7757321830349839151[33] = 1;
   out_7757321830349839151[34] = 0;
   out_7757321830349839151[35] = 0;
   out_7757321830349839151[36] = 0;
   out_7757321830349839151[37] = 0;
   out_7757321830349839151[38] = 0;
   out_7757321830349839151[39] = 0;
   out_7757321830349839151[40] = 0;
   out_7757321830349839151[41] = 0;
   out_7757321830349839151[42] = 0;
   out_7757321830349839151[43] = 0;
   out_7757321830349839151[44] = 0;
   out_7757321830349839151[45] = 0;
   out_7757321830349839151[46] = 0;
   out_7757321830349839151[47] = 0;
   out_7757321830349839151[48] = 0;
   out_7757321830349839151[49] = 0;
   out_7757321830349839151[50] = 0;
   out_7757321830349839151[51] = 0;
   out_7757321830349839151[52] = 0;
   out_7757321830349839151[53] = 0;
   out_7757321830349839151[54] = 0;
   out_7757321830349839151[55] = 0;
   out_7757321830349839151[56] = 1;
   out_7757321830349839151[57] = 0;
   out_7757321830349839151[58] = 0;
   out_7757321830349839151[59] = 0;
   out_7757321830349839151[60] = 0;
   out_7757321830349839151[61] = 0;
   out_7757321830349839151[62] = 0;
   out_7757321830349839151[63] = 0;
   out_7757321830349839151[64] = 0;
   out_7757321830349839151[65] = 0;
}
void h_10(double *state, double *unused, double *out_7435728696533416274) {
   out_7435728696533416274[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7435728696533416274[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7435728696533416274[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8190984688142623416) {
   out_8190984688142623416[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8190984688142623416[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8190984688142623416[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8190984688142623416[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8190984688142623416[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8190984688142623416[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8190984688142623416[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8190984688142623416[7] = 0;
   out_8190984688142623416[8] = 0;
   out_8190984688142623416[9] = 0;
   out_8190984688142623416[10] = 0;
   out_8190984688142623416[11] = 0;
   out_8190984688142623416[12] = 0;
   out_8190984688142623416[13] = 0;
   out_8190984688142623416[14] = 0;
   out_8190984688142623416[15] = 0;
   out_8190984688142623416[16] = 1;
   out_8190984688142623416[17] = 0;
   out_8190984688142623416[18] = 0;
   out_8190984688142623416[19] = 1;
   out_8190984688142623416[20] = 0;
   out_8190984688142623416[21] = 0;
   out_8190984688142623416[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8190984688142623416[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8190984688142623416[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8190984688142623416[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8190984688142623416[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8190984688142623416[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8190984688142623416[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8190984688142623416[29] = 0;
   out_8190984688142623416[30] = 0;
   out_8190984688142623416[31] = 0;
   out_8190984688142623416[32] = 0;
   out_8190984688142623416[33] = 0;
   out_8190984688142623416[34] = 0;
   out_8190984688142623416[35] = 0;
   out_8190984688142623416[36] = 0;
   out_8190984688142623416[37] = 0;
   out_8190984688142623416[38] = 0;
   out_8190984688142623416[39] = 1;
   out_8190984688142623416[40] = 0;
   out_8190984688142623416[41] = 0;
   out_8190984688142623416[42] = 1;
   out_8190984688142623416[43] = 0;
   out_8190984688142623416[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8190984688142623416[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8190984688142623416[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8190984688142623416[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8190984688142623416[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8190984688142623416[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8190984688142623416[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8190984688142623416[51] = 0;
   out_8190984688142623416[52] = 0;
   out_8190984688142623416[53] = 0;
   out_8190984688142623416[54] = 0;
   out_8190984688142623416[55] = 0;
   out_8190984688142623416[56] = 0;
   out_8190984688142623416[57] = 0;
   out_8190984688142623416[58] = 0;
   out_8190984688142623416[59] = 0;
   out_8190984688142623416[60] = 0;
   out_8190984688142623416[61] = 0;
   out_8190984688142623416[62] = 1;
   out_8190984688142623416[63] = 0;
   out_8190984688142623416[64] = 0;
   out_8190984688142623416[65] = 1;
}
void h_12(double *state, double *unused, double *out_328531660217095654) {
   out_328531660217095654[0] = state[0];
   out_328531660217095654[1] = state[1];
   out_328531660217095654[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7377412451931836129) {
   out_7377412451931836129[0] = 1;
   out_7377412451931836129[1] = 0;
   out_7377412451931836129[2] = 0;
   out_7377412451931836129[3] = 0;
   out_7377412451931836129[4] = 0;
   out_7377412451931836129[5] = 0;
   out_7377412451931836129[6] = 0;
   out_7377412451931836129[7] = 0;
   out_7377412451931836129[8] = 0;
   out_7377412451931836129[9] = 0;
   out_7377412451931836129[10] = 0;
   out_7377412451931836129[11] = 0;
   out_7377412451931836129[12] = 0;
   out_7377412451931836129[13] = 0;
   out_7377412451931836129[14] = 0;
   out_7377412451931836129[15] = 0;
   out_7377412451931836129[16] = 0;
   out_7377412451931836129[17] = 0;
   out_7377412451931836129[18] = 0;
   out_7377412451931836129[19] = 0;
   out_7377412451931836129[20] = 0;
   out_7377412451931836129[21] = 0;
   out_7377412451931836129[22] = 0;
   out_7377412451931836129[23] = 1;
   out_7377412451931836129[24] = 0;
   out_7377412451931836129[25] = 0;
   out_7377412451931836129[26] = 0;
   out_7377412451931836129[27] = 0;
   out_7377412451931836129[28] = 0;
   out_7377412451931836129[29] = 0;
   out_7377412451931836129[30] = 0;
   out_7377412451931836129[31] = 0;
   out_7377412451931836129[32] = 0;
   out_7377412451931836129[33] = 0;
   out_7377412451931836129[34] = 0;
   out_7377412451931836129[35] = 0;
   out_7377412451931836129[36] = 0;
   out_7377412451931836129[37] = 0;
   out_7377412451931836129[38] = 0;
   out_7377412451931836129[39] = 0;
   out_7377412451931836129[40] = 0;
   out_7377412451931836129[41] = 0;
   out_7377412451931836129[42] = 0;
   out_7377412451931836129[43] = 0;
   out_7377412451931836129[44] = 0;
   out_7377412451931836129[45] = 0;
   out_7377412451931836129[46] = 1;
   out_7377412451931836129[47] = 0;
   out_7377412451931836129[48] = 0;
   out_7377412451931836129[49] = 0;
   out_7377412451931836129[50] = 0;
   out_7377412451931836129[51] = 0;
   out_7377412451931836129[52] = 0;
   out_7377412451931836129[53] = 0;
   out_7377412451931836129[54] = 0;
   out_7377412451931836129[55] = 0;
   out_7377412451931836129[56] = 0;
   out_7377412451931836129[57] = 0;
   out_7377412451931836129[58] = 0;
   out_7377412451931836129[59] = 0;
   out_7377412451931836129[60] = 0;
   out_7377412451931836129[61] = 0;
   out_7377412451931836129[62] = 0;
   out_7377412451931836129[63] = 0;
   out_7377412451931836129[64] = 0;
   out_7377412451931836129[65] = 0;
}
void h_31(double *state, double *unused, double *out_7725675484320907111) {
   out_7725675484320907111[0] = state[7];
   out_7725675484320907111[1] = state[8];
   out_7725675484320907111[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4631849419606822420) {
   out_4631849419606822420[0] = 0;
   out_4631849419606822420[1] = 0;
   out_4631849419606822420[2] = 0;
   out_4631849419606822420[3] = 0;
   out_4631849419606822420[4] = 0;
   out_4631849419606822420[5] = 0;
   out_4631849419606822420[6] = 0;
   out_4631849419606822420[7] = 1;
   out_4631849419606822420[8] = 0;
   out_4631849419606822420[9] = 0;
   out_4631849419606822420[10] = 0;
   out_4631849419606822420[11] = 0;
   out_4631849419606822420[12] = 0;
   out_4631849419606822420[13] = 0;
   out_4631849419606822420[14] = 0;
   out_4631849419606822420[15] = 0;
   out_4631849419606822420[16] = 0;
   out_4631849419606822420[17] = 0;
   out_4631849419606822420[18] = 0;
   out_4631849419606822420[19] = 0;
   out_4631849419606822420[20] = 0;
   out_4631849419606822420[21] = 0;
   out_4631849419606822420[22] = 0;
   out_4631849419606822420[23] = 0;
   out_4631849419606822420[24] = 0;
   out_4631849419606822420[25] = 0;
   out_4631849419606822420[26] = 0;
   out_4631849419606822420[27] = 0;
   out_4631849419606822420[28] = 0;
   out_4631849419606822420[29] = 0;
   out_4631849419606822420[30] = 1;
   out_4631849419606822420[31] = 0;
   out_4631849419606822420[32] = 0;
   out_4631849419606822420[33] = 0;
   out_4631849419606822420[34] = 0;
   out_4631849419606822420[35] = 0;
   out_4631849419606822420[36] = 0;
   out_4631849419606822420[37] = 0;
   out_4631849419606822420[38] = 0;
   out_4631849419606822420[39] = 0;
   out_4631849419606822420[40] = 0;
   out_4631849419606822420[41] = 0;
   out_4631849419606822420[42] = 0;
   out_4631849419606822420[43] = 0;
   out_4631849419606822420[44] = 0;
   out_4631849419606822420[45] = 0;
   out_4631849419606822420[46] = 0;
   out_4631849419606822420[47] = 0;
   out_4631849419606822420[48] = 0;
   out_4631849419606822420[49] = 0;
   out_4631849419606822420[50] = 0;
   out_4631849419606822420[51] = 0;
   out_4631849419606822420[52] = 0;
   out_4631849419606822420[53] = 1;
   out_4631849419606822420[54] = 0;
   out_4631849419606822420[55] = 0;
   out_4631849419606822420[56] = 0;
   out_4631849419606822420[57] = 0;
   out_4631849419606822420[58] = 0;
   out_4631849419606822420[59] = 0;
   out_4631849419606822420[60] = 0;
   out_4631849419606822420[61] = 0;
   out_4631849419606822420[62] = 0;
   out_4631849419606822420[63] = 0;
   out_4631849419606822420[64] = 0;
   out_4631849419606822420[65] = 0;
}
void h_32(double *state, double *unused, double *out_5963873259645966842) {
   out_5963873259645966842[0] = state[3];
   out_5963873259645966842[1] = state[4];
   out_5963873259645966842[2] = state[5];
   out_5963873259645966842[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1169454952600790138) {
   out_1169454952600790138[0] = 0;
   out_1169454952600790138[1] = 0;
   out_1169454952600790138[2] = 0;
   out_1169454952600790138[3] = 1;
   out_1169454952600790138[4] = 0;
   out_1169454952600790138[5] = 0;
   out_1169454952600790138[6] = 0;
   out_1169454952600790138[7] = 0;
   out_1169454952600790138[8] = 0;
   out_1169454952600790138[9] = 0;
   out_1169454952600790138[10] = 0;
   out_1169454952600790138[11] = 0;
   out_1169454952600790138[12] = 0;
   out_1169454952600790138[13] = 0;
   out_1169454952600790138[14] = 0;
   out_1169454952600790138[15] = 0;
   out_1169454952600790138[16] = 0;
   out_1169454952600790138[17] = 0;
   out_1169454952600790138[18] = 0;
   out_1169454952600790138[19] = 0;
   out_1169454952600790138[20] = 0;
   out_1169454952600790138[21] = 0;
   out_1169454952600790138[22] = 0;
   out_1169454952600790138[23] = 0;
   out_1169454952600790138[24] = 0;
   out_1169454952600790138[25] = 0;
   out_1169454952600790138[26] = 1;
   out_1169454952600790138[27] = 0;
   out_1169454952600790138[28] = 0;
   out_1169454952600790138[29] = 0;
   out_1169454952600790138[30] = 0;
   out_1169454952600790138[31] = 0;
   out_1169454952600790138[32] = 0;
   out_1169454952600790138[33] = 0;
   out_1169454952600790138[34] = 0;
   out_1169454952600790138[35] = 0;
   out_1169454952600790138[36] = 0;
   out_1169454952600790138[37] = 0;
   out_1169454952600790138[38] = 0;
   out_1169454952600790138[39] = 0;
   out_1169454952600790138[40] = 0;
   out_1169454952600790138[41] = 0;
   out_1169454952600790138[42] = 0;
   out_1169454952600790138[43] = 0;
   out_1169454952600790138[44] = 0;
   out_1169454952600790138[45] = 0;
   out_1169454952600790138[46] = 0;
   out_1169454952600790138[47] = 0;
   out_1169454952600790138[48] = 0;
   out_1169454952600790138[49] = 1;
   out_1169454952600790138[50] = 0;
   out_1169454952600790138[51] = 0;
   out_1169454952600790138[52] = 0;
   out_1169454952600790138[53] = 0;
   out_1169454952600790138[54] = 0;
   out_1169454952600790138[55] = 0;
   out_1169454952600790138[56] = 0;
   out_1169454952600790138[57] = 0;
   out_1169454952600790138[58] = 0;
   out_1169454952600790138[59] = 0;
   out_1169454952600790138[60] = 0;
   out_1169454952600790138[61] = 0;
   out_1169454952600790138[62] = 0;
   out_1169454952600790138[63] = 0;
   out_1169454952600790138[64] = 0;
   out_1169454952600790138[65] = 0;
   out_1169454952600790138[66] = 0;
   out_1169454952600790138[67] = 0;
   out_1169454952600790138[68] = 0;
   out_1169454952600790138[69] = 0;
   out_1169454952600790138[70] = 0;
   out_1169454952600790138[71] = 0;
   out_1169454952600790138[72] = 1;
   out_1169454952600790138[73] = 0;
   out_1169454952600790138[74] = 0;
   out_1169454952600790138[75] = 0;
   out_1169454952600790138[76] = 0;
   out_1169454952600790138[77] = 0;
   out_1169454952600790138[78] = 0;
   out_1169454952600790138[79] = 0;
   out_1169454952600790138[80] = 0;
   out_1169454952600790138[81] = 0;
   out_1169454952600790138[82] = 0;
   out_1169454952600790138[83] = 0;
   out_1169454952600790138[84] = 0;
   out_1169454952600790138[85] = 0;
   out_1169454952600790138[86] = 0;
   out_1169454952600790138[87] = 0;
}
void h_13(double *state, double *unused, double *out_2168386746467312527) {
   out_2168386746467312527[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2168386746467312527[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2168386746467312527[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_200233473131994255) {
   out_200233473131994255[0] = 0;
   out_200233473131994255[1] = 0;
   out_200233473131994255[2] = 0;
   out_200233473131994255[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_200233473131994255[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_200233473131994255[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_200233473131994255[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_200233473131994255[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_200233473131994255[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_200233473131994255[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_200233473131994255[10] = 0;
   out_200233473131994255[11] = 0;
   out_200233473131994255[12] = 0;
   out_200233473131994255[13] = 0;
   out_200233473131994255[14] = 0;
   out_200233473131994255[15] = 0;
   out_200233473131994255[16] = 0;
   out_200233473131994255[17] = 0;
   out_200233473131994255[18] = 0;
   out_200233473131994255[19] = 0;
   out_200233473131994255[20] = 0;
   out_200233473131994255[21] = 0;
   out_200233473131994255[22] = 0;
   out_200233473131994255[23] = 0;
   out_200233473131994255[24] = 0;
   out_200233473131994255[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_200233473131994255[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_200233473131994255[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_200233473131994255[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_200233473131994255[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_200233473131994255[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_200233473131994255[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_200233473131994255[32] = 0;
   out_200233473131994255[33] = 0;
   out_200233473131994255[34] = 0;
   out_200233473131994255[35] = 0;
   out_200233473131994255[36] = 0;
   out_200233473131994255[37] = 0;
   out_200233473131994255[38] = 0;
   out_200233473131994255[39] = 0;
   out_200233473131994255[40] = 0;
   out_200233473131994255[41] = 0;
   out_200233473131994255[42] = 0;
   out_200233473131994255[43] = 0;
   out_200233473131994255[44] = 0;
   out_200233473131994255[45] = 0;
   out_200233473131994255[46] = 0;
   out_200233473131994255[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_200233473131994255[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_200233473131994255[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_200233473131994255[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_200233473131994255[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_200233473131994255[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_200233473131994255[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_200233473131994255[54] = 0;
   out_200233473131994255[55] = 0;
   out_200233473131994255[56] = 0;
   out_200233473131994255[57] = 0;
   out_200233473131994255[58] = 0;
   out_200233473131994255[59] = 0;
   out_200233473131994255[60] = 0;
   out_200233473131994255[61] = 0;
   out_200233473131994255[62] = 0;
   out_200233473131994255[63] = 0;
   out_200233473131994255[64] = 0;
   out_200233473131994255[65] = 0;
}
void h_14(double *state, double *unused, double *out_4025118706756764653) {
   out_4025118706756764653[0] = state[10];
   out_4025118706756764653[1] = state[11];
   out_4025118706756764653[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7757321830349839151) {
   out_7757321830349839151[0] = 0;
   out_7757321830349839151[1] = 0;
   out_7757321830349839151[2] = 0;
   out_7757321830349839151[3] = 0;
   out_7757321830349839151[4] = 0;
   out_7757321830349839151[5] = 0;
   out_7757321830349839151[6] = 0;
   out_7757321830349839151[7] = 0;
   out_7757321830349839151[8] = 0;
   out_7757321830349839151[9] = 0;
   out_7757321830349839151[10] = 1;
   out_7757321830349839151[11] = 0;
   out_7757321830349839151[12] = 0;
   out_7757321830349839151[13] = 0;
   out_7757321830349839151[14] = 0;
   out_7757321830349839151[15] = 0;
   out_7757321830349839151[16] = 0;
   out_7757321830349839151[17] = 0;
   out_7757321830349839151[18] = 0;
   out_7757321830349839151[19] = 0;
   out_7757321830349839151[20] = 0;
   out_7757321830349839151[21] = 0;
   out_7757321830349839151[22] = 0;
   out_7757321830349839151[23] = 0;
   out_7757321830349839151[24] = 0;
   out_7757321830349839151[25] = 0;
   out_7757321830349839151[26] = 0;
   out_7757321830349839151[27] = 0;
   out_7757321830349839151[28] = 0;
   out_7757321830349839151[29] = 0;
   out_7757321830349839151[30] = 0;
   out_7757321830349839151[31] = 0;
   out_7757321830349839151[32] = 0;
   out_7757321830349839151[33] = 1;
   out_7757321830349839151[34] = 0;
   out_7757321830349839151[35] = 0;
   out_7757321830349839151[36] = 0;
   out_7757321830349839151[37] = 0;
   out_7757321830349839151[38] = 0;
   out_7757321830349839151[39] = 0;
   out_7757321830349839151[40] = 0;
   out_7757321830349839151[41] = 0;
   out_7757321830349839151[42] = 0;
   out_7757321830349839151[43] = 0;
   out_7757321830349839151[44] = 0;
   out_7757321830349839151[45] = 0;
   out_7757321830349839151[46] = 0;
   out_7757321830349839151[47] = 0;
   out_7757321830349839151[48] = 0;
   out_7757321830349839151[49] = 0;
   out_7757321830349839151[50] = 0;
   out_7757321830349839151[51] = 0;
   out_7757321830349839151[52] = 0;
   out_7757321830349839151[53] = 0;
   out_7757321830349839151[54] = 0;
   out_7757321830349839151[55] = 0;
   out_7757321830349839151[56] = 1;
   out_7757321830349839151[57] = 0;
   out_7757321830349839151[58] = 0;
   out_7757321830349839151[59] = 0;
   out_7757321830349839151[60] = 0;
   out_7757321830349839151[61] = 0;
   out_7757321830349839151[62] = 0;
   out_7757321830349839151[63] = 0;
   out_7757321830349839151[64] = 0;
   out_7757321830349839151[65] = 0;
}
void h_33(double *state, double *unused, double *out_7631564866611376192) {
   out_7631564866611376192[0] = state[16];
   out_7631564866611376192[1] = state[17];
   out_7631564866611376192[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1481292414967964816) {
   out_1481292414967964816[0] = 0;
   out_1481292414967964816[1] = 0;
   out_1481292414967964816[2] = 0;
   out_1481292414967964816[3] = 0;
   out_1481292414967964816[4] = 0;
   out_1481292414967964816[5] = 0;
   out_1481292414967964816[6] = 0;
   out_1481292414967964816[7] = 0;
   out_1481292414967964816[8] = 0;
   out_1481292414967964816[9] = 0;
   out_1481292414967964816[10] = 0;
   out_1481292414967964816[11] = 0;
   out_1481292414967964816[12] = 0;
   out_1481292414967964816[13] = 0;
   out_1481292414967964816[14] = 0;
   out_1481292414967964816[15] = 0;
   out_1481292414967964816[16] = 1;
   out_1481292414967964816[17] = 0;
   out_1481292414967964816[18] = 0;
   out_1481292414967964816[19] = 0;
   out_1481292414967964816[20] = 0;
   out_1481292414967964816[21] = 0;
   out_1481292414967964816[22] = 0;
   out_1481292414967964816[23] = 0;
   out_1481292414967964816[24] = 0;
   out_1481292414967964816[25] = 0;
   out_1481292414967964816[26] = 0;
   out_1481292414967964816[27] = 0;
   out_1481292414967964816[28] = 0;
   out_1481292414967964816[29] = 0;
   out_1481292414967964816[30] = 0;
   out_1481292414967964816[31] = 0;
   out_1481292414967964816[32] = 0;
   out_1481292414967964816[33] = 0;
   out_1481292414967964816[34] = 0;
   out_1481292414967964816[35] = 0;
   out_1481292414967964816[36] = 0;
   out_1481292414967964816[37] = 0;
   out_1481292414967964816[38] = 0;
   out_1481292414967964816[39] = 1;
   out_1481292414967964816[40] = 0;
   out_1481292414967964816[41] = 0;
   out_1481292414967964816[42] = 0;
   out_1481292414967964816[43] = 0;
   out_1481292414967964816[44] = 0;
   out_1481292414967964816[45] = 0;
   out_1481292414967964816[46] = 0;
   out_1481292414967964816[47] = 0;
   out_1481292414967964816[48] = 0;
   out_1481292414967964816[49] = 0;
   out_1481292414967964816[50] = 0;
   out_1481292414967964816[51] = 0;
   out_1481292414967964816[52] = 0;
   out_1481292414967964816[53] = 0;
   out_1481292414967964816[54] = 0;
   out_1481292414967964816[55] = 0;
   out_1481292414967964816[56] = 0;
   out_1481292414967964816[57] = 0;
   out_1481292414967964816[58] = 0;
   out_1481292414967964816[59] = 0;
   out_1481292414967964816[60] = 0;
   out_1481292414967964816[61] = 0;
   out_1481292414967964816[62] = 1;
   out_1481292414967964816[63] = 0;
   out_1481292414967964816[64] = 0;
   out_1481292414967964816[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_654241702107958367) {
  H(in_vec, out_654241702107958367);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5125877990615348777) {
  err_fun(nom_x, delta_x, out_5125877990615348777);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6267094538257137714) {
  inv_err_fun(nom_x, true_x, out_6267094538257137714);
}
void live_H_mod_fun(double *state, double *out_9122635722341517273) {
  H_mod_fun(state, out_9122635722341517273);
}
void live_f_fun(double *state, double dt, double *out_8022326375520724887) {
  f_fun(state,  dt, out_8022326375520724887);
}
void live_F_fun(double *state, double dt, double *out_2606084813432559444) {
  F_fun(state,  dt, out_2606084813432559444);
}
void live_h_4(double *state, double *unused, double *out_3884732784060602165) {
  h_4(state, unused, out_3884732784060602165);
}
void live_H_4(double *state, double *unused, double *out_7998511476979429796) {
  H_4(state, unused, out_7998511476979429796);
}
void live_h_9(double *state, double *unused, double *out_4025118706756764653) {
  h_9(state, unused, out_4025118706756764653);
}
void live_H_9(double *state, double *unused, double *out_7757321830349839151) {
  H_9(state, unused, out_7757321830349839151);
}
void live_h_10(double *state, double *unused, double *out_7435728696533416274) {
  h_10(state, unused, out_7435728696533416274);
}
void live_H_10(double *state, double *unused, double *out_8190984688142623416) {
  H_10(state, unused, out_8190984688142623416);
}
void live_h_12(double *state, double *unused, double *out_328531660217095654) {
  h_12(state, unused, out_328531660217095654);
}
void live_H_12(double *state, double *unused, double *out_7377412451931836129) {
  H_12(state, unused, out_7377412451931836129);
}
void live_h_31(double *state, double *unused, double *out_7725675484320907111) {
  h_31(state, unused, out_7725675484320907111);
}
void live_H_31(double *state, double *unused, double *out_4631849419606822420) {
  H_31(state, unused, out_4631849419606822420);
}
void live_h_32(double *state, double *unused, double *out_5963873259645966842) {
  h_32(state, unused, out_5963873259645966842);
}
void live_H_32(double *state, double *unused, double *out_1169454952600790138) {
  H_32(state, unused, out_1169454952600790138);
}
void live_h_13(double *state, double *unused, double *out_2168386746467312527) {
  h_13(state, unused, out_2168386746467312527);
}
void live_H_13(double *state, double *unused, double *out_200233473131994255) {
  H_13(state, unused, out_200233473131994255);
}
void live_h_14(double *state, double *unused, double *out_4025118706756764653) {
  h_14(state, unused, out_4025118706756764653);
}
void live_H_14(double *state, double *unused, double *out_7757321830349839151) {
  H_14(state, unused, out_7757321830349839151);
}
void live_h_33(double *state, double *unused, double *out_7631564866611376192) {
  h_33(state, unused, out_7631564866611376192);
}
void live_H_33(double *state, double *unused, double *out_1481292414967964816) {
  H_33(state, unused, out_1481292414967964816);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
