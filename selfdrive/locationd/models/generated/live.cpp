#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_769978375014327116) {
   out_769978375014327116[0] = 0;
   out_769978375014327116[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_769978375014327116[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_769978375014327116[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_769978375014327116[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_769978375014327116[5] = -sin(in_vec[1]);
   out_769978375014327116[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_769978375014327116[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_769978375014327116[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_769978375014327116[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_769978375014327116[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_769978375014327116[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_769978375014327116[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_769978375014327116[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_769978375014327116[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_769978375014327116[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_769978375014327116[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_769978375014327116[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3930581419091845154) {
   out_3930581419091845154[0] = delta_x[0] + nom_x[0];
   out_3930581419091845154[1] = delta_x[1] + nom_x[1];
   out_3930581419091845154[2] = delta_x[2] + nom_x[2];
   out_3930581419091845154[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3930581419091845154[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3930581419091845154[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3930581419091845154[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3930581419091845154[7] = delta_x[6] + nom_x[7];
   out_3930581419091845154[8] = delta_x[7] + nom_x[8];
   out_3930581419091845154[9] = delta_x[8] + nom_x[9];
   out_3930581419091845154[10] = delta_x[9] + nom_x[10];
   out_3930581419091845154[11] = delta_x[10] + nom_x[11];
   out_3930581419091845154[12] = delta_x[11] + nom_x[12];
   out_3930581419091845154[13] = delta_x[12] + nom_x[13];
   out_3930581419091845154[14] = delta_x[13] + nom_x[14];
   out_3930581419091845154[15] = delta_x[14] + nom_x[15];
   out_3930581419091845154[16] = delta_x[15] + nom_x[16];
   out_3930581419091845154[17] = delta_x[16] + nom_x[17];
   out_3930581419091845154[18] = delta_x[17] + nom_x[18];
   out_3930581419091845154[19] = delta_x[18] + nom_x[19];
   out_3930581419091845154[20] = delta_x[19] + nom_x[20];
   out_3930581419091845154[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2964816902716136158) {
   out_2964816902716136158[0] = -nom_x[0] + true_x[0];
   out_2964816902716136158[1] = -nom_x[1] + true_x[1];
   out_2964816902716136158[2] = -nom_x[2] + true_x[2];
   out_2964816902716136158[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2964816902716136158[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2964816902716136158[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2964816902716136158[6] = -nom_x[7] + true_x[7];
   out_2964816902716136158[7] = -nom_x[8] + true_x[8];
   out_2964816902716136158[8] = -nom_x[9] + true_x[9];
   out_2964816902716136158[9] = -nom_x[10] + true_x[10];
   out_2964816902716136158[10] = -nom_x[11] + true_x[11];
   out_2964816902716136158[11] = -nom_x[12] + true_x[12];
   out_2964816902716136158[12] = -nom_x[13] + true_x[13];
   out_2964816902716136158[13] = -nom_x[14] + true_x[14];
   out_2964816902716136158[14] = -nom_x[15] + true_x[15];
   out_2964816902716136158[15] = -nom_x[16] + true_x[16];
   out_2964816902716136158[16] = -nom_x[17] + true_x[17];
   out_2964816902716136158[17] = -nom_x[18] + true_x[18];
   out_2964816902716136158[18] = -nom_x[19] + true_x[19];
   out_2964816902716136158[19] = -nom_x[20] + true_x[20];
   out_2964816902716136158[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2094271694511580680) {
   out_2094271694511580680[0] = 1.0;
   out_2094271694511580680[1] = 0.0;
   out_2094271694511580680[2] = 0.0;
   out_2094271694511580680[3] = 0.0;
   out_2094271694511580680[4] = 0.0;
   out_2094271694511580680[5] = 0.0;
   out_2094271694511580680[6] = 0.0;
   out_2094271694511580680[7] = 0.0;
   out_2094271694511580680[8] = 0.0;
   out_2094271694511580680[9] = 0.0;
   out_2094271694511580680[10] = 0.0;
   out_2094271694511580680[11] = 0.0;
   out_2094271694511580680[12] = 0.0;
   out_2094271694511580680[13] = 0.0;
   out_2094271694511580680[14] = 0.0;
   out_2094271694511580680[15] = 0.0;
   out_2094271694511580680[16] = 0.0;
   out_2094271694511580680[17] = 0.0;
   out_2094271694511580680[18] = 0.0;
   out_2094271694511580680[19] = 0.0;
   out_2094271694511580680[20] = 0.0;
   out_2094271694511580680[21] = 0.0;
   out_2094271694511580680[22] = 1.0;
   out_2094271694511580680[23] = 0.0;
   out_2094271694511580680[24] = 0.0;
   out_2094271694511580680[25] = 0.0;
   out_2094271694511580680[26] = 0.0;
   out_2094271694511580680[27] = 0.0;
   out_2094271694511580680[28] = 0.0;
   out_2094271694511580680[29] = 0.0;
   out_2094271694511580680[30] = 0.0;
   out_2094271694511580680[31] = 0.0;
   out_2094271694511580680[32] = 0.0;
   out_2094271694511580680[33] = 0.0;
   out_2094271694511580680[34] = 0.0;
   out_2094271694511580680[35] = 0.0;
   out_2094271694511580680[36] = 0.0;
   out_2094271694511580680[37] = 0.0;
   out_2094271694511580680[38] = 0.0;
   out_2094271694511580680[39] = 0.0;
   out_2094271694511580680[40] = 0.0;
   out_2094271694511580680[41] = 0.0;
   out_2094271694511580680[42] = 0.0;
   out_2094271694511580680[43] = 0.0;
   out_2094271694511580680[44] = 1.0;
   out_2094271694511580680[45] = 0.0;
   out_2094271694511580680[46] = 0.0;
   out_2094271694511580680[47] = 0.0;
   out_2094271694511580680[48] = 0.0;
   out_2094271694511580680[49] = 0.0;
   out_2094271694511580680[50] = 0.0;
   out_2094271694511580680[51] = 0.0;
   out_2094271694511580680[52] = 0.0;
   out_2094271694511580680[53] = 0.0;
   out_2094271694511580680[54] = 0.0;
   out_2094271694511580680[55] = 0.0;
   out_2094271694511580680[56] = 0.0;
   out_2094271694511580680[57] = 0.0;
   out_2094271694511580680[58] = 0.0;
   out_2094271694511580680[59] = 0.0;
   out_2094271694511580680[60] = 0.0;
   out_2094271694511580680[61] = 0.0;
   out_2094271694511580680[62] = 0.0;
   out_2094271694511580680[63] = 0.0;
   out_2094271694511580680[64] = 0.0;
   out_2094271694511580680[65] = 0.0;
   out_2094271694511580680[66] = -0.5*state[4];
   out_2094271694511580680[67] = -0.5*state[5];
   out_2094271694511580680[68] = -0.5*state[6];
   out_2094271694511580680[69] = 0.0;
   out_2094271694511580680[70] = 0.0;
   out_2094271694511580680[71] = 0.0;
   out_2094271694511580680[72] = 0.0;
   out_2094271694511580680[73] = 0.0;
   out_2094271694511580680[74] = 0.0;
   out_2094271694511580680[75] = 0.0;
   out_2094271694511580680[76] = 0.0;
   out_2094271694511580680[77] = 0.0;
   out_2094271694511580680[78] = 0.0;
   out_2094271694511580680[79] = 0.0;
   out_2094271694511580680[80] = 0.0;
   out_2094271694511580680[81] = 0.0;
   out_2094271694511580680[82] = 0.0;
   out_2094271694511580680[83] = 0.0;
   out_2094271694511580680[84] = 0.0;
   out_2094271694511580680[85] = 0.0;
   out_2094271694511580680[86] = 0.0;
   out_2094271694511580680[87] = 0.5*state[3];
   out_2094271694511580680[88] = 0.5*state[6];
   out_2094271694511580680[89] = -0.5*state[5];
   out_2094271694511580680[90] = 0.0;
   out_2094271694511580680[91] = 0.0;
   out_2094271694511580680[92] = 0.0;
   out_2094271694511580680[93] = 0.0;
   out_2094271694511580680[94] = 0.0;
   out_2094271694511580680[95] = 0.0;
   out_2094271694511580680[96] = 0.0;
   out_2094271694511580680[97] = 0.0;
   out_2094271694511580680[98] = 0.0;
   out_2094271694511580680[99] = 0.0;
   out_2094271694511580680[100] = 0.0;
   out_2094271694511580680[101] = 0.0;
   out_2094271694511580680[102] = 0.0;
   out_2094271694511580680[103] = 0.0;
   out_2094271694511580680[104] = 0.0;
   out_2094271694511580680[105] = 0.0;
   out_2094271694511580680[106] = 0.0;
   out_2094271694511580680[107] = 0.0;
   out_2094271694511580680[108] = -0.5*state[6];
   out_2094271694511580680[109] = 0.5*state[3];
   out_2094271694511580680[110] = 0.5*state[4];
   out_2094271694511580680[111] = 0.0;
   out_2094271694511580680[112] = 0.0;
   out_2094271694511580680[113] = 0.0;
   out_2094271694511580680[114] = 0.0;
   out_2094271694511580680[115] = 0.0;
   out_2094271694511580680[116] = 0.0;
   out_2094271694511580680[117] = 0.0;
   out_2094271694511580680[118] = 0.0;
   out_2094271694511580680[119] = 0.0;
   out_2094271694511580680[120] = 0.0;
   out_2094271694511580680[121] = 0.0;
   out_2094271694511580680[122] = 0.0;
   out_2094271694511580680[123] = 0.0;
   out_2094271694511580680[124] = 0.0;
   out_2094271694511580680[125] = 0.0;
   out_2094271694511580680[126] = 0.0;
   out_2094271694511580680[127] = 0.0;
   out_2094271694511580680[128] = 0.0;
   out_2094271694511580680[129] = 0.5*state[5];
   out_2094271694511580680[130] = -0.5*state[4];
   out_2094271694511580680[131] = 0.5*state[3];
   out_2094271694511580680[132] = 0.0;
   out_2094271694511580680[133] = 0.0;
   out_2094271694511580680[134] = 0.0;
   out_2094271694511580680[135] = 0.0;
   out_2094271694511580680[136] = 0.0;
   out_2094271694511580680[137] = 0.0;
   out_2094271694511580680[138] = 0.0;
   out_2094271694511580680[139] = 0.0;
   out_2094271694511580680[140] = 0.0;
   out_2094271694511580680[141] = 0.0;
   out_2094271694511580680[142] = 0.0;
   out_2094271694511580680[143] = 0.0;
   out_2094271694511580680[144] = 0.0;
   out_2094271694511580680[145] = 0.0;
   out_2094271694511580680[146] = 0.0;
   out_2094271694511580680[147] = 0.0;
   out_2094271694511580680[148] = 0.0;
   out_2094271694511580680[149] = 0.0;
   out_2094271694511580680[150] = 0.0;
   out_2094271694511580680[151] = 0.0;
   out_2094271694511580680[152] = 0.0;
   out_2094271694511580680[153] = 1.0;
   out_2094271694511580680[154] = 0.0;
   out_2094271694511580680[155] = 0.0;
   out_2094271694511580680[156] = 0.0;
   out_2094271694511580680[157] = 0.0;
   out_2094271694511580680[158] = 0.0;
   out_2094271694511580680[159] = 0.0;
   out_2094271694511580680[160] = 0.0;
   out_2094271694511580680[161] = 0.0;
   out_2094271694511580680[162] = 0.0;
   out_2094271694511580680[163] = 0.0;
   out_2094271694511580680[164] = 0.0;
   out_2094271694511580680[165] = 0.0;
   out_2094271694511580680[166] = 0.0;
   out_2094271694511580680[167] = 0.0;
   out_2094271694511580680[168] = 0.0;
   out_2094271694511580680[169] = 0.0;
   out_2094271694511580680[170] = 0.0;
   out_2094271694511580680[171] = 0.0;
   out_2094271694511580680[172] = 0.0;
   out_2094271694511580680[173] = 0.0;
   out_2094271694511580680[174] = 0.0;
   out_2094271694511580680[175] = 1.0;
   out_2094271694511580680[176] = 0.0;
   out_2094271694511580680[177] = 0.0;
   out_2094271694511580680[178] = 0.0;
   out_2094271694511580680[179] = 0.0;
   out_2094271694511580680[180] = 0.0;
   out_2094271694511580680[181] = 0.0;
   out_2094271694511580680[182] = 0.0;
   out_2094271694511580680[183] = 0.0;
   out_2094271694511580680[184] = 0.0;
   out_2094271694511580680[185] = 0.0;
   out_2094271694511580680[186] = 0.0;
   out_2094271694511580680[187] = 0.0;
   out_2094271694511580680[188] = 0.0;
   out_2094271694511580680[189] = 0.0;
   out_2094271694511580680[190] = 0.0;
   out_2094271694511580680[191] = 0.0;
   out_2094271694511580680[192] = 0.0;
   out_2094271694511580680[193] = 0.0;
   out_2094271694511580680[194] = 0.0;
   out_2094271694511580680[195] = 0.0;
   out_2094271694511580680[196] = 0.0;
   out_2094271694511580680[197] = 1.0;
   out_2094271694511580680[198] = 0.0;
   out_2094271694511580680[199] = 0.0;
   out_2094271694511580680[200] = 0.0;
   out_2094271694511580680[201] = 0.0;
   out_2094271694511580680[202] = 0.0;
   out_2094271694511580680[203] = 0.0;
   out_2094271694511580680[204] = 0.0;
   out_2094271694511580680[205] = 0.0;
   out_2094271694511580680[206] = 0.0;
   out_2094271694511580680[207] = 0.0;
   out_2094271694511580680[208] = 0.0;
   out_2094271694511580680[209] = 0.0;
   out_2094271694511580680[210] = 0.0;
   out_2094271694511580680[211] = 0.0;
   out_2094271694511580680[212] = 0.0;
   out_2094271694511580680[213] = 0.0;
   out_2094271694511580680[214] = 0.0;
   out_2094271694511580680[215] = 0.0;
   out_2094271694511580680[216] = 0.0;
   out_2094271694511580680[217] = 0.0;
   out_2094271694511580680[218] = 0.0;
   out_2094271694511580680[219] = 1.0;
   out_2094271694511580680[220] = 0.0;
   out_2094271694511580680[221] = 0.0;
   out_2094271694511580680[222] = 0.0;
   out_2094271694511580680[223] = 0.0;
   out_2094271694511580680[224] = 0.0;
   out_2094271694511580680[225] = 0.0;
   out_2094271694511580680[226] = 0.0;
   out_2094271694511580680[227] = 0.0;
   out_2094271694511580680[228] = 0.0;
   out_2094271694511580680[229] = 0.0;
   out_2094271694511580680[230] = 0.0;
   out_2094271694511580680[231] = 0.0;
   out_2094271694511580680[232] = 0.0;
   out_2094271694511580680[233] = 0.0;
   out_2094271694511580680[234] = 0.0;
   out_2094271694511580680[235] = 0.0;
   out_2094271694511580680[236] = 0.0;
   out_2094271694511580680[237] = 0.0;
   out_2094271694511580680[238] = 0.0;
   out_2094271694511580680[239] = 0.0;
   out_2094271694511580680[240] = 0.0;
   out_2094271694511580680[241] = 1.0;
   out_2094271694511580680[242] = 0.0;
   out_2094271694511580680[243] = 0.0;
   out_2094271694511580680[244] = 0.0;
   out_2094271694511580680[245] = 0.0;
   out_2094271694511580680[246] = 0.0;
   out_2094271694511580680[247] = 0.0;
   out_2094271694511580680[248] = 0.0;
   out_2094271694511580680[249] = 0.0;
   out_2094271694511580680[250] = 0.0;
   out_2094271694511580680[251] = 0.0;
   out_2094271694511580680[252] = 0.0;
   out_2094271694511580680[253] = 0.0;
   out_2094271694511580680[254] = 0.0;
   out_2094271694511580680[255] = 0.0;
   out_2094271694511580680[256] = 0.0;
   out_2094271694511580680[257] = 0.0;
   out_2094271694511580680[258] = 0.0;
   out_2094271694511580680[259] = 0.0;
   out_2094271694511580680[260] = 0.0;
   out_2094271694511580680[261] = 0.0;
   out_2094271694511580680[262] = 0.0;
   out_2094271694511580680[263] = 1.0;
   out_2094271694511580680[264] = 0.0;
   out_2094271694511580680[265] = 0.0;
   out_2094271694511580680[266] = 0.0;
   out_2094271694511580680[267] = 0.0;
   out_2094271694511580680[268] = 0.0;
   out_2094271694511580680[269] = 0.0;
   out_2094271694511580680[270] = 0.0;
   out_2094271694511580680[271] = 0.0;
   out_2094271694511580680[272] = 0.0;
   out_2094271694511580680[273] = 0.0;
   out_2094271694511580680[274] = 0.0;
   out_2094271694511580680[275] = 0.0;
   out_2094271694511580680[276] = 0.0;
   out_2094271694511580680[277] = 0.0;
   out_2094271694511580680[278] = 0.0;
   out_2094271694511580680[279] = 0.0;
   out_2094271694511580680[280] = 0.0;
   out_2094271694511580680[281] = 0.0;
   out_2094271694511580680[282] = 0.0;
   out_2094271694511580680[283] = 0.0;
   out_2094271694511580680[284] = 0.0;
   out_2094271694511580680[285] = 1.0;
   out_2094271694511580680[286] = 0.0;
   out_2094271694511580680[287] = 0.0;
   out_2094271694511580680[288] = 0.0;
   out_2094271694511580680[289] = 0.0;
   out_2094271694511580680[290] = 0.0;
   out_2094271694511580680[291] = 0.0;
   out_2094271694511580680[292] = 0.0;
   out_2094271694511580680[293] = 0.0;
   out_2094271694511580680[294] = 0.0;
   out_2094271694511580680[295] = 0.0;
   out_2094271694511580680[296] = 0.0;
   out_2094271694511580680[297] = 0.0;
   out_2094271694511580680[298] = 0.0;
   out_2094271694511580680[299] = 0.0;
   out_2094271694511580680[300] = 0.0;
   out_2094271694511580680[301] = 0.0;
   out_2094271694511580680[302] = 0.0;
   out_2094271694511580680[303] = 0.0;
   out_2094271694511580680[304] = 0.0;
   out_2094271694511580680[305] = 0.0;
   out_2094271694511580680[306] = 0.0;
   out_2094271694511580680[307] = 1.0;
   out_2094271694511580680[308] = 0.0;
   out_2094271694511580680[309] = 0.0;
   out_2094271694511580680[310] = 0.0;
   out_2094271694511580680[311] = 0.0;
   out_2094271694511580680[312] = 0.0;
   out_2094271694511580680[313] = 0.0;
   out_2094271694511580680[314] = 0.0;
   out_2094271694511580680[315] = 0.0;
   out_2094271694511580680[316] = 0.0;
   out_2094271694511580680[317] = 0.0;
   out_2094271694511580680[318] = 0.0;
   out_2094271694511580680[319] = 0.0;
   out_2094271694511580680[320] = 0.0;
   out_2094271694511580680[321] = 0.0;
   out_2094271694511580680[322] = 0.0;
   out_2094271694511580680[323] = 0.0;
   out_2094271694511580680[324] = 0.0;
   out_2094271694511580680[325] = 0.0;
   out_2094271694511580680[326] = 0.0;
   out_2094271694511580680[327] = 0.0;
   out_2094271694511580680[328] = 0.0;
   out_2094271694511580680[329] = 1.0;
   out_2094271694511580680[330] = 0.0;
   out_2094271694511580680[331] = 0.0;
   out_2094271694511580680[332] = 0.0;
   out_2094271694511580680[333] = 0.0;
   out_2094271694511580680[334] = 0.0;
   out_2094271694511580680[335] = 0.0;
   out_2094271694511580680[336] = 0.0;
   out_2094271694511580680[337] = 0.0;
   out_2094271694511580680[338] = 0.0;
   out_2094271694511580680[339] = 0.0;
   out_2094271694511580680[340] = 0.0;
   out_2094271694511580680[341] = 0.0;
   out_2094271694511580680[342] = 0.0;
   out_2094271694511580680[343] = 0.0;
   out_2094271694511580680[344] = 0.0;
   out_2094271694511580680[345] = 0.0;
   out_2094271694511580680[346] = 0.0;
   out_2094271694511580680[347] = 0.0;
   out_2094271694511580680[348] = 0.0;
   out_2094271694511580680[349] = 0.0;
   out_2094271694511580680[350] = 0.0;
   out_2094271694511580680[351] = 1.0;
   out_2094271694511580680[352] = 0.0;
   out_2094271694511580680[353] = 0.0;
   out_2094271694511580680[354] = 0.0;
   out_2094271694511580680[355] = 0.0;
   out_2094271694511580680[356] = 0.0;
   out_2094271694511580680[357] = 0.0;
   out_2094271694511580680[358] = 0.0;
   out_2094271694511580680[359] = 0.0;
   out_2094271694511580680[360] = 0.0;
   out_2094271694511580680[361] = 0.0;
   out_2094271694511580680[362] = 0.0;
   out_2094271694511580680[363] = 0.0;
   out_2094271694511580680[364] = 0.0;
   out_2094271694511580680[365] = 0.0;
   out_2094271694511580680[366] = 0.0;
   out_2094271694511580680[367] = 0.0;
   out_2094271694511580680[368] = 0.0;
   out_2094271694511580680[369] = 0.0;
   out_2094271694511580680[370] = 0.0;
   out_2094271694511580680[371] = 0.0;
   out_2094271694511580680[372] = 0.0;
   out_2094271694511580680[373] = 1.0;
   out_2094271694511580680[374] = 0.0;
   out_2094271694511580680[375] = 0.0;
   out_2094271694511580680[376] = 0.0;
   out_2094271694511580680[377] = 0.0;
   out_2094271694511580680[378] = 0.0;
   out_2094271694511580680[379] = 0.0;
   out_2094271694511580680[380] = 0.0;
   out_2094271694511580680[381] = 0.0;
   out_2094271694511580680[382] = 0.0;
   out_2094271694511580680[383] = 0.0;
   out_2094271694511580680[384] = 0.0;
   out_2094271694511580680[385] = 0.0;
   out_2094271694511580680[386] = 0.0;
   out_2094271694511580680[387] = 0.0;
   out_2094271694511580680[388] = 0.0;
   out_2094271694511580680[389] = 0.0;
   out_2094271694511580680[390] = 0.0;
   out_2094271694511580680[391] = 0.0;
   out_2094271694511580680[392] = 0.0;
   out_2094271694511580680[393] = 0.0;
   out_2094271694511580680[394] = 0.0;
   out_2094271694511580680[395] = 1.0;
   out_2094271694511580680[396] = 0.0;
   out_2094271694511580680[397] = 0.0;
   out_2094271694511580680[398] = 0.0;
   out_2094271694511580680[399] = 0.0;
   out_2094271694511580680[400] = 0.0;
   out_2094271694511580680[401] = 0.0;
   out_2094271694511580680[402] = 0.0;
   out_2094271694511580680[403] = 0.0;
   out_2094271694511580680[404] = 0.0;
   out_2094271694511580680[405] = 0.0;
   out_2094271694511580680[406] = 0.0;
   out_2094271694511580680[407] = 0.0;
   out_2094271694511580680[408] = 0.0;
   out_2094271694511580680[409] = 0.0;
   out_2094271694511580680[410] = 0.0;
   out_2094271694511580680[411] = 0.0;
   out_2094271694511580680[412] = 0.0;
   out_2094271694511580680[413] = 0.0;
   out_2094271694511580680[414] = 0.0;
   out_2094271694511580680[415] = 0.0;
   out_2094271694511580680[416] = 0.0;
   out_2094271694511580680[417] = 1.0;
   out_2094271694511580680[418] = 0.0;
   out_2094271694511580680[419] = 0.0;
   out_2094271694511580680[420] = 0.0;
   out_2094271694511580680[421] = 0.0;
   out_2094271694511580680[422] = 0.0;
   out_2094271694511580680[423] = 0.0;
   out_2094271694511580680[424] = 0.0;
   out_2094271694511580680[425] = 0.0;
   out_2094271694511580680[426] = 0.0;
   out_2094271694511580680[427] = 0.0;
   out_2094271694511580680[428] = 0.0;
   out_2094271694511580680[429] = 0.0;
   out_2094271694511580680[430] = 0.0;
   out_2094271694511580680[431] = 0.0;
   out_2094271694511580680[432] = 0.0;
   out_2094271694511580680[433] = 0.0;
   out_2094271694511580680[434] = 0.0;
   out_2094271694511580680[435] = 0.0;
   out_2094271694511580680[436] = 0.0;
   out_2094271694511580680[437] = 0.0;
   out_2094271694511580680[438] = 0.0;
   out_2094271694511580680[439] = 1.0;
   out_2094271694511580680[440] = 0.0;
   out_2094271694511580680[441] = 0.0;
   out_2094271694511580680[442] = 0.0;
   out_2094271694511580680[443] = 0.0;
   out_2094271694511580680[444] = 0.0;
   out_2094271694511580680[445] = 0.0;
   out_2094271694511580680[446] = 0.0;
   out_2094271694511580680[447] = 0.0;
   out_2094271694511580680[448] = 0.0;
   out_2094271694511580680[449] = 0.0;
   out_2094271694511580680[450] = 0.0;
   out_2094271694511580680[451] = 0.0;
   out_2094271694511580680[452] = 0.0;
   out_2094271694511580680[453] = 0.0;
   out_2094271694511580680[454] = 0.0;
   out_2094271694511580680[455] = 0.0;
   out_2094271694511580680[456] = 0.0;
   out_2094271694511580680[457] = 0.0;
   out_2094271694511580680[458] = 0.0;
   out_2094271694511580680[459] = 0.0;
   out_2094271694511580680[460] = 0.0;
   out_2094271694511580680[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7618125418436970734) {
   out_7618125418436970734[0] = dt*state[7] + state[0];
   out_7618125418436970734[1] = dt*state[8] + state[1];
   out_7618125418436970734[2] = dt*state[9] + state[2];
   out_7618125418436970734[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7618125418436970734[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7618125418436970734[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7618125418436970734[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7618125418436970734[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7618125418436970734[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7618125418436970734[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7618125418436970734[10] = state[10];
   out_7618125418436970734[11] = state[11];
   out_7618125418436970734[12] = state[12];
   out_7618125418436970734[13] = state[13];
   out_7618125418436970734[14] = state[14];
   out_7618125418436970734[15] = state[15];
   out_7618125418436970734[16] = state[16];
   out_7618125418436970734[17] = state[17];
   out_7618125418436970734[18] = state[18];
   out_7618125418436970734[19] = state[19];
   out_7618125418436970734[20] = state[20];
   out_7618125418436970734[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2420505287107436684) {
   out_2420505287107436684[0] = 1;
   out_2420505287107436684[1] = 0;
   out_2420505287107436684[2] = 0;
   out_2420505287107436684[3] = 0;
   out_2420505287107436684[4] = 0;
   out_2420505287107436684[5] = 0;
   out_2420505287107436684[6] = dt;
   out_2420505287107436684[7] = 0;
   out_2420505287107436684[8] = 0;
   out_2420505287107436684[9] = 0;
   out_2420505287107436684[10] = 0;
   out_2420505287107436684[11] = 0;
   out_2420505287107436684[12] = 0;
   out_2420505287107436684[13] = 0;
   out_2420505287107436684[14] = 0;
   out_2420505287107436684[15] = 0;
   out_2420505287107436684[16] = 0;
   out_2420505287107436684[17] = 0;
   out_2420505287107436684[18] = 0;
   out_2420505287107436684[19] = 0;
   out_2420505287107436684[20] = 0;
   out_2420505287107436684[21] = 0;
   out_2420505287107436684[22] = 1;
   out_2420505287107436684[23] = 0;
   out_2420505287107436684[24] = 0;
   out_2420505287107436684[25] = 0;
   out_2420505287107436684[26] = 0;
   out_2420505287107436684[27] = 0;
   out_2420505287107436684[28] = dt;
   out_2420505287107436684[29] = 0;
   out_2420505287107436684[30] = 0;
   out_2420505287107436684[31] = 0;
   out_2420505287107436684[32] = 0;
   out_2420505287107436684[33] = 0;
   out_2420505287107436684[34] = 0;
   out_2420505287107436684[35] = 0;
   out_2420505287107436684[36] = 0;
   out_2420505287107436684[37] = 0;
   out_2420505287107436684[38] = 0;
   out_2420505287107436684[39] = 0;
   out_2420505287107436684[40] = 0;
   out_2420505287107436684[41] = 0;
   out_2420505287107436684[42] = 0;
   out_2420505287107436684[43] = 0;
   out_2420505287107436684[44] = 1;
   out_2420505287107436684[45] = 0;
   out_2420505287107436684[46] = 0;
   out_2420505287107436684[47] = 0;
   out_2420505287107436684[48] = 0;
   out_2420505287107436684[49] = 0;
   out_2420505287107436684[50] = dt;
   out_2420505287107436684[51] = 0;
   out_2420505287107436684[52] = 0;
   out_2420505287107436684[53] = 0;
   out_2420505287107436684[54] = 0;
   out_2420505287107436684[55] = 0;
   out_2420505287107436684[56] = 0;
   out_2420505287107436684[57] = 0;
   out_2420505287107436684[58] = 0;
   out_2420505287107436684[59] = 0;
   out_2420505287107436684[60] = 0;
   out_2420505287107436684[61] = 0;
   out_2420505287107436684[62] = 0;
   out_2420505287107436684[63] = 0;
   out_2420505287107436684[64] = 0;
   out_2420505287107436684[65] = 0;
   out_2420505287107436684[66] = 1;
   out_2420505287107436684[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2420505287107436684[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2420505287107436684[69] = 0;
   out_2420505287107436684[70] = 0;
   out_2420505287107436684[71] = 0;
   out_2420505287107436684[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2420505287107436684[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2420505287107436684[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2420505287107436684[75] = 0;
   out_2420505287107436684[76] = 0;
   out_2420505287107436684[77] = 0;
   out_2420505287107436684[78] = 0;
   out_2420505287107436684[79] = 0;
   out_2420505287107436684[80] = 0;
   out_2420505287107436684[81] = 0;
   out_2420505287107436684[82] = 0;
   out_2420505287107436684[83] = 0;
   out_2420505287107436684[84] = 0;
   out_2420505287107436684[85] = 0;
   out_2420505287107436684[86] = 0;
   out_2420505287107436684[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2420505287107436684[88] = 1;
   out_2420505287107436684[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2420505287107436684[90] = 0;
   out_2420505287107436684[91] = 0;
   out_2420505287107436684[92] = 0;
   out_2420505287107436684[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2420505287107436684[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2420505287107436684[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2420505287107436684[96] = 0;
   out_2420505287107436684[97] = 0;
   out_2420505287107436684[98] = 0;
   out_2420505287107436684[99] = 0;
   out_2420505287107436684[100] = 0;
   out_2420505287107436684[101] = 0;
   out_2420505287107436684[102] = 0;
   out_2420505287107436684[103] = 0;
   out_2420505287107436684[104] = 0;
   out_2420505287107436684[105] = 0;
   out_2420505287107436684[106] = 0;
   out_2420505287107436684[107] = 0;
   out_2420505287107436684[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2420505287107436684[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2420505287107436684[110] = 1;
   out_2420505287107436684[111] = 0;
   out_2420505287107436684[112] = 0;
   out_2420505287107436684[113] = 0;
   out_2420505287107436684[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2420505287107436684[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2420505287107436684[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2420505287107436684[117] = 0;
   out_2420505287107436684[118] = 0;
   out_2420505287107436684[119] = 0;
   out_2420505287107436684[120] = 0;
   out_2420505287107436684[121] = 0;
   out_2420505287107436684[122] = 0;
   out_2420505287107436684[123] = 0;
   out_2420505287107436684[124] = 0;
   out_2420505287107436684[125] = 0;
   out_2420505287107436684[126] = 0;
   out_2420505287107436684[127] = 0;
   out_2420505287107436684[128] = 0;
   out_2420505287107436684[129] = 0;
   out_2420505287107436684[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2420505287107436684[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2420505287107436684[132] = 1;
   out_2420505287107436684[133] = 0;
   out_2420505287107436684[134] = 0;
   out_2420505287107436684[135] = 0;
   out_2420505287107436684[136] = 0;
   out_2420505287107436684[137] = 0;
   out_2420505287107436684[138] = 0;
   out_2420505287107436684[139] = 0;
   out_2420505287107436684[140] = 0;
   out_2420505287107436684[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2420505287107436684[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2420505287107436684[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2420505287107436684[144] = 0;
   out_2420505287107436684[145] = 0;
   out_2420505287107436684[146] = 0;
   out_2420505287107436684[147] = 0;
   out_2420505287107436684[148] = 0;
   out_2420505287107436684[149] = 0;
   out_2420505287107436684[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2420505287107436684[151] = 0;
   out_2420505287107436684[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2420505287107436684[153] = 0;
   out_2420505287107436684[154] = 1;
   out_2420505287107436684[155] = 0;
   out_2420505287107436684[156] = 0;
   out_2420505287107436684[157] = 0;
   out_2420505287107436684[158] = 0;
   out_2420505287107436684[159] = 0;
   out_2420505287107436684[160] = 0;
   out_2420505287107436684[161] = 0;
   out_2420505287107436684[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2420505287107436684[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2420505287107436684[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2420505287107436684[165] = 0;
   out_2420505287107436684[166] = 0;
   out_2420505287107436684[167] = 0;
   out_2420505287107436684[168] = 0;
   out_2420505287107436684[169] = 0;
   out_2420505287107436684[170] = 0;
   out_2420505287107436684[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2420505287107436684[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2420505287107436684[173] = 0;
   out_2420505287107436684[174] = 0;
   out_2420505287107436684[175] = 0;
   out_2420505287107436684[176] = 1;
   out_2420505287107436684[177] = 0;
   out_2420505287107436684[178] = 0;
   out_2420505287107436684[179] = 0;
   out_2420505287107436684[180] = 0;
   out_2420505287107436684[181] = 0;
   out_2420505287107436684[182] = 0;
   out_2420505287107436684[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2420505287107436684[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2420505287107436684[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2420505287107436684[186] = 0;
   out_2420505287107436684[187] = 0;
   out_2420505287107436684[188] = 0;
   out_2420505287107436684[189] = 0;
   out_2420505287107436684[190] = 0;
   out_2420505287107436684[191] = 0;
   out_2420505287107436684[192] = 0;
   out_2420505287107436684[193] = 0;
   out_2420505287107436684[194] = 0;
   out_2420505287107436684[195] = 0;
   out_2420505287107436684[196] = 0;
   out_2420505287107436684[197] = 0;
   out_2420505287107436684[198] = 1;
   out_2420505287107436684[199] = 0;
   out_2420505287107436684[200] = 0;
   out_2420505287107436684[201] = 0;
   out_2420505287107436684[202] = 0;
   out_2420505287107436684[203] = 0;
   out_2420505287107436684[204] = 0;
   out_2420505287107436684[205] = 0;
   out_2420505287107436684[206] = 0;
   out_2420505287107436684[207] = 0;
   out_2420505287107436684[208] = 0;
   out_2420505287107436684[209] = 0;
   out_2420505287107436684[210] = 0;
   out_2420505287107436684[211] = 0;
   out_2420505287107436684[212] = 0;
   out_2420505287107436684[213] = 0;
   out_2420505287107436684[214] = 0;
   out_2420505287107436684[215] = 0;
   out_2420505287107436684[216] = 0;
   out_2420505287107436684[217] = 0;
   out_2420505287107436684[218] = 0;
   out_2420505287107436684[219] = 0;
   out_2420505287107436684[220] = 1;
   out_2420505287107436684[221] = 0;
   out_2420505287107436684[222] = 0;
   out_2420505287107436684[223] = 0;
   out_2420505287107436684[224] = 0;
   out_2420505287107436684[225] = 0;
   out_2420505287107436684[226] = 0;
   out_2420505287107436684[227] = 0;
   out_2420505287107436684[228] = 0;
   out_2420505287107436684[229] = 0;
   out_2420505287107436684[230] = 0;
   out_2420505287107436684[231] = 0;
   out_2420505287107436684[232] = 0;
   out_2420505287107436684[233] = 0;
   out_2420505287107436684[234] = 0;
   out_2420505287107436684[235] = 0;
   out_2420505287107436684[236] = 0;
   out_2420505287107436684[237] = 0;
   out_2420505287107436684[238] = 0;
   out_2420505287107436684[239] = 0;
   out_2420505287107436684[240] = 0;
   out_2420505287107436684[241] = 0;
   out_2420505287107436684[242] = 1;
   out_2420505287107436684[243] = 0;
   out_2420505287107436684[244] = 0;
   out_2420505287107436684[245] = 0;
   out_2420505287107436684[246] = 0;
   out_2420505287107436684[247] = 0;
   out_2420505287107436684[248] = 0;
   out_2420505287107436684[249] = 0;
   out_2420505287107436684[250] = 0;
   out_2420505287107436684[251] = 0;
   out_2420505287107436684[252] = 0;
   out_2420505287107436684[253] = 0;
   out_2420505287107436684[254] = 0;
   out_2420505287107436684[255] = 0;
   out_2420505287107436684[256] = 0;
   out_2420505287107436684[257] = 0;
   out_2420505287107436684[258] = 0;
   out_2420505287107436684[259] = 0;
   out_2420505287107436684[260] = 0;
   out_2420505287107436684[261] = 0;
   out_2420505287107436684[262] = 0;
   out_2420505287107436684[263] = 0;
   out_2420505287107436684[264] = 1;
   out_2420505287107436684[265] = 0;
   out_2420505287107436684[266] = 0;
   out_2420505287107436684[267] = 0;
   out_2420505287107436684[268] = 0;
   out_2420505287107436684[269] = 0;
   out_2420505287107436684[270] = 0;
   out_2420505287107436684[271] = 0;
   out_2420505287107436684[272] = 0;
   out_2420505287107436684[273] = 0;
   out_2420505287107436684[274] = 0;
   out_2420505287107436684[275] = 0;
   out_2420505287107436684[276] = 0;
   out_2420505287107436684[277] = 0;
   out_2420505287107436684[278] = 0;
   out_2420505287107436684[279] = 0;
   out_2420505287107436684[280] = 0;
   out_2420505287107436684[281] = 0;
   out_2420505287107436684[282] = 0;
   out_2420505287107436684[283] = 0;
   out_2420505287107436684[284] = 0;
   out_2420505287107436684[285] = 0;
   out_2420505287107436684[286] = 1;
   out_2420505287107436684[287] = 0;
   out_2420505287107436684[288] = 0;
   out_2420505287107436684[289] = 0;
   out_2420505287107436684[290] = 0;
   out_2420505287107436684[291] = 0;
   out_2420505287107436684[292] = 0;
   out_2420505287107436684[293] = 0;
   out_2420505287107436684[294] = 0;
   out_2420505287107436684[295] = 0;
   out_2420505287107436684[296] = 0;
   out_2420505287107436684[297] = 0;
   out_2420505287107436684[298] = 0;
   out_2420505287107436684[299] = 0;
   out_2420505287107436684[300] = 0;
   out_2420505287107436684[301] = 0;
   out_2420505287107436684[302] = 0;
   out_2420505287107436684[303] = 0;
   out_2420505287107436684[304] = 0;
   out_2420505287107436684[305] = 0;
   out_2420505287107436684[306] = 0;
   out_2420505287107436684[307] = 0;
   out_2420505287107436684[308] = 1;
   out_2420505287107436684[309] = 0;
   out_2420505287107436684[310] = 0;
   out_2420505287107436684[311] = 0;
   out_2420505287107436684[312] = 0;
   out_2420505287107436684[313] = 0;
   out_2420505287107436684[314] = 0;
   out_2420505287107436684[315] = 0;
   out_2420505287107436684[316] = 0;
   out_2420505287107436684[317] = 0;
   out_2420505287107436684[318] = 0;
   out_2420505287107436684[319] = 0;
   out_2420505287107436684[320] = 0;
   out_2420505287107436684[321] = 0;
   out_2420505287107436684[322] = 0;
   out_2420505287107436684[323] = 0;
   out_2420505287107436684[324] = 0;
   out_2420505287107436684[325] = 0;
   out_2420505287107436684[326] = 0;
   out_2420505287107436684[327] = 0;
   out_2420505287107436684[328] = 0;
   out_2420505287107436684[329] = 0;
   out_2420505287107436684[330] = 1;
   out_2420505287107436684[331] = 0;
   out_2420505287107436684[332] = 0;
   out_2420505287107436684[333] = 0;
   out_2420505287107436684[334] = 0;
   out_2420505287107436684[335] = 0;
   out_2420505287107436684[336] = 0;
   out_2420505287107436684[337] = 0;
   out_2420505287107436684[338] = 0;
   out_2420505287107436684[339] = 0;
   out_2420505287107436684[340] = 0;
   out_2420505287107436684[341] = 0;
   out_2420505287107436684[342] = 0;
   out_2420505287107436684[343] = 0;
   out_2420505287107436684[344] = 0;
   out_2420505287107436684[345] = 0;
   out_2420505287107436684[346] = 0;
   out_2420505287107436684[347] = 0;
   out_2420505287107436684[348] = 0;
   out_2420505287107436684[349] = 0;
   out_2420505287107436684[350] = 0;
   out_2420505287107436684[351] = 0;
   out_2420505287107436684[352] = 1;
   out_2420505287107436684[353] = 0;
   out_2420505287107436684[354] = 0;
   out_2420505287107436684[355] = 0;
   out_2420505287107436684[356] = 0;
   out_2420505287107436684[357] = 0;
   out_2420505287107436684[358] = 0;
   out_2420505287107436684[359] = 0;
   out_2420505287107436684[360] = 0;
   out_2420505287107436684[361] = 0;
   out_2420505287107436684[362] = 0;
   out_2420505287107436684[363] = 0;
   out_2420505287107436684[364] = 0;
   out_2420505287107436684[365] = 0;
   out_2420505287107436684[366] = 0;
   out_2420505287107436684[367] = 0;
   out_2420505287107436684[368] = 0;
   out_2420505287107436684[369] = 0;
   out_2420505287107436684[370] = 0;
   out_2420505287107436684[371] = 0;
   out_2420505287107436684[372] = 0;
   out_2420505287107436684[373] = 0;
   out_2420505287107436684[374] = 1;
   out_2420505287107436684[375] = 0;
   out_2420505287107436684[376] = 0;
   out_2420505287107436684[377] = 0;
   out_2420505287107436684[378] = 0;
   out_2420505287107436684[379] = 0;
   out_2420505287107436684[380] = 0;
   out_2420505287107436684[381] = 0;
   out_2420505287107436684[382] = 0;
   out_2420505287107436684[383] = 0;
   out_2420505287107436684[384] = 0;
   out_2420505287107436684[385] = 0;
   out_2420505287107436684[386] = 0;
   out_2420505287107436684[387] = 0;
   out_2420505287107436684[388] = 0;
   out_2420505287107436684[389] = 0;
   out_2420505287107436684[390] = 0;
   out_2420505287107436684[391] = 0;
   out_2420505287107436684[392] = 0;
   out_2420505287107436684[393] = 0;
   out_2420505287107436684[394] = 0;
   out_2420505287107436684[395] = 0;
   out_2420505287107436684[396] = 1;
   out_2420505287107436684[397] = 0;
   out_2420505287107436684[398] = 0;
   out_2420505287107436684[399] = 0;
   out_2420505287107436684[400] = 0;
   out_2420505287107436684[401] = 0;
   out_2420505287107436684[402] = 0;
   out_2420505287107436684[403] = 0;
   out_2420505287107436684[404] = 0;
   out_2420505287107436684[405] = 0;
   out_2420505287107436684[406] = 0;
   out_2420505287107436684[407] = 0;
   out_2420505287107436684[408] = 0;
   out_2420505287107436684[409] = 0;
   out_2420505287107436684[410] = 0;
   out_2420505287107436684[411] = 0;
   out_2420505287107436684[412] = 0;
   out_2420505287107436684[413] = 0;
   out_2420505287107436684[414] = 0;
   out_2420505287107436684[415] = 0;
   out_2420505287107436684[416] = 0;
   out_2420505287107436684[417] = 0;
   out_2420505287107436684[418] = 1;
   out_2420505287107436684[419] = 0;
   out_2420505287107436684[420] = 0;
   out_2420505287107436684[421] = 0;
   out_2420505287107436684[422] = 0;
   out_2420505287107436684[423] = 0;
   out_2420505287107436684[424] = 0;
   out_2420505287107436684[425] = 0;
   out_2420505287107436684[426] = 0;
   out_2420505287107436684[427] = 0;
   out_2420505287107436684[428] = 0;
   out_2420505287107436684[429] = 0;
   out_2420505287107436684[430] = 0;
   out_2420505287107436684[431] = 0;
   out_2420505287107436684[432] = 0;
   out_2420505287107436684[433] = 0;
   out_2420505287107436684[434] = 0;
   out_2420505287107436684[435] = 0;
   out_2420505287107436684[436] = 0;
   out_2420505287107436684[437] = 0;
   out_2420505287107436684[438] = 0;
   out_2420505287107436684[439] = 0;
   out_2420505287107436684[440] = 1;
}
void h_4(double *state, double *unused, double *out_6516895377116661716) {
   out_6516895377116661716[0] = state[10] + state[13];
   out_6516895377116661716[1] = state[11] + state[14];
   out_6516895377116661716[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1148440156446637937) {
   out_1148440156446637937[0] = 0;
   out_1148440156446637937[1] = 0;
   out_1148440156446637937[2] = 0;
   out_1148440156446637937[3] = 0;
   out_1148440156446637937[4] = 0;
   out_1148440156446637937[5] = 0;
   out_1148440156446637937[6] = 0;
   out_1148440156446637937[7] = 0;
   out_1148440156446637937[8] = 0;
   out_1148440156446637937[9] = 0;
   out_1148440156446637937[10] = 1;
   out_1148440156446637937[11] = 0;
   out_1148440156446637937[12] = 0;
   out_1148440156446637937[13] = 1;
   out_1148440156446637937[14] = 0;
   out_1148440156446637937[15] = 0;
   out_1148440156446637937[16] = 0;
   out_1148440156446637937[17] = 0;
   out_1148440156446637937[18] = 0;
   out_1148440156446637937[19] = 0;
   out_1148440156446637937[20] = 0;
   out_1148440156446637937[21] = 0;
   out_1148440156446637937[22] = 0;
   out_1148440156446637937[23] = 0;
   out_1148440156446637937[24] = 0;
   out_1148440156446637937[25] = 0;
   out_1148440156446637937[26] = 0;
   out_1148440156446637937[27] = 0;
   out_1148440156446637937[28] = 0;
   out_1148440156446637937[29] = 0;
   out_1148440156446637937[30] = 0;
   out_1148440156446637937[31] = 0;
   out_1148440156446637937[32] = 0;
   out_1148440156446637937[33] = 1;
   out_1148440156446637937[34] = 0;
   out_1148440156446637937[35] = 0;
   out_1148440156446637937[36] = 1;
   out_1148440156446637937[37] = 0;
   out_1148440156446637937[38] = 0;
   out_1148440156446637937[39] = 0;
   out_1148440156446637937[40] = 0;
   out_1148440156446637937[41] = 0;
   out_1148440156446637937[42] = 0;
   out_1148440156446637937[43] = 0;
   out_1148440156446637937[44] = 0;
   out_1148440156446637937[45] = 0;
   out_1148440156446637937[46] = 0;
   out_1148440156446637937[47] = 0;
   out_1148440156446637937[48] = 0;
   out_1148440156446637937[49] = 0;
   out_1148440156446637937[50] = 0;
   out_1148440156446637937[51] = 0;
   out_1148440156446637937[52] = 0;
   out_1148440156446637937[53] = 0;
   out_1148440156446637937[54] = 0;
   out_1148440156446637937[55] = 0;
   out_1148440156446637937[56] = 1;
   out_1148440156446637937[57] = 0;
   out_1148440156446637937[58] = 0;
   out_1148440156446637937[59] = 1;
   out_1148440156446637937[60] = 0;
   out_1148440156446637937[61] = 0;
   out_1148440156446637937[62] = 0;
   out_1148440156446637937[63] = 0;
   out_1148440156446637937[64] = 0;
   out_1148440156446637937[65] = 0;
}
void h_9(double *state, double *unused, double *out_7623235786031897685) {
   out_7623235786031897685[0] = state[10];
   out_7623235786031897685[1] = state[11];
   out_7623235786031897685[2] = state[12];
}
void H_9(double *state, double *unused, double *out_907250509817047292) {
   out_907250509817047292[0] = 0;
   out_907250509817047292[1] = 0;
   out_907250509817047292[2] = 0;
   out_907250509817047292[3] = 0;
   out_907250509817047292[4] = 0;
   out_907250509817047292[5] = 0;
   out_907250509817047292[6] = 0;
   out_907250509817047292[7] = 0;
   out_907250509817047292[8] = 0;
   out_907250509817047292[9] = 0;
   out_907250509817047292[10] = 1;
   out_907250509817047292[11] = 0;
   out_907250509817047292[12] = 0;
   out_907250509817047292[13] = 0;
   out_907250509817047292[14] = 0;
   out_907250509817047292[15] = 0;
   out_907250509817047292[16] = 0;
   out_907250509817047292[17] = 0;
   out_907250509817047292[18] = 0;
   out_907250509817047292[19] = 0;
   out_907250509817047292[20] = 0;
   out_907250509817047292[21] = 0;
   out_907250509817047292[22] = 0;
   out_907250509817047292[23] = 0;
   out_907250509817047292[24] = 0;
   out_907250509817047292[25] = 0;
   out_907250509817047292[26] = 0;
   out_907250509817047292[27] = 0;
   out_907250509817047292[28] = 0;
   out_907250509817047292[29] = 0;
   out_907250509817047292[30] = 0;
   out_907250509817047292[31] = 0;
   out_907250509817047292[32] = 0;
   out_907250509817047292[33] = 1;
   out_907250509817047292[34] = 0;
   out_907250509817047292[35] = 0;
   out_907250509817047292[36] = 0;
   out_907250509817047292[37] = 0;
   out_907250509817047292[38] = 0;
   out_907250509817047292[39] = 0;
   out_907250509817047292[40] = 0;
   out_907250509817047292[41] = 0;
   out_907250509817047292[42] = 0;
   out_907250509817047292[43] = 0;
   out_907250509817047292[44] = 0;
   out_907250509817047292[45] = 0;
   out_907250509817047292[46] = 0;
   out_907250509817047292[47] = 0;
   out_907250509817047292[48] = 0;
   out_907250509817047292[49] = 0;
   out_907250509817047292[50] = 0;
   out_907250509817047292[51] = 0;
   out_907250509817047292[52] = 0;
   out_907250509817047292[53] = 0;
   out_907250509817047292[54] = 0;
   out_907250509817047292[55] = 0;
   out_907250509817047292[56] = 1;
   out_907250509817047292[57] = 0;
   out_907250509817047292[58] = 0;
   out_907250509817047292[59] = 0;
   out_907250509817047292[60] = 0;
   out_907250509817047292[61] = 0;
   out_907250509817047292[62] = 0;
   out_907250509817047292[63] = 0;
   out_907250509817047292[64] = 0;
   out_907250509817047292[65] = 0;
}
void h_10(double *state, double *unused, double *out_8031178198245777888) {
   out_8031178198245777888[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8031178198245777888[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8031178198245777888[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8420786504377253541) {
   out_8420786504377253541[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8420786504377253541[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8420786504377253541[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8420786504377253541[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8420786504377253541[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8420786504377253541[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8420786504377253541[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8420786504377253541[7] = 0;
   out_8420786504377253541[8] = 0;
   out_8420786504377253541[9] = 0;
   out_8420786504377253541[10] = 0;
   out_8420786504377253541[11] = 0;
   out_8420786504377253541[12] = 0;
   out_8420786504377253541[13] = 0;
   out_8420786504377253541[14] = 0;
   out_8420786504377253541[15] = 0;
   out_8420786504377253541[16] = 1;
   out_8420786504377253541[17] = 0;
   out_8420786504377253541[18] = 0;
   out_8420786504377253541[19] = 1;
   out_8420786504377253541[20] = 0;
   out_8420786504377253541[21] = 0;
   out_8420786504377253541[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8420786504377253541[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8420786504377253541[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8420786504377253541[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8420786504377253541[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8420786504377253541[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8420786504377253541[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8420786504377253541[29] = 0;
   out_8420786504377253541[30] = 0;
   out_8420786504377253541[31] = 0;
   out_8420786504377253541[32] = 0;
   out_8420786504377253541[33] = 0;
   out_8420786504377253541[34] = 0;
   out_8420786504377253541[35] = 0;
   out_8420786504377253541[36] = 0;
   out_8420786504377253541[37] = 0;
   out_8420786504377253541[38] = 0;
   out_8420786504377253541[39] = 1;
   out_8420786504377253541[40] = 0;
   out_8420786504377253541[41] = 0;
   out_8420786504377253541[42] = 1;
   out_8420786504377253541[43] = 0;
   out_8420786504377253541[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8420786504377253541[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8420786504377253541[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8420786504377253541[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8420786504377253541[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8420786504377253541[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8420786504377253541[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8420786504377253541[51] = 0;
   out_8420786504377253541[52] = 0;
   out_8420786504377253541[53] = 0;
   out_8420786504377253541[54] = 0;
   out_8420786504377253541[55] = 0;
   out_8420786504377253541[56] = 0;
   out_8420786504377253541[57] = 0;
   out_8420786504377253541[58] = 0;
   out_8420786504377253541[59] = 0;
   out_8420786504377253541[60] = 0;
   out_8420786504377253541[61] = 0;
   out_8420786504377253541[62] = 1;
   out_8420786504377253541[63] = 0;
   out_8420786504377253541[64] = 0;
   out_8420786504377253541[65] = 1;
}
void h_12(double *state, double *unused, double *out_2524803393288813612) {
   out_2524803393288813612[0] = state[0];
   out_2524803393288813612[1] = state[1];
   out_2524803393288813612[2] = state[2];
}
void H_12(double *state, double *unused, double *out_527341131399044270) {
   out_527341131399044270[0] = 1;
   out_527341131399044270[1] = 0;
   out_527341131399044270[2] = 0;
   out_527341131399044270[3] = 0;
   out_527341131399044270[4] = 0;
   out_527341131399044270[5] = 0;
   out_527341131399044270[6] = 0;
   out_527341131399044270[7] = 0;
   out_527341131399044270[8] = 0;
   out_527341131399044270[9] = 0;
   out_527341131399044270[10] = 0;
   out_527341131399044270[11] = 0;
   out_527341131399044270[12] = 0;
   out_527341131399044270[13] = 0;
   out_527341131399044270[14] = 0;
   out_527341131399044270[15] = 0;
   out_527341131399044270[16] = 0;
   out_527341131399044270[17] = 0;
   out_527341131399044270[18] = 0;
   out_527341131399044270[19] = 0;
   out_527341131399044270[20] = 0;
   out_527341131399044270[21] = 0;
   out_527341131399044270[22] = 0;
   out_527341131399044270[23] = 1;
   out_527341131399044270[24] = 0;
   out_527341131399044270[25] = 0;
   out_527341131399044270[26] = 0;
   out_527341131399044270[27] = 0;
   out_527341131399044270[28] = 0;
   out_527341131399044270[29] = 0;
   out_527341131399044270[30] = 0;
   out_527341131399044270[31] = 0;
   out_527341131399044270[32] = 0;
   out_527341131399044270[33] = 0;
   out_527341131399044270[34] = 0;
   out_527341131399044270[35] = 0;
   out_527341131399044270[36] = 0;
   out_527341131399044270[37] = 0;
   out_527341131399044270[38] = 0;
   out_527341131399044270[39] = 0;
   out_527341131399044270[40] = 0;
   out_527341131399044270[41] = 0;
   out_527341131399044270[42] = 0;
   out_527341131399044270[43] = 0;
   out_527341131399044270[44] = 0;
   out_527341131399044270[45] = 0;
   out_527341131399044270[46] = 1;
   out_527341131399044270[47] = 0;
   out_527341131399044270[48] = 0;
   out_527341131399044270[49] = 0;
   out_527341131399044270[50] = 0;
   out_527341131399044270[51] = 0;
   out_527341131399044270[52] = 0;
   out_527341131399044270[53] = 0;
   out_527341131399044270[54] = 0;
   out_527341131399044270[55] = 0;
   out_527341131399044270[56] = 0;
   out_527341131399044270[57] = 0;
   out_527341131399044270[58] = 0;
   out_527341131399044270[59] = 0;
   out_527341131399044270[60] = 0;
   out_527341131399044270[61] = 0;
   out_527341131399044270[62] = 0;
   out_527341131399044270[63] = 0;
   out_527341131399044270[64] = 0;
   out_527341131399044270[65] = 0;
}
void h_31(double *state, double *unused, double *out_9086913132901260176) {
   out_9086913132901260176[0] = state[7];
   out_9086913132901260176[1] = state[8];
   out_9086913132901260176[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2218221900925969439) {
   out_2218221900925969439[0] = 0;
   out_2218221900925969439[1] = 0;
   out_2218221900925969439[2] = 0;
   out_2218221900925969439[3] = 0;
   out_2218221900925969439[4] = 0;
   out_2218221900925969439[5] = 0;
   out_2218221900925969439[6] = 0;
   out_2218221900925969439[7] = 1;
   out_2218221900925969439[8] = 0;
   out_2218221900925969439[9] = 0;
   out_2218221900925969439[10] = 0;
   out_2218221900925969439[11] = 0;
   out_2218221900925969439[12] = 0;
   out_2218221900925969439[13] = 0;
   out_2218221900925969439[14] = 0;
   out_2218221900925969439[15] = 0;
   out_2218221900925969439[16] = 0;
   out_2218221900925969439[17] = 0;
   out_2218221900925969439[18] = 0;
   out_2218221900925969439[19] = 0;
   out_2218221900925969439[20] = 0;
   out_2218221900925969439[21] = 0;
   out_2218221900925969439[22] = 0;
   out_2218221900925969439[23] = 0;
   out_2218221900925969439[24] = 0;
   out_2218221900925969439[25] = 0;
   out_2218221900925969439[26] = 0;
   out_2218221900925969439[27] = 0;
   out_2218221900925969439[28] = 0;
   out_2218221900925969439[29] = 0;
   out_2218221900925969439[30] = 1;
   out_2218221900925969439[31] = 0;
   out_2218221900925969439[32] = 0;
   out_2218221900925969439[33] = 0;
   out_2218221900925969439[34] = 0;
   out_2218221900925969439[35] = 0;
   out_2218221900925969439[36] = 0;
   out_2218221900925969439[37] = 0;
   out_2218221900925969439[38] = 0;
   out_2218221900925969439[39] = 0;
   out_2218221900925969439[40] = 0;
   out_2218221900925969439[41] = 0;
   out_2218221900925969439[42] = 0;
   out_2218221900925969439[43] = 0;
   out_2218221900925969439[44] = 0;
   out_2218221900925969439[45] = 0;
   out_2218221900925969439[46] = 0;
   out_2218221900925969439[47] = 0;
   out_2218221900925969439[48] = 0;
   out_2218221900925969439[49] = 0;
   out_2218221900925969439[50] = 0;
   out_2218221900925969439[51] = 0;
   out_2218221900925969439[52] = 0;
   out_2218221900925969439[53] = 1;
   out_2218221900925969439[54] = 0;
   out_2218221900925969439[55] = 0;
   out_2218221900925969439[56] = 0;
   out_2218221900925969439[57] = 0;
   out_2218221900925969439[58] = 0;
   out_2218221900925969439[59] = 0;
   out_2218221900925969439[60] = 0;
   out_2218221900925969439[61] = 0;
   out_2218221900925969439[62] = 0;
   out_2218221900925969439[63] = 0;
   out_2218221900925969439[64] = 0;
   out_2218221900925969439[65] = 0;
}
void h_32(double *state, double *unused, double *out_1686507834135682794) {
   out_1686507834135682794[0] = state[3];
   out_1686507834135682794[1] = state[4];
   out_1686507834135682794[2] = state[5];
   out_1686507834135682794[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6398834719730307759) {
   out_6398834719730307759[0] = 0;
   out_6398834719730307759[1] = 0;
   out_6398834719730307759[2] = 0;
   out_6398834719730307759[3] = 1;
   out_6398834719730307759[4] = 0;
   out_6398834719730307759[5] = 0;
   out_6398834719730307759[6] = 0;
   out_6398834719730307759[7] = 0;
   out_6398834719730307759[8] = 0;
   out_6398834719730307759[9] = 0;
   out_6398834719730307759[10] = 0;
   out_6398834719730307759[11] = 0;
   out_6398834719730307759[12] = 0;
   out_6398834719730307759[13] = 0;
   out_6398834719730307759[14] = 0;
   out_6398834719730307759[15] = 0;
   out_6398834719730307759[16] = 0;
   out_6398834719730307759[17] = 0;
   out_6398834719730307759[18] = 0;
   out_6398834719730307759[19] = 0;
   out_6398834719730307759[20] = 0;
   out_6398834719730307759[21] = 0;
   out_6398834719730307759[22] = 0;
   out_6398834719730307759[23] = 0;
   out_6398834719730307759[24] = 0;
   out_6398834719730307759[25] = 0;
   out_6398834719730307759[26] = 1;
   out_6398834719730307759[27] = 0;
   out_6398834719730307759[28] = 0;
   out_6398834719730307759[29] = 0;
   out_6398834719730307759[30] = 0;
   out_6398834719730307759[31] = 0;
   out_6398834719730307759[32] = 0;
   out_6398834719730307759[33] = 0;
   out_6398834719730307759[34] = 0;
   out_6398834719730307759[35] = 0;
   out_6398834719730307759[36] = 0;
   out_6398834719730307759[37] = 0;
   out_6398834719730307759[38] = 0;
   out_6398834719730307759[39] = 0;
   out_6398834719730307759[40] = 0;
   out_6398834719730307759[41] = 0;
   out_6398834719730307759[42] = 0;
   out_6398834719730307759[43] = 0;
   out_6398834719730307759[44] = 0;
   out_6398834719730307759[45] = 0;
   out_6398834719730307759[46] = 0;
   out_6398834719730307759[47] = 0;
   out_6398834719730307759[48] = 0;
   out_6398834719730307759[49] = 1;
   out_6398834719730307759[50] = 0;
   out_6398834719730307759[51] = 0;
   out_6398834719730307759[52] = 0;
   out_6398834719730307759[53] = 0;
   out_6398834719730307759[54] = 0;
   out_6398834719730307759[55] = 0;
   out_6398834719730307759[56] = 0;
   out_6398834719730307759[57] = 0;
   out_6398834719730307759[58] = 0;
   out_6398834719730307759[59] = 0;
   out_6398834719730307759[60] = 0;
   out_6398834719730307759[61] = 0;
   out_6398834719730307759[62] = 0;
   out_6398834719730307759[63] = 0;
   out_6398834719730307759[64] = 0;
   out_6398834719730307759[65] = 0;
   out_6398834719730307759[66] = 0;
   out_6398834719730307759[67] = 0;
   out_6398834719730307759[68] = 0;
   out_6398834719730307759[69] = 0;
   out_6398834719730307759[70] = 0;
   out_6398834719730307759[71] = 0;
   out_6398834719730307759[72] = 1;
   out_6398834719730307759[73] = 0;
   out_6398834719730307759[74] = 0;
   out_6398834719730307759[75] = 0;
   out_6398834719730307759[76] = 0;
   out_6398834719730307759[77] = 0;
   out_6398834719730307759[78] = 0;
   out_6398834719730307759[79] = 0;
   out_6398834719730307759[80] = 0;
   out_6398834719730307759[81] = 0;
   out_6398834719730307759[82] = 0;
   out_6398834719730307759[83] = 0;
   out_6398834719730307759[84] = 0;
   out_6398834719730307759[85] = 0;
   out_6398834719730307759[86] = 0;
   out_6398834719730307759[87] = 0;
}
void h_13(double *state, double *unused, double *out_1825263801085620470) {
   out_1825263801085620470[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1825263801085620470[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1825263801085620470[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_651079024379313970) {
   out_651079024379313970[0] = 0;
   out_651079024379313970[1] = 0;
   out_651079024379313970[2] = 0;
   out_651079024379313970[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_651079024379313970[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_651079024379313970[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_651079024379313970[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_651079024379313970[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_651079024379313970[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_651079024379313970[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_651079024379313970[10] = 0;
   out_651079024379313970[11] = 0;
   out_651079024379313970[12] = 0;
   out_651079024379313970[13] = 0;
   out_651079024379313970[14] = 0;
   out_651079024379313970[15] = 0;
   out_651079024379313970[16] = 0;
   out_651079024379313970[17] = 0;
   out_651079024379313970[18] = 0;
   out_651079024379313970[19] = 0;
   out_651079024379313970[20] = 0;
   out_651079024379313970[21] = 0;
   out_651079024379313970[22] = 0;
   out_651079024379313970[23] = 0;
   out_651079024379313970[24] = 0;
   out_651079024379313970[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_651079024379313970[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_651079024379313970[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_651079024379313970[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_651079024379313970[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_651079024379313970[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_651079024379313970[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_651079024379313970[32] = 0;
   out_651079024379313970[33] = 0;
   out_651079024379313970[34] = 0;
   out_651079024379313970[35] = 0;
   out_651079024379313970[36] = 0;
   out_651079024379313970[37] = 0;
   out_651079024379313970[38] = 0;
   out_651079024379313970[39] = 0;
   out_651079024379313970[40] = 0;
   out_651079024379313970[41] = 0;
   out_651079024379313970[42] = 0;
   out_651079024379313970[43] = 0;
   out_651079024379313970[44] = 0;
   out_651079024379313970[45] = 0;
   out_651079024379313970[46] = 0;
   out_651079024379313970[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_651079024379313970[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_651079024379313970[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_651079024379313970[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_651079024379313970[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_651079024379313970[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_651079024379313970[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_651079024379313970[54] = 0;
   out_651079024379313970[55] = 0;
   out_651079024379313970[56] = 0;
   out_651079024379313970[57] = 0;
   out_651079024379313970[58] = 0;
   out_651079024379313970[59] = 0;
   out_651079024379313970[60] = 0;
   out_651079024379313970[61] = 0;
   out_651079024379313970[62] = 0;
   out_651079024379313970[63] = 0;
   out_651079024379313970[64] = 0;
   out_651079024379313970[65] = 0;
}
void h_14(double *state, double *unused, double *out_7623235786031897685) {
   out_7623235786031897685[0] = state[10];
   out_7623235786031897685[1] = state[11];
   out_7623235786031897685[2] = state[12];
}
void H_14(double *state, double *unused, double *out_907250509817047292) {
   out_907250509817047292[0] = 0;
   out_907250509817047292[1] = 0;
   out_907250509817047292[2] = 0;
   out_907250509817047292[3] = 0;
   out_907250509817047292[4] = 0;
   out_907250509817047292[5] = 0;
   out_907250509817047292[6] = 0;
   out_907250509817047292[7] = 0;
   out_907250509817047292[8] = 0;
   out_907250509817047292[9] = 0;
   out_907250509817047292[10] = 1;
   out_907250509817047292[11] = 0;
   out_907250509817047292[12] = 0;
   out_907250509817047292[13] = 0;
   out_907250509817047292[14] = 0;
   out_907250509817047292[15] = 0;
   out_907250509817047292[16] = 0;
   out_907250509817047292[17] = 0;
   out_907250509817047292[18] = 0;
   out_907250509817047292[19] = 0;
   out_907250509817047292[20] = 0;
   out_907250509817047292[21] = 0;
   out_907250509817047292[22] = 0;
   out_907250509817047292[23] = 0;
   out_907250509817047292[24] = 0;
   out_907250509817047292[25] = 0;
   out_907250509817047292[26] = 0;
   out_907250509817047292[27] = 0;
   out_907250509817047292[28] = 0;
   out_907250509817047292[29] = 0;
   out_907250509817047292[30] = 0;
   out_907250509817047292[31] = 0;
   out_907250509817047292[32] = 0;
   out_907250509817047292[33] = 1;
   out_907250509817047292[34] = 0;
   out_907250509817047292[35] = 0;
   out_907250509817047292[36] = 0;
   out_907250509817047292[37] = 0;
   out_907250509817047292[38] = 0;
   out_907250509817047292[39] = 0;
   out_907250509817047292[40] = 0;
   out_907250509817047292[41] = 0;
   out_907250509817047292[42] = 0;
   out_907250509817047292[43] = 0;
   out_907250509817047292[44] = 0;
   out_907250509817047292[45] = 0;
   out_907250509817047292[46] = 0;
   out_907250509817047292[47] = 0;
   out_907250509817047292[48] = 0;
   out_907250509817047292[49] = 0;
   out_907250509817047292[50] = 0;
   out_907250509817047292[51] = 0;
   out_907250509817047292[52] = 0;
   out_907250509817047292[53] = 0;
   out_907250509817047292[54] = 0;
   out_907250509817047292[55] = 0;
   out_907250509817047292[56] = 1;
   out_907250509817047292[57] = 0;
   out_907250509817047292[58] = 0;
   out_907250509817047292[59] = 0;
   out_907250509817047292[60] = 0;
   out_907250509817047292[61] = 0;
   out_907250509817047292[62] = 0;
   out_907250509817047292[63] = 0;
   out_907250509817047292[64] = 0;
   out_907250509817047292[65] = 0;
}
void h_33(double *state, double *unused, double *out_1461014533630698934) {
   out_1461014533630698934[0] = state[16];
   out_1461014533630698934[1] = state[17];
   out_1461014533630698934[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5368778905564827043) {
   out_5368778905564827043[0] = 0;
   out_5368778905564827043[1] = 0;
   out_5368778905564827043[2] = 0;
   out_5368778905564827043[3] = 0;
   out_5368778905564827043[4] = 0;
   out_5368778905564827043[5] = 0;
   out_5368778905564827043[6] = 0;
   out_5368778905564827043[7] = 0;
   out_5368778905564827043[8] = 0;
   out_5368778905564827043[9] = 0;
   out_5368778905564827043[10] = 0;
   out_5368778905564827043[11] = 0;
   out_5368778905564827043[12] = 0;
   out_5368778905564827043[13] = 0;
   out_5368778905564827043[14] = 0;
   out_5368778905564827043[15] = 0;
   out_5368778905564827043[16] = 1;
   out_5368778905564827043[17] = 0;
   out_5368778905564827043[18] = 0;
   out_5368778905564827043[19] = 0;
   out_5368778905564827043[20] = 0;
   out_5368778905564827043[21] = 0;
   out_5368778905564827043[22] = 0;
   out_5368778905564827043[23] = 0;
   out_5368778905564827043[24] = 0;
   out_5368778905564827043[25] = 0;
   out_5368778905564827043[26] = 0;
   out_5368778905564827043[27] = 0;
   out_5368778905564827043[28] = 0;
   out_5368778905564827043[29] = 0;
   out_5368778905564827043[30] = 0;
   out_5368778905564827043[31] = 0;
   out_5368778905564827043[32] = 0;
   out_5368778905564827043[33] = 0;
   out_5368778905564827043[34] = 0;
   out_5368778905564827043[35] = 0;
   out_5368778905564827043[36] = 0;
   out_5368778905564827043[37] = 0;
   out_5368778905564827043[38] = 0;
   out_5368778905564827043[39] = 1;
   out_5368778905564827043[40] = 0;
   out_5368778905564827043[41] = 0;
   out_5368778905564827043[42] = 0;
   out_5368778905564827043[43] = 0;
   out_5368778905564827043[44] = 0;
   out_5368778905564827043[45] = 0;
   out_5368778905564827043[46] = 0;
   out_5368778905564827043[47] = 0;
   out_5368778905564827043[48] = 0;
   out_5368778905564827043[49] = 0;
   out_5368778905564827043[50] = 0;
   out_5368778905564827043[51] = 0;
   out_5368778905564827043[52] = 0;
   out_5368778905564827043[53] = 0;
   out_5368778905564827043[54] = 0;
   out_5368778905564827043[55] = 0;
   out_5368778905564827043[56] = 0;
   out_5368778905564827043[57] = 0;
   out_5368778905564827043[58] = 0;
   out_5368778905564827043[59] = 0;
   out_5368778905564827043[60] = 0;
   out_5368778905564827043[61] = 0;
   out_5368778905564827043[62] = 1;
   out_5368778905564827043[63] = 0;
   out_5368778905564827043[64] = 0;
   out_5368778905564827043[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_769978375014327116) {
  H(in_vec, out_769978375014327116);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3930581419091845154) {
  err_fun(nom_x, delta_x, out_3930581419091845154);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2964816902716136158) {
  inv_err_fun(nom_x, true_x, out_2964816902716136158);
}
void live_H_mod_fun(double *state, double *out_2094271694511580680) {
  H_mod_fun(state, out_2094271694511580680);
}
void live_f_fun(double *state, double dt, double *out_7618125418436970734) {
  f_fun(state,  dt, out_7618125418436970734);
}
void live_F_fun(double *state, double dt, double *out_2420505287107436684) {
  F_fun(state,  dt, out_2420505287107436684);
}
void live_h_4(double *state, double *unused, double *out_6516895377116661716) {
  h_4(state, unused, out_6516895377116661716);
}
void live_H_4(double *state, double *unused, double *out_1148440156446637937) {
  H_4(state, unused, out_1148440156446637937);
}
void live_h_9(double *state, double *unused, double *out_7623235786031897685) {
  h_9(state, unused, out_7623235786031897685);
}
void live_H_9(double *state, double *unused, double *out_907250509817047292) {
  H_9(state, unused, out_907250509817047292);
}
void live_h_10(double *state, double *unused, double *out_8031178198245777888) {
  h_10(state, unused, out_8031178198245777888);
}
void live_H_10(double *state, double *unused, double *out_8420786504377253541) {
  H_10(state, unused, out_8420786504377253541);
}
void live_h_12(double *state, double *unused, double *out_2524803393288813612) {
  h_12(state, unused, out_2524803393288813612);
}
void live_H_12(double *state, double *unused, double *out_527341131399044270) {
  H_12(state, unused, out_527341131399044270);
}
void live_h_31(double *state, double *unused, double *out_9086913132901260176) {
  h_31(state, unused, out_9086913132901260176);
}
void live_H_31(double *state, double *unused, double *out_2218221900925969439) {
  H_31(state, unused, out_2218221900925969439);
}
void live_h_32(double *state, double *unused, double *out_1686507834135682794) {
  h_32(state, unused, out_1686507834135682794);
}
void live_H_32(double *state, double *unused, double *out_6398834719730307759) {
  H_32(state, unused, out_6398834719730307759);
}
void live_h_13(double *state, double *unused, double *out_1825263801085620470) {
  h_13(state, unused, out_1825263801085620470);
}
void live_H_13(double *state, double *unused, double *out_651079024379313970) {
  H_13(state, unused, out_651079024379313970);
}
void live_h_14(double *state, double *unused, double *out_7623235786031897685) {
  h_14(state, unused, out_7623235786031897685);
}
void live_H_14(double *state, double *unused, double *out_907250509817047292) {
  H_14(state, unused, out_907250509817047292);
}
void live_h_33(double *state, double *unused, double *out_1461014533630698934) {
  h_33(state, unused, out_1461014533630698934);
}
void live_H_33(double *state, double *unused, double *out_5368778905564827043) {
  H_33(state, unused, out_5368778905564827043);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
