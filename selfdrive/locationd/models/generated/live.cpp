#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8234830301498350503) {
   out_8234830301498350503[0] = 0;
   out_8234830301498350503[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8234830301498350503[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8234830301498350503[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8234830301498350503[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8234830301498350503[5] = -sin(in_vec[1]);
   out_8234830301498350503[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8234830301498350503[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8234830301498350503[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8234830301498350503[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8234830301498350503[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8234830301498350503[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8234830301498350503[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8234830301498350503[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8234830301498350503[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8234830301498350503[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8234830301498350503[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8234830301498350503[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9205728283257919471) {
   out_9205728283257919471[0] = delta_x[0] + nom_x[0];
   out_9205728283257919471[1] = delta_x[1] + nom_x[1];
   out_9205728283257919471[2] = delta_x[2] + nom_x[2];
   out_9205728283257919471[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9205728283257919471[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9205728283257919471[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9205728283257919471[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9205728283257919471[7] = delta_x[6] + nom_x[7];
   out_9205728283257919471[8] = delta_x[7] + nom_x[8];
   out_9205728283257919471[9] = delta_x[8] + nom_x[9];
   out_9205728283257919471[10] = delta_x[9] + nom_x[10];
   out_9205728283257919471[11] = delta_x[10] + nom_x[11];
   out_9205728283257919471[12] = delta_x[11] + nom_x[12];
   out_9205728283257919471[13] = delta_x[12] + nom_x[13];
   out_9205728283257919471[14] = delta_x[13] + nom_x[14];
   out_9205728283257919471[15] = delta_x[14] + nom_x[15];
   out_9205728283257919471[16] = delta_x[15] + nom_x[16];
   out_9205728283257919471[17] = delta_x[16] + nom_x[17];
   out_9205728283257919471[18] = delta_x[17] + nom_x[18];
   out_9205728283257919471[19] = delta_x[18] + nom_x[19];
   out_9205728283257919471[20] = delta_x[19] + nom_x[20];
   out_9205728283257919471[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1121107328928305263) {
   out_1121107328928305263[0] = -nom_x[0] + true_x[0];
   out_1121107328928305263[1] = -nom_x[1] + true_x[1];
   out_1121107328928305263[2] = -nom_x[2] + true_x[2];
   out_1121107328928305263[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1121107328928305263[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1121107328928305263[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1121107328928305263[6] = -nom_x[7] + true_x[7];
   out_1121107328928305263[7] = -nom_x[8] + true_x[8];
   out_1121107328928305263[8] = -nom_x[9] + true_x[9];
   out_1121107328928305263[9] = -nom_x[10] + true_x[10];
   out_1121107328928305263[10] = -nom_x[11] + true_x[11];
   out_1121107328928305263[11] = -nom_x[12] + true_x[12];
   out_1121107328928305263[12] = -nom_x[13] + true_x[13];
   out_1121107328928305263[13] = -nom_x[14] + true_x[14];
   out_1121107328928305263[14] = -nom_x[15] + true_x[15];
   out_1121107328928305263[15] = -nom_x[16] + true_x[16];
   out_1121107328928305263[16] = -nom_x[17] + true_x[17];
   out_1121107328928305263[17] = -nom_x[18] + true_x[18];
   out_1121107328928305263[18] = -nom_x[19] + true_x[19];
   out_1121107328928305263[19] = -nom_x[20] + true_x[20];
   out_1121107328928305263[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6630457861198022915) {
   out_6630457861198022915[0] = 1.0;
   out_6630457861198022915[1] = 0;
   out_6630457861198022915[2] = 0;
   out_6630457861198022915[3] = 0;
   out_6630457861198022915[4] = 0;
   out_6630457861198022915[5] = 0;
   out_6630457861198022915[6] = 0;
   out_6630457861198022915[7] = 0;
   out_6630457861198022915[8] = 0;
   out_6630457861198022915[9] = 0;
   out_6630457861198022915[10] = 0;
   out_6630457861198022915[11] = 0;
   out_6630457861198022915[12] = 0;
   out_6630457861198022915[13] = 0;
   out_6630457861198022915[14] = 0;
   out_6630457861198022915[15] = 0;
   out_6630457861198022915[16] = 0;
   out_6630457861198022915[17] = 0;
   out_6630457861198022915[18] = 0;
   out_6630457861198022915[19] = 0;
   out_6630457861198022915[20] = 0;
   out_6630457861198022915[21] = 0;
   out_6630457861198022915[22] = 1.0;
   out_6630457861198022915[23] = 0;
   out_6630457861198022915[24] = 0;
   out_6630457861198022915[25] = 0;
   out_6630457861198022915[26] = 0;
   out_6630457861198022915[27] = 0;
   out_6630457861198022915[28] = 0;
   out_6630457861198022915[29] = 0;
   out_6630457861198022915[30] = 0;
   out_6630457861198022915[31] = 0;
   out_6630457861198022915[32] = 0;
   out_6630457861198022915[33] = 0;
   out_6630457861198022915[34] = 0;
   out_6630457861198022915[35] = 0;
   out_6630457861198022915[36] = 0;
   out_6630457861198022915[37] = 0;
   out_6630457861198022915[38] = 0;
   out_6630457861198022915[39] = 0;
   out_6630457861198022915[40] = 0;
   out_6630457861198022915[41] = 0;
   out_6630457861198022915[42] = 0;
   out_6630457861198022915[43] = 0;
   out_6630457861198022915[44] = 1.0;
   out_6630457861198022915[45] = 0;
   out_6630457861198022915[46] = 0;
   out_6630457861198022915[47] = 0;
   out_6630457861198022915[48] = 0;
   out_6630457861198022915[49] = 0;
   out_6630457861198022915[50] = 0;
   out_6630457861198022915[51] = 0;
   out_6630457861198022915[52] = 0;
   out_6630457861198022915[53] = 0;
   out_6630457861198022915[54] = 0;
   out_6630457861198022915[55] = 0;
   out_6630457861198022915[56] = 0;
   out_6630457861198022915[57] = 0;
   out_6630457861198022915[58] = 0;
   out_6630457861198022915[59] = 0;
   out_6630457861198022915[60] = 0;
   out_6630457861198022915[61] = 0;
   out_6630457861198022915[62] = 0;
   out_6630457861198022915[63] = 0;
   out_6630457861198022915[64] = 0;
   out_6630457861198022915[65] = 0;
   out_6630457861198022915[66] = -0.5*state[4];
   out_6630457861198022915[67] = -0.5*state[5];
   out_6630457861198022915[68] = -0.5*state[6];
   out_6630457861198022915[69] = 0;
   out_6630457861198022915[70] = 0;
   out_6630457861198022915[71] = 0;
   out_6630457861198022915[72] = 0;
   out_6630457861198022915[73] = 0;
   out_6630457861198022915[74] = 0;
   out_6630457861198022915[75] = 0;
   out_6630457861198022915[76] = 0;
   out_6630457861198022915[77] = 0;
   out_6630457861198022915[78] = 0;
   out_6630457861198022915[79] = 0;
   out_6630457861198022915[80] = 0;
   out_6630457861198022915[81] = 0;
   out_6630457861198022915[82] = 0;
   out_6630457861198022915[83] = 0;
   out_6630457861198022915[84] = 0;
   out_6630457861198022915[85] = 0;
   out_6630457861198022915[86] = 0;
   out_6630457861198022915[87] = 0.5*state[3];
   out_6630457861198022915[88] = 0.5*state[6];
   out_6630457861198022915[89] = -0.5*state[5];
   out_6630457861198022915[90] = 0;
   out_6630457861198022915[91] = 0;
   out_6630457861198022915[92] = 0;
   out_6630457861198022915[93] = 0;
   out_6630457861198022915[94] = 0;
   out_6630457861198022915[95] = 0;
   out_6630457861198022915[96] = 0;
   out_6630457861198022915[97] = 0;
   out_6630457861198022915[98] = 0;
   out_6630457861198022915[99] = 0;
   out_6630457861198022915[100] = 0;
   out_6630457861198022915[101] = 0;
   out_6630457861198022915[102] = 0;
   out_6630457861198022915[103] = 0;
   out_6630457861198022915[104] = 0;
   out_6630457861198022915[105] = 0;
   out_6630457861198022915[106] = 0;
   out_6630457861198022915[107] = 0;
   out_6630457861198022915[108] = -0.5*state[6];
   out_6630457861198022915[109] = 0.5*state[3];
   out_6630457861198022915[110] = 0.5*state[4];
   out_6630457861198022915[111] = 0;
   out_6630457861198022915[112] = 0;
   out_6630457861198022915[113] = 0;
   out_6630457861198022915[114] = 0;
   out_6630457861198022915[115] = 0;
   out_6630457861198022915[116] = 0;
   out_6630457861198022915[117] = 0;
   out_6630457861198022915[118] = 0;
   out_6630457861198022915[119] = 0;
   out_6630457861198022915[120] = 0;
   out_6630457861198022915[121] = 0;
   out_6630457861198022915[122] = 0;
   out_6630457861198022915[123] = 0;
   out_6630457861198022915[124] = 0;
   out_6630457861198022915[125] = 0;
   out_6630457861198022915[126] = 0;
   out_6630457861198022915[127] = 0;
   out_6630457861198022915[128] = 0;
   out_6630457861198022915[129] = 0.5*state[5];
   out_6630457861198022915[130] = -0.5*state[4];
   out_6630457861198022915[131] = 0.5*state[3];
   out_6630457861198022915[132] = 0;
   out_6630457861198022915[133] = 0;
   out_6630457861198022915[134] = 0;
   out_6630457861198022915[135] = 0;
   out_6630457861198022915[136] = 0;
   out_6630457861198022915[137] = 0;
   out_6630457861198022915[138] = 0;
   out_6630457861198022915[139] = 0;
   out_6630457861198022915[140] = 0;
   out_6630457861198022915[141] = 0;
   out_6630457861198022915[142] = 0;
   out_6630457861198022915[143] = 0;
   out_6630457861198022915[144] = 0;
   out_6630457861198022915[145] = 0;
   out_6630457861198022915[146] = 0;
   out_6630457861198022915[147] = 0;
   out_6630457861198022915[148] = 0;
   out_6630457861198022915[149] = 0;
   out_6630457861198022915[150] = 0;
   out_6630457861198022915[151] = 0;
   out_6630457861198022915[152] = 0;
   out_6630457861198022915[153] = 1.0;
   out_6630457861198022915[154] = 0;
   out_6630457861198022915[155] = 0;
   out_6630457861198022915[156] = 0;
   out_6630457861198022915[157] = 0;
   out_6630457861198022915[158] = 0;
   out_6630457861198022915[159] = 0;
   out_6630457861198022915[160] = 0;
   out_6630457861198022915[161] = 0;
   out_6630457861198022915[162] = 0;
   out_6630457861198022915[163] = 0;
   out_6630457861198022915[164] = 0;
   out_6630457861198022915[165] = 0;
   out_6630457861198022915[166] = 0;
   out_6630457861198022915[167] = 0;
   out_6630457861198022915[168] = 0;
   out_6630457861198022915[169] = 0;
   out_6630457861198022915[170] = 0;
   out_6630457861198022915[171] = 0;
   out_6630457861198022915[172] = 0;
   out_6630457861198022915[173] = 0;
   out_6630457861198022915[174] = 0;
   out_6630457861198022915[175] = 1.0;
   out_6630457861198022915[176] = 0;
   out_6630457861198022915[177] = 0;
   out_6630457861198022915[178] = 0;
   out_6630457861198022915[179] = 0;
   out_6630457861198022915[180] = 0;
   out_6630457861198022915[181] = 0;
   out_6630457861198022915[182] = 0;
   out_6630457861198022915[183] = 0;
   out_6630457861198022915[184] = 0;
   out_6630457861198022915[185] = 0;
   out_6630457861198022915[186] = 0;
   out_6630457861198022915[187] = 0;
   out_6630457861198022915[188] = 0;
   out_6630457861198022915[189] = 0;
   out_6630457861198022915[190] = 0;
   out_6630457861198022915[191] = 0;
   out_6630457861198022915[192] = 0;
   out_6630457861198022915[193] = 0;
   out_6630457861198022915[194] = 0;
   out_6630457861198022915[195] = 0;
   out_6630457861198022915[196] = 0;
   out_6630457861198022915[197] = 1.0;
   out_6630457861198022915[198] = 0;
   out_6630457861198022915[199] = 0;
   out_6630457861198022915[200] = 0;
   out_6630457861198022915[201] = 0;
   out_6630457861198022915[202] = 0;
   out_6630457861198022915[203] = 0;
   out_6630457861198022915[204] = 0;
   out_6630457861198022915[205] = 0;
   out_6630457861198022915[206] = 0;
   out_6630457861198022915[207] = 0;
   out_6630457861198022915[208] = 0;
   out_6630457861198022915[209] = 0;
   out_6630457861198022915[210] = 0;
   out_6630457861198022915[211] = 0;
   out_6630457861198022915[212] = 0;
   out_6630457861198022915[213] = 0;
   out_6630457861198022915[214] = 0;
   out_6630457861198022915[215] = 0;
   out_6630457861198022915[216] = 0;
   out_6630457861198022915[217] = 0;
   out_6630457861198022915[218] = 0;
   out_6630457861198022915[219] = 1.0;
   out_6630457861198022915[220] = 0;
   out_6630457861198022915[221] = 0;
   out_6630457861198022915[222] = 0;
   out_6630457861198022915[223] = 0;
   out_6630457861198022915[224] = 0;
   out_6630457861198022915[225] = 0;
   out_6630457861198022915[226] = 0;
   out_6630457861198022915[227] = 0;
   out_6630457861198022915[228] = 0;
   out_6630457861198022915[229] = 0;
   out_6630457861198022915[230] = 0;
   out_6630457861198022915[231] = 0;
   out_6630457861198022915[232] = 0;
   out_6630457861198022915[233] = 0;
   out_6630457861198022915[234] = 0;
   out_6630457861198022915[235] = 0;
   out_6630457861198022915[236] = 0;
   out_6630457861198022915[237] = 0;
   out_6630457861198022915[238] = 0;
   out_6630457861198022915[239] = 0;
   out_6630457861198022915[240] = 0;
   out_6630457861198022915[241] = 1.0;
   out_6630457861198022915[242] = 0;
   out_6630457861198022915[243] = 0;
   out_6630457861198022915[244] = 0;
   out_6630457861198022915[245] = 0;
   out_6630457861198022915[246] = 0;
   out_6630457861198022915[247] = 0;
   out_6630457861198022915[248] = 0;
   out_6630457861198022915[249] = 0;
   out_6630457861198022915[250] = 0;
   out_6630457861198022915[251] = 0;
   out_6630457861198022915[252] = 0;
   out_6630457861198022915[253] = 0;
   out_6630457861198022915[254] = 0;
   out_6630457861198022915[255] = 0;
   out_6630457861198022915[256] = 0;
   out_6630457861198022915[257] = 0;
   out_6630457861198022915[258] = 0;
   out_6630457861198022915[259] = 0;
   out_6630457861198022915[260] = 0;
   out_6630457861198022915[261] = 0;
   out_6630457861198022915[262] = 0;
   out_6630457861198022915[263] = 1.0;
   out_6630457861198022915[264] = 0;
   out_6630457861198022915[265] = 0;
   out_6630457861198022915[266] = 0;
   out_6630457861198022915[267] = 0;
   out_6630457861198022915[268] = 0;
   out_6630457861198022915[269] = 0;
   out_6630457861198022915[270] = 0;
   out_6630457861198022915[271] = 0;
   out_6630457861198022915[272] = 0;
   out_6630457861198022915[273] = 0;
   out_6630457861198022915[274] = 0;
   out_6630457861198022915[275] = 0;
   out_6630457861198022915[276] = 0;
   out_6630457861198022915[277] = 0;
   out_6630457861198022915[278] = 0;
   out_6630457861198022915[279] = 0;
   out_6630457861198022915[280] = 0;
   out_6630457861198022915[281] = 0;
   out_6630457861198022915[282] = 0;
   out_6630457861198022915[283] = 0;
   out_6630457861198022915[284] = 0;
   out_6630457861198022915[285] = 1.0;
   out_6630457861198022915[286] = 0;
   out_6630457861198022915[287] = 0;
   out_6630457861198022915[288] = 0;
   out_6630457861198022915[289] = 0;
   out_6630457861198022915[290] = 0;
   out_6630457861198022915[291] = 0;
   out_6630457861198022915[292] = 0;
   out_6630457861198022915[293] = 0;
   out_6630457861198022915[294] = 0;
   out_6630457861198022915[295] = 0;
   out_6630457861198022915[296] = 0;
   out_6630457861198022915[297] = 0;
   out_6630457861198022915[298] = 0;
   out_6630457861198022915[299] = 0;
   out_6630457861198022915[300] = 0;
   out_6630457861198022915[301] = 0;
   out_6630457861198022915[302] = 0;
   out_6630457861198022915[303] = 0;
   out_6630457861198022915[304] = 0;
   out_6630457861198022915[305] = 0;
   out_6630457861198022915[306] = 0;
   out_6630457861198022915[307] = 1.0;
   out_6630457861198022915[308] = 0;
   out_6630457861198022915[309] = 0;
   out_6630457861198022915[310] = 0;
   out_6630457861198022915[311] = 0;
   out_6630457861198022915[312] = 0;
   out_6630457861198022915[313] = 0;
   out_6630457861198022915[314] = 0;
   out_6630457861198022915[315] = 0;
   out_6630457861198022915[316] = 0;
   out_6630457861198022915[317] = 0;
   out_6630457861198022915[318] = 0;
   out_6630457861198022915[319] = 0;
   out_6630457861198022915[320] = 0;
   out_6630457861198022915[321] = 0;
   out_6630457861198022915[322] = 0;
   out_6630457861198022915[323] = 0;
   out_6630457861198022915[324] = 0;
   out_6630457861198022915[325] = 0;
   out_6630457861198022915[326] = 0;
   out_6630457861198022915[327] = 0;
   out_6630457861198022915[328] = 0;
   out_6630457861198022915[329] = 1.0;
   out_6630457861198022915[330] = 0;
   out_6630457861198022915[331] = 0;
   out_6630457861198022915[332] = 0;
   out_6630457861198022915[333] = 0;
   out_6630457861198022915[334] = 0;
   out_6630457861198022915[335] = 0;
   out_6630457861198022915[336] = 0;
   out_6630457861198022915[337] = 0;
   out_6630457861198022915[338] = 0;
   out_6630457861198022915[339] = 0;
   out_6630457861198022915[340] = 0;
   out_6630457861198022915[341] = 0;
   out_6630457861198022915[342] = 0;
   out_6630457861198022915[343] = 0;
   out_6630457861198022915[344] = 0;
   out_6630457861198022915[345] = 0;
   out_6630457861198022915[346] = 0;
   out_6630457861198022915[347] = 0;
   out_6630457861198022915[348] = 0;
   out_6630457861198022915[349] = 0;
   out_6630457861198022915[350] = 0;
   out_6630457861198022915[351] = 1.0;
   out_6630457861198022915[352] = 0;
   out_6630457861198022915[353] = 0;
   out_6630457861198022915[354] = 0;
   out_6630457861198022915[355] = 0;
   out_6630457861198022915[356] = 0;
   out_6630457861198022915[357] = 0;
   out_6630457861198022915[358] = 0;
   out_6630457861198022915[359] = 0;
   out_6630457861198022915[360] = 0;
   out_6630457861198022915[361] = 0;
   out_6630457861198022915[362] = 0;
   out_6630457861198022915[363] = 0;
   out_6630457861198022915[364] = 0;
   out_6630457861198022915[365] = 0;
   out_6630457861198022915[366] = 0;
   out_6630457861198022915[367] = 0;
   out_6630457861198022915[368] = 0;
   out_6630457861198022915[369] = 0;
   out_6630457861198022915[370] = 0;
   out_6630457861198022915[371] = 0;
   out_6630457861198022915[372] = 0;
   out_6630457861198022915[373] = 1.0;
   out_6630457861198022915[374] = 0;
   out_6630457861198022915[375] = 0;
   out_6630457861198022915[376] = 0;
   out_6630457861198022915[377] = 0;
   out_6630457861198022915[378] = 0;
   out_6630457861198022915[379] = 0;
   out_6630457861198022915[380] = 0;
   out_6630457861198022915[381] = 0;
   out_6630457861198022915[382] = 0;
   out_6630457861198022915[383] = 0;
   out_6630457861198022915[384] = 0;
   out_6630457861198022915[385] = 0;
   out_6630457861198022915[386] = 0;
   out_6630457861198022915[387] = 0;
   out_6630457861198022915[388] = 0;
   out_6630457861198022915[389] = 0;
   out_6630457861198022915[390] = 0;
   out_6630457861198022915[391] = 0;
   out_6630457861198022915[392] = 0;
   out_6630457861198022915[393] = 0;
   out_6630457861198022915[394] = 0;
   out_6630457861198022915[395] = 1.0;
   out_6630457861198022915[396] = 0;
   out_6630457861198022915[397] = 0;
   out_6630457861198022915[398] = 0;
   out_6630457861198022915[399] = 0;
   out_6630457861198022915[400] = 0;
   out_6630457861198022915[401] = 0;
   out_6630457861198022915[402] = 0;
   out_6630457861198022915[403] = 0;
   out_6630457861198022915[404] = 0;
   out_6630457861198022915[405] = 0;
   out_6630457861198022915[406] = 0;
   out_6630457861198022915[407] = 0;
   out_6630457861198022915[408] = 0;
   out_6630457861198022915[409] = 0;
   out_6630457861198022915[410] = 0;
   out_6630457861198022915[411] = 0;
   out_6630457861198022915[412] = 0;
   out_6630457861198022915[413] = 0;
   out_6630457861198022915[414] = 0;
   out_6630457861198022915[415] = 0;
   out_6630457861198022915[416] = 0;
   out_6630457861198022915[417] = 1.0;
   out_6630457861198022915[418] = 0;
   out_6630457861198022915[419] = 0;
   out_6630457861198022915[420] = 0;
   out_6630457861198022915[421] = 0;
   out_6630457861198022915[422] = 0;
   out_6630457861198022915[423] = 0;
   out_6630457861198022915[424] = 0;
   out_6630457861198022915[425] = 0;
   out_6630457861198022915[426] = 0;
   out_6630457861198022915[427] = 0;
   out_6630457861198022915[428] = 0;
   out_6630457861198022915[429] = 0;
   out_6630457861198022915[430] = 0;
   out_6630457861198022915[431] = 0;
   out_6630457861198022915[432] = 0;
   out_6630457861198022915[433] = 0;
   out_6630457861198022915[434] = 0;
   out_6630457861198022915[435] = 0;
   out_6630457861198022915[436] = 0;
   out_6630457861198022915[437] = 0;
   out_6630457861198022915[438] = 0;
   out_6630457861198022915[439] = 1.0;
   out_6630457861198022915[440] = 0;
   out_6630457861198022915[441] = 0;
   out_6630457861198022915[442] = 0;
   out_6630457861198022915[443] = 0;
   out_6630457861198022915[444] = 0;
   out_6630457861198022915[445] = 0;
   out_6630457861198022915[446] = 0;
   out_6630457861198022915[447] = 0;
   out_6630457861198022915[448] = 0;
   out_6630457861198022915[449] = 0;
   out_6630457861198022915[450] = 0;
   out_6630457861198022915[451] = 0;
   out_6630457861198022915[452] = 0;
   out_6630457861198022915[453] = 0;
   out_6630457861198022915[454] = 0;
   out_6630457861198022915[455] = 0;
   out_6630457861198022915[456] = 0;
   out_6630457861198022915[457] = 0;
   out_6630457861198022915[458] = 0;
   out_6630457861198022915[459] = 0;
   out_6630457861198022915[460] = 0;
   out_6630457861198022915[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4594302555446211754) {
   out_4594302555446211754[0] = dt*state[7] + state[0];
   out_4594302555446211754[1] = dt*state[8] + state[1];
   out_4594302555446211754[2] = dt*state[9] + state[2];
   out_4594302555446211754[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4594302555446211754[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4594302555446211754[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4594302555446211754[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4594302555446211754[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4594302555446211754[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4594302555446211754[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4594302555446211754[10] = state[10];
   out_4594302555446211754[11] = state[11];
   out_4594302555446211754[12] = state[12];
   out_4594302555446211754[13] = state[13];
   out_4594302555446211754[14] = state[14];
   out_4594302555446211754[15] = state[15];
   out_4594302555446211754[16] = state[16];
   out_4594302555446211754[17] = state[17];
   out_4594302555446211754[18] = state[18];
   out_4594302555446211754[19] = state[19];
   out_4594302555446211754[20] = state[20];
   out_4594302555446211754[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3899290995433609093) {
   out_3899290995433609093[0] = 1;
   out_3899290995433609093[1] = 0;
   out_3899290995433609093[2] = 0;
   out_3899290995433609093[3] = 0;
   out_3899290995433609093[4] = 0;
   out_3899290995433609093[5] = 0;
   out_3899290995433609093[6] = dt;
   out_3899290995433609093[7] = 0;
   out_3899290995433609093[8] = 0;
   out_3899290995433609093[9] = 0;
   out_3899290995433609093[10] = 0;
   out_3899290995433609093[11] = 0;
   out_3899290995433609093[12] = 0;
   out_3899290995433609093[13] = 0;
   out_3899290995433609093[14] = 0;
   out_3899290995433609093[15] = 0;
   out_3899290995433609093[16] = 0;
   out_3899290995433609093[17] = 0;
   out_3899290995433609093[18] = 0;
   out_3899290995433609093[19] = 0;
   out_3899290995433609093[20] = 0;
   out_3899290995433609093[21] = 0;
   out_3899290995433609093[22] = 1;
   out_3899290995433609093[23] = 0;
   out_3899290995433609093[24] = 0;
   out_3899290995433609093[25] = 0;
   out_3899290995433609093[26] = 0;
   out_3899290995433609093[27] = 0;
   out_3899290995433609093[28] = dt;
   out_3899290995433609093[29] = 0;
   out_3899290995433609093[30] = 0;
   out_3899290995433609093[31] = 0;
   out_3899290995433609093[32] = 0;
   out_3899290995433609093[33] = 0;
   out_3899290995433609093[34] = 0;
   out_3899290995433609093[35] = 0;
   out_3899290995433609093[36] = 0;
   out_3899290995433609093[37] = 0;
   out_3899290995433609093[38] = 0;
   out_3899290995433609093[39] = 0;
   out_3899290995433609093[40] = 0;
   out_3899290995433609093[41] = 0;
   out_3899290995433609093[42] = 0;
   out_3899290995433609093[43] = 0;
   out_3899290995433609093[44] = 1;
   out_3899290995433609093[45] = 0;
   out_3899290995433609093[46] = 0;
   out_3899290995433609093[47] = 0;
   out_3899290995433609093[48] = 0;
   out_3899290995433609093[49] = 0;
   out_3899290995433609093[50] = dt;
   out_3899290995433609093[51] = 0;
   out_3899290995433609093[52] = 0;
   out_3899290995433609093[53] = 0;
   out_3899290995433609093[54] = 0;
   out_3899290995433609093[55] = 0;
   out_3899290995433609093[56] = 0;
   out_3899290995433609093[57] = 0;
   out_3899290995433609093[58] = 0;
   out_3899290995433609093[59] = 0;
   out_3899290995433609093[60] = 0;
   out_3899290995433609093[61] = 0;
   out_3899290995433609093[62] = 0;
   out_3899290995433609093[63] = 0;
   out_3899290995433609093[64] = 0;
   out_3899290995433609093[65] = 0;
   out_3899290995433609093[66] = 1;
   out_3899290995433609093[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3899290995433609093[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3899290995433609093[69] = 0;
   out_3899290995433609093[70] = 0;
   out_3899290995433609093[71] = 0;
   out_3899290995433609093[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3899290995433609093[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3899290995433609093[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3899290995433609093[75] = 0;
   out_3899290995433609093[76] = 0;
   out_3899290995433609093[77] = 0;
   out_3899290995433609093[78] = 0;
   out_3899290995433609093[79] = 0;
   out_3899290995433609093[80] = 0;
   out_3899290995433609093[81] = 0;
   out_3899290995433609093[82] = 0;
   out_3899290995433609093[83] = 0;
   out_3899290995433609093[84] = 0;
   out_3899290995433609093[85] = 0;
   out_3899290995433609093[86] = 0;
   out_3899290995433609093[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3899290995433609093[88] = 1;
   out_3899290995433609093[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3899290995433609093[90] = 0;
   out_3899290995433609093[91] = 0;
   out_3899290995433609093[92] = 0;
   out_3899290995433609093[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3899290995433609093[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3899290995433609093[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3899290995433609093[96] = 0;
   out_3899290995433609093[97] = 0;
   out_3899290995433609093[98] = 0;
   out_3899290995433609093[99] = 0;
   out_3899290995433609093[100] = 0;
   out_3899290995433609093[101] = 0;
   out_3899290995433609093[102] = 0;
   out_3899290995433609093[103] = 0;
   out_3899290995433609093[104] = 0;
   out_3899290995433609093[105] = 0;
   out_3899290995433609093[106] = 0;
   out_3899290995433609093[107] = 0;
   out_3899290995433609093[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3899290995433609093[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3899290995433609093[110] = 1;
   out_3899290995433609093[111] = 0;
   out_3899290995433609093[112] = 0;
   out_3899290995433609093[113] = 0;
   out_3899290995433609093[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3899290995433609093[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3899290995433609093[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3899290995433609093[117] = 0;
   out_3899290995433609093[118] = 0;
   out_3899290995433609093[119] = 0;
   out_3899290995433609093[120] = 0;
   out_3899290995433609093[121] = 0;
   out_3899290995433609093[122] = 0;
   out_3899290995433609093[123] = 0;
   out_3899290995433609093[124] = 0;
   out_3899290995433609093[125] = 0;
   out_3899290995433609093[126] = 0;
   out_3899290995433609093[127] = 0;
   out_3899290995433609093[128] = 0;
   out_3899290995433609093[129] = 0;
   out_3899290995433609093[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3899290995433609093[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3899290995433609093[132] = 1;
   out_3899290995433609093[133] = 0;
   out_3899290995433609093[134] = 0;
   out_3899290995433609093[135] = 0;
   out_3899290995433609093[136] = 0;
   out_3899290995433609093[137] = 0;
   out_3899290995433609093[138] = 0;
   out_3899290995433609093[139] = 0;
   out_3899290995433609093[140] = 0;
   out_3899290995433609093[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3899290995433609093[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3899290995433609093[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3899290995433609093[144] = 0;
   out_3899290995433609093[145] = 0;
   out_3899290995433609093[146] = 0;
   out_3899290995433609093[147] = 0;
   out_3899290995433609093[148] = 0;
   out_3899290995433609093[149] = 0;
   out_3899290995433609093[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3899290995433609093[151] = 0;
   out_3899290995433609093[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3899290995433609093[153] = 0;
   out_3899290995433609093[154] = 1;
   out_3899290995433609093[155] = 0;
   out_3899290995433609093[156] = 0;
   out_3899290995433609093[157] = 0;
   out_3899290995433609093[158] = 0;
   out_3899290995433609093[159] = 0;
   out_3899290995433609093[160] = 0;
   out_3899290995433609093[161] = 0;
   out_3899290995433609093[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3899290995433609093[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3899290995433609093[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3899290995433609093[165] = 0;
   out_3899290995433609093[166] = 0;
   out_3899290995433609093[167] = 0;
   out_3899290995433609093[168] = 0;
   out_3899290995433609093[169] = 0;
   out_3899290995433609093[170] = 0;
   out_3899290995433609093[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3899290995433609093[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3899290995433609093[173] = 0;
   out_3899290995433609093[174] = 0;
   out_3899290995433609093[175] = 0;
   out_3899290995433609093[176] = 1;
   out_3899290995433609093[177] = 0;
   out_3899290995433609093[178] = 0;
   out_3899290995433609093[179] = 0;
   out_3899290995433609093[180] = 0;
   out_3899290995433609093[181] = 0;
   out_3899290995433609093[182] = 0;
   out_3899290995433609093[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3899290995433609093[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3899290995433609093[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3899290995433609093[186] = 0;
   out_3899290995433609093[187] = 0;
   out_3899290995433609093[188] = 0;
   out_3899290995433609093[189] = 0;
   out_3899290995433609093[190] = 0;
   out_3899290995433609093[191] = 0;
   out_3899290995433609093[192] = 0;
   out_3899290995433609093[193] = 0;
   out_3899290995433609093[194] = 0;
   out_3899290995433609093[195] = 0;
   out_3899290995433609093[196] = 0;
   out_3899290995433609093[197] = 0;
   out_3899290995433609093[198] = 1;
   out_3899290995433609093[199] = 0;
   out_3899290995433609093[200] = 0;
   out_3899290995433609093[201] = 0;
   out_3899290995433609093[202] = 0;
   out_3899290995433609093[203] = 0;
   out_3899290995433609093[204] = 0;
   out_3899290995433609093[205] = 0;
   out_3899290995433609093[206] = 0;
   out_3899290995433609093[207] = 0;
   out_3899290995433609093[208] = 0;
   out_3899290995433609093[209] = 0;
   out_3899290995433609093[210] = 0;
   out_3899290995433609093[211] = 0;
   out_3899290995433609093[212] = 0;
   out_3899290995433609093[213] = 0;
   out_3899290995433609093[214] = 0;
   out_3899290995433609093[215] = 0;
   out_3899290995433609093[216] = 0;
   out_3899290995433609093[217] = 0;
   out_3899290995433609093[218] = 0;
   out_3899290995433609093[219] = 0;
   out_3899290995433609093[220] = 1;
   out_3899290995433609093[221] = 0;
   out_3899290995433609093[222] = 0;
   out_3899290995433609093[223] = 0;
   out_3899290995433609093[224] = 0;
   out_3899290995433609093[225] = 0;
   out_3899290995433609093[226] = 0;
   out_3899290995433609093[227] = 0;
   out_3899290995433609093[228] = 0;
   out_3899290995433609093[229] = 0;
   out_3899290995433609093[230] = 0;
   out_3899290995433609093[231] = 0;
   out_3899290995433609093[232] = 0;
   out_3899290995433609093[233] = 0;
   out_3899290995433609093[234] = 0;
   out_3899290995433609093[235] = 0;
   out_3899290995433609093[236] = 0;
   out_3899290995433609093[237] = 0;
   out_3899290995433609093[238] = 0;
   out_3899290995433609093[239] = 0;
   out_3899290995433609093[240] = 0;
   out_3899290995433609093[241] = 0;
   out_3899290995433609093[242] = 1;
   out_3899290995433609093[243] = 0;
   out_3899290995433609093[244] = 0;
   out_3899290995433609093[245] = 0;
   out_3899290995433609093[246] = 0;
   out_3899290995433609093[247] = 0;
   out_3899290995433609093[248] = 0;
   out_3899290995433609093[249] = 0;
   out_3899290995433609093[250] = 0;
   out_3899290995433609093[251] = 0;
   out_3899290995433609093[252] = 0;
   out_3899290995433609093[253] = 0;
   out_3899290995433609093[254] = 0;
   out_3899290995433609093[255] = 0;
   out_3899290995433609093[256] = 0;
   out_3899290995433609093[257] = 0;
   out_3899290995433609093[258] = 0;
   out_3899290995433609093[259] = 0;
   out_3899290995433609093[260] = 0;
   out_3899290995433609093[261] = 0;
   out_3899290995433609093[262] = 0;
   out_3899290995433609093[263] = 0;
   out_3899290995433609093[264] = 1;
   out_3899290995433609093[265] = 0;
   out_3899290995433609093[266] = 0;
   out_3899290995433609093[267] = 0;
   out_3899290995433609093[268] = 0;
   out_3899290995433609093[269] = 0;
   out_3899290995433609093[270] = 0;
   out_3899290995433609093[271] = 0;
   out_3899290995433609093[272] = 0;
   out_3899290995433609093[273] = 0;
   out_3899290995433609093[274] = 0;
   out_3899290995433609093[275] = 0;
   out_3899290995433609093[276] = 0;
   out_3899290995433609093[277] = 0;
   out_3899290995433609093[278] = 0;
   out_3899290995433609093[279] = 0;
   out_3899290995433609093[280] = 0;
   out_3899290995433609093[281] = 0;
   out_3899290995433609093[282] = 0;
   out_3899290995433609093[283] = 0;
   out_3899290995433609093[284] = 0;
   out_3899290995433609093[285] = 0;
   out_3899290995433609093[286] = 1;
   out_3899290995433609093[287] = 0;
   out_3899290995433609093[288] = 0;
   out_3899290995433609093[289] = 0;
   out_3899290995433609093[290] = 0;
   out_3899290995433609093[291] = 0;
   out_3899290995433609093[292] = 0;
   out_3899290995433609093[293] = 0;
   out_3899290995433609093[294] = 0;
   out_3899290995433609093[295] = 0;
   out_3899290995433609093[296] = 0;
   out_3899290995433609093[297] = 0;
   out_3899290995433609093[298] = 0;
   out_3899290995433609093[299] = 0;
   out_3899290995433609093[300] = 0;
   out_3899290995433609093[301] = 0;
   out_3899290995433609093[302] = 0;
   out_3899290995433609093[303] = 0;
   out_3899290995433609093[304] = 0;
   out_3899290995433609093[305] = 0;
   out_3899290995433609093[306] = 0;
   out_3899290995433609093[307] = 0;
   out_3899290995433609093[308] = 1;
   out_3899290995433609093[309] = 0;
   out_3899290995433609093[310] = 0;
   out_3899290995433609093[311] = 0;
   out_3899290995433609093[312] = 0;
   out_3899290995433609093[313] = 0;
   out_3899290995433609093[314] = 0;
   out_3899290995433609093[315] = 0;
   out_3899290995433609093[316] = 0;
   out_3899290995433609093[317] = 0;
   out_3899290995433609093[318] = 0;
   out_3899290995433609093[319] = 0;
   out_3899290995433609093[320] = 0;
   out_3899290995433609093[321] = 0;
   out_3899290995433609093[322] = 0;
   out_3899290995433609093[323] = 0;
   out_3899290995433609093[324] = 0;
   out_3899290995433609093[325] = 0;
   out_3899290995433609093[326] = 0;
   out_3899290995433609093[327] = 0;
   out_3899290995433609093[328] = 0;
   out_3899290995433609093[329] = 0;
   out_3899290995433609093[330] = 1;
   out_3899290995433609093[331] = 0;
   out_3899290995433609093[332] = 0;
   out_3899290995433609093[333] = 0;
   out_3899290995433609093[334] = 0;
   out_3899290995433609093[335] = 0;
   out_3899290995433609093[336] = 0;
   out_3899290995433609093[337] = 0;
   out_3899290995433609093[338] = 0;
   out_3899290995433609093[339] = 0;
   out_3899290995433609093[340] = 0;
   out_3899290995433609093[341] = 0;
   out_3899290995433609093[342] = 0;
   out_3899290995433609093[343] = 0;
   out_3899290995433609093[344] = 0;
   out_3899290995433609093[345] = 0;
   out_3899290995433609093[346] = 0;
   out_3899290995433609093[347] = 0;
   out_3899290995433609093[348] = 0;
   out_3899290995433609093[349] = 0;
   out_3899290995433609093[350] = 0;
   out_3899290995433609093[351] = 0;
   out_3899290995433609093[352] = 1;
   out_3899290995433609093[353] = 0;
   out_3899290995433609093[354] = 0;
   out_3899290995433609093[355] = 0;
   out_3899290995433609093[356] = 0;
   out_3899290995433609093[357] = 0;
   out_3899290995433609093[358] = 0;
   out_3899290995433609093[359] = 0;
   out_3899290995433609093[360] = 0;
   out_3899290995433609093[361] = 0;
   out_3899290995433609093[362] = 0;
   out_3899290995433609093[363] = 0;
   out_3899290995433609093[364] = 0;
   out_3899290995433609093[365] = 0;
   out_3899290995433609093[366] = 0;
   out_3899290995433609093[367] = 0;
   out_3899290995433609093[368] = 0;
   out_3899290995433609093[369] = 0;
   out_3899290995433609093[370] = 0;
   out_3899290995433609093[371] = 0;
   out_3899290995433609093[372] = 0;
   out_3899290995433609093[373] = 0;
   out_3899290995433609093[374] = 1;
   out_3899290995433609093[375] = 0;
   out_3899290995433609093[376] = 0;
   out_3899290995433609093[377] = 0;
   out_3899290995433609093[378] = 0;
   out_3899290995433609093[379] = 0;
   out_3899290995433609093[380] = 0;
   out_3899290995433609093[381] = 0;
   out_3899290995433609093[382] = 0;
   out_3899290995433609093[383] = 0;
   out_3899290995433609093[384] = 0;
   out_3899290995433609093[385] = 0;
   out_3899290995433609093[386] = 0;
   out_3899290995433609093[387] = 0;
   out_3899290995433609093[388] = 0;
   out_3899290995433609093[389] = 0;
   out_3899290995433609093[390] = 0;
   out_3899290995433609093[391] = 0;
   out_3899290995433609093[392] = 0;
   out_3899290995433609093[393] = 0;
   out_3899290995433609093[394] = 0;
   out_3899290995433609093[395] = 0;
   out_3899290995433609093[396] = 1;
   out_3899290995433609093[397] = 0;
   out_3899290995433609093[398] = 0;
   out_3899290995433609093[399] = 0;
   out_3899290995433609093[400] = 0;
   out_3899290995433609093[401] = 0;
   out_3899290995433609093[402] = 0;
   out_3899290995433609093[403] = 0;
   out_3899290995433609093[404] = 0;
   out_3899290995433609093[405] = 0;
   out_3899290995433609093[406] = 0;
   out_3899290995433609093[407] = 0;
   out_3899290995433609093[408] = 0;
   out_3899290995433609093[409] = 0;
   out_3899290995433609093[410] = 0;
   out_3899290995433609093[411] = 0;
   out_3899290995433609093[412] = 0;
   out_3899290995433609093[413] = 0;
   out_3899290995433609093[414] = 0;
   out_3899290995433609093[415] = 0;
   out_3899290995433609093[416] = 0;
   out_3899290995433609093[417] = 0;
   out_3899290995433609093[418] = 1;
   out_3899290995433609093[419] = 0;
   out_3899290995433609093[420] = 0;
   out_3899290995433609093[421] = 0;
   out_3899290995433609093[422] = 0;
   out_3899290995433609093[423] = 0;
   out_3899290995433609093[424] = 0;
   out_3899290995433609093[425] = 0;
   out_3899290995433609093[426] = 0;
   out_3899290995433609093[427] = 0;
   out_3899290995433609093[428] = 0;
   out_3899290995433609093[429] = 0;
   out_3899290995433609093[430] = 0;
   out_3899290995433609093[431] = 0;
   out_3899290995433609093[432] = 0;
   out_3899290995433609093[433] = 0;
   out_3899290995433609093[434] = 0;
   out_3899290995433609093[435] = 0;
   out_3899290995433609093[436] = 0;
   out_3899290995433609093[437] = 0;
   out_3899290995433609093[438] = 0;
   out_3899290995433609093[439] = 0;
   out_3899290995433609093[440] = 1;
}
void h_4(double *state, double *unused, double *out_3495821887468815505) {
   out_3495821887468815505[0] = state[10] + state[13];
   out_3495821887468815505[1] = state[11] + state[14];
   out_3495821887468815505[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8522651919324043022) {
   out_8522651919324043022[0] = 0;
   out_8522651919324043022[1] = 0;
   out_8522651919324043022[2] = 0;
   out_8522651919324043022[3] = 0;
   out_8522651919324043022[4] = 0;
   out_8522651919324043022[5] = 0;
   out_8522651919324043022[6] = 0;
   out_8522651919324043022[7] = 0;
   out_8522651919324043022[8] = 0;
   out_8522651919324043022[9] = 0;
   out_8522651919324043022[10] = 1;
   out_8522651919324043022[11] = 0;
   out_8522651919324043022[12] = 0;
   out_8522651919324043022[13] = 1;
   out_8522651919324043022[14] = 0;
   out_8522651919324043022[15] = 0;
   out_8522651919324043022[16] = 0;
   out_8522651919324043022[17] = 0;
   out_8522651919324043022[18] = 0;
   out_8522651919324043022[19] = 0;
   out_8522651919324043022[20] = 0;
   out_8522651919324043022[21] = 0;
   out_8522651919324043022[22] = 0;
   out_8522651919324043022[23] = 0;
   out_8522651919324043022[24] = 0;
   out_8522651919324043022[25] = 0;
   out_8522651919324043022[26] = 0;
   out_8522651919324043022[27] = 0;
   out_8522651919324043022[28] = 0;
   out_8522651919324043022[29] = 0;
   out_8522651919324043022[30] = 0;
   out_8522651919324043022[31] = 0;
   out_8522651919324043022[32] = 0;
   out_8522651919324043022[33] = 1;
   out_8522651919324043022[34] = 0;
   out_8522651919324043022[35] = 0;
   out_8522651919324043022[36] = 1;
   out_8522651919324043022[37] = 0;
   out_8522651919324043022[38] = 0;
   out_8522651919324043022[39] = 0;
   out_8522651919324043022[40] = 0;
   out_8522651919324043022[41] = 0;
   out_8522651919324043022[42] = 0;
   out_8522651919324043022[43] = 0;
   out_8522651919324043022[44] = 0;
   out_8522651919324043022[45] = 0;
   out_8522651919324043022[46] = 0;
   out_8522651919324043022[47] = 0;
   out_8522651919324043022[48] = 0;
   out_8522651919324043022[49] = 0;
   out_8522651919324043022[50] = 0;
   out_8522651919324043022[51] = 0;
   out_8522651919324043022[52] = 0;
   out_8522651919324043022[53] = 0;
   out_8522651919324043022[54] = 0;
   out_8522651919324043022[55] = 0;
   out_8522651919324043022[56] = 1;
   out_8522651919324043022[57] = 0;
   out_8522651919324043022[58] = 0;
   out_8522651919324043022[59] = 1;
   out_8522651919324043022[60] = 0;
   out_8522651919324043022[61] = 0;
   out_8522651919324043022[62] = 0;
   out_8522651919324043022[63] = 0;
   out_8522651919324043022[64] = 0;
   out_8522651919324043022[65] = 0;
}
void h_9(double *state, double *unused, double *out_6629576861282118105) {
   out_6629576861282118105[0] = state[10];
   out_6629576861282118105[1] = state[11];
   out_6629576861282118105[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8763841565953633667) {
   out_8763841565953633667[0] = 0;
   out_8763841565953633667[1] = 0;
   out_8763841565953633667[2] = 0;
   out_8763841565953633667[3] = 0;
   out_8763841565953633667[4] = 0;
   out_8763841565953633667[5] = 0;
   out_8763841565953633667[6] = 0;
   out_8763841565953633667[7] = 0;
   out_8763841565953633667[8] = 0;
   out_8763841565953633667[9] = 0;
   out_8763841565953633667[10] = 1;
   out_8763841565953633667[11] = 0;
   out_8763841565953633667[12] = 0;
   out_8763841565953633667[13] = 0;
   out_8763841565953633667[14] = 0;
   out_8763841565953633667[15] = 0;
   out_8763841565953633667[16] = 0;
   out_8763841565953633667[17] = 0;
   out_8763841565953633667[18] = 0;
   out_8763841565953633667[19] = 0;
   out_8763841565953633667[20] = 0;
   out_8763841565953633667[21] = 0;
   out_8763841565953633667[22] = 0;
   out_8763841565953633667[23] = 0;
   out_8763841565953633667[24] = 0;
   out_8763841565953633667[25] = 0;
   out_8763841565953633667[26] = 0;
   out_8763841565953633667[27] = 0;
   out_8763841565953633667[28] = 0;
   out_8763841565953633667[29] = 0;
   out_8763841565953633667[30] = 0;
   out_8763841565953633667[31] = 0;
   out_8763841565953633667[32] = 0;
   out_8763841565953633667[33] = 1;
   out_8763841565953633667[34] = 0;
   out_8763841565953633667[35] = 0;
   out_8763841565953633667[36] = 0;
   out_8763841565953633667[37] = 0;
   out_8763841565953633667[38] = 0;
   out_8763841565953633667[39] = 0;
   out_8763841565953633667[40] = 0;
   out_8763841565953633667[41] = 0;
   out_8763841565953633667[42] = 0;
   out_8763841565953633667[43] = 0;
   out_8763841565953633667[44] = 0;
   out_8763841565953633667[45] = 0;
   out_8763841565953633667[46] = 0;
   out_8763841565953633667[47] = 0;
   out_8763841565953633667[48] = 0;
   out_8763841565953633667[49] = 0;
   out_8763841565953633667[50] = 0;
   out_8763841565953633667[51] = 0;
   out_8763841565953633667[52] = 0;
   out_8763841565953633667[53] = 0;
   out_8763841565953633667[54] = 0;
   out_8763841565953633667[55] = 0;
   out_8763841565953633667[56] = 1;
   out_8763841565953633667[57] = 0;
   out_8763841565953633667[58] = 0;
   out_8763841565953633667[59] = 0;
   out_8763841565953633667[60] = 0;
   out_8763841565953633667[61] = 0;
   out_8763841565953633667[62] = 0;
   out_8763841565953633667[63] = 0;
   out_8763841565953633667[64] = 0;
   out_8763841565953633667[65] = 0;
}
void h_10(double *state, double *unused, double *out_1782463083523657948) {
   out_1782463083523657948[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1782463083523657948[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1782463083523657948[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7840508142764785759) {
   out_7840508142764785759[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7840508142764785759[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7840508142764785759[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7840508142764785759[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7840508142764785759[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7840508142764785759[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7840508142764785759[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7840508142764785759[7] = 0;
   out_7840508142764785759[8] = 0;
   out_7840508142764785759[9] = 0;
   out_7840508142764785759[10] = 0;
   out_7840508142764785759[11] = 0;
   out_7840508142764785759[12] = 0;
   out_7840508142764785759[13] = 0;
   out_7840508142764785759[14] = 0;
   out_7840508142764785759[15] = 0;
   out_7840508142764785759[16] = 1;
   out_7840508142764785759[17] = 0;
   out_7840508142764785759[18] = 0;
   out_7840508142764785759[19] = 1;
   out_7840508142764785759[20] = 0;
   out_7840508142764785759[21] = 0;
   out_7840508142764785759[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7840508142764785759[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7840508142764785759[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7840508142764785759[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7840508142764785759[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7840508142764785759[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7840508142764785759[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7840508142764785759[29] = 0;
   out_7840508142764785759[30] = 0;
   out_7840508142764785759[31] = 0;
   out_7840508142764785759[32] = 0;
   out_7840508142764785759[33] = 0;
   out_7840508142764785759[34] = 0;
   out_7840508142764785759[35] = 0;
   out_7840508142764785759[36] = 0;
   out_7840508142764785759[37] = 0;
   out_7840508142764785759[38] = 0;
   out_7840508142764785759[39] = 1;
   out_7840508142764785759[40] = 0;
   out_7840508142764785759[41] = 0;
   out_7840508142764785759[42] = 1;
   out_7840508142764785759[43] = 0;
   out_7840508142764785759[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7840508142764785759[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7840508142764785759[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7840508142764785759[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7840508142764785759[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7840508142764785759[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7840508142764785759[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7840508142764785759[51] = 0;
   out_7840508142764785759[52] = 0;
   out_7840508142764785759[53] = 0;
   out_7840508142764785759[54] = 0;
   out_7840508142764785759[55] = 0;
   out_7840508142764785759[56] = 0;
   out_7840508142764785759[57] = 0;
   out_7840508142764785759[58] = 0;
   out_7840508142764785759[59] = 0;
   out_7840508142764785759[60] = 0;
   out_7840508142764785759[61] = 0;
   out_7840508142764785759[62] = 1;
   out_7840508142764785759[63] = 0;
   out_7840508142764785759[64] = 0;
   out_7840508142764785759[65] = 1;
}
void h_12(double *state, double *unused, double *out_4602718504022440759) {
   out_4602718504022440759[0] = state[0];
   out_4602718504022440759[1] = state[1];
   out_4602718504022440759[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4904635746353546799) {
   out_4904635746353546799[0] = 1;
   out_4904635746353546799[1] = 0;
   out_4904635746353546799[2] = 0;
   out_4904635746353546799[3] = 0;
   out_4904635746353546799[4] = 0;
   out_4904635746353546799[5] = 0;
   out_4904635746353546799[6] = 0;
   out_4904635746353546799[7] = 0;
   out_4904635746353546799[8] = 0;
   out_4904635746353546799[9] = 0;
   out_4904635746353546799[10] = 0;
   out_4904635746353546799[11] = 0;
   out_4904635746353546799[12] = 0;
   out_4904635746353546799[13] = 0;
   out_4904635746353546799[14] = 0;
   out_4904635746353546799[15] = 0;
   out_4904635746353546799[16] = 0;
   out_4904635746353546799[17] = 0;
   out_4904635746353546799[18] = 0;
   out_4904635746353546799[19] = 0;
   out_4904635746353546799[20] = 0;
   out_4904635746353546799[21] = 0;
   out_4904635746353546799[22] = 0;
   out_4904635746353546799[23] = 1;
   out_4904635746353546799[24] = 0;
   out_4904635746353546799[25] = 0;
   out_4904635746353546799[26] = 0;
   out_4904635746353546799[27] = 0;
   out_4904635746353546799[28] = 0;
   out_4904635746353546799[29] = 0;
   out_4904635746353546799[30] = 0;
   out_4904635746353546799[31] = 0;
   out_4904635746353546799[32] = 0;
   out_4904635746353546799[33] = 0;
   out_4904635746353546799[34] = 0;
   out_4904635746353546799[35] = 0;
   out_4904635746353546799[36] = 0;
   out_4904635746353546799[37] = 0;
   out_4904635746353546799[38] = 0;
   out_4904635746353546799[39] = 0;
   out_4904635746353546799[40] = 0;
   out_4904635746353546799[41] = 0;
   out_4904635746353546799[42] = 0;
   out_4904635746353546799[43] = 0;
   out_4904635746353546799[44] = 0;
   out_4904635746353546799[45] = 0;
   out_4904635746353546799[46] = 1;
   out_4904635746353546799[47] = 0;
   out_4904635746353546799[48] = 0;
   out_4904635746353546799[49] = 0;
   out_4904635746353546799[50] = 0;
   out_4904635746353546799[51] = 0;
   out_4904635746353546799[52] = 0;
   out_4904635746353546799[53] = 0;
   out_4904635746353546799[54] = 0;
   out_4904635746353546799[55] = 0;
   out_4904635746353546799[56] = 0;
   out_4904635746353546799[57] = 0;
   out_4904635746353546799[58] = 0;
   out_4904635746353546799[59] = 0;
   out_4904635746353546799[60] = 0;
   out_4904635746353546799[61] = 0;
   out_4904635746353546799[62] = 0;
   out_4904635746353546799[63] = 0;
   out_4904635746353546799[64] = 0;
   out_4904635746353546799[65] = 0;
}
void h_31(double *state, double *unused, double *out_1341934715987041353) {
   out_1341934715987041353[0] = state[7];
   out_1341934715987041353[1] = state[8];
   out_1341934715987041353[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2159072714028533090) {
   out_2159072714028533090[0] = 0;
   out_2159072714028533090[1] = 0;
   out_2159072714028533090[2] = 0;
   out_2159072714028533090[3] = 0;
   out_2159072714028533090[4] = 0;
   out_2159072714028533090[5] = 0;
   out_2159072714028533090[6] = 0;
   out_2159072714028533090[7] = 1;
   out_2159072714028533090[8] = 0;
   out_2159072714028533090[9] = 0;
   out_2159072714028533090[10] = 0;
   out_2159072714028533090[11] = 0;
   out_2159072714028533090[12] = 0;
   out_2159072714028533090[13] = 0;
   out_2159072714028533090[14] = 0;
   out_2159072714028533090[15] = 0;
   out_2159072714028533090[16] = 0;
   out_2159072714028533090[17] = 0;
   out_2159072714028533090[18] = 0;
   out_2159072714028533090[19] = 0;
   out_2159072714028533090[20] = 0;
   out_2159072714028533090[21] = 0;
   out_2159072714028533090[22] = 0;
   out_2159072714028533090[23] = 0;
   out_2159072714028533090[24] = 0;
   out_2159072714028533090[25] = 0;
   out_2159072714028533090[26] = 0;
   out_2159072714028533090[27] = 0;
   out_2159072714028533090[28] = 0;
   out_2159072714028533090[29] = 0;
   out_2159072714028533090[30] = 1;
   out_2159072714028533090[31] = 0;
   out_2159072714028533090[32] = 0;
   out_2159072714028533090[33] = 0;
   out_2159072714028533090[34] = 0;
   out_2159072714028533090[35] = 0;
   out_2159072714028533090[36] = 0;
   out_2159072714028533090[37] = 0;
   out_2159072714028533090[38] = 0;
   out_2159072714028533090[39] = 0;
   out_2159072714028533090[40] = 0;
   out_2159072714028533090[41] = 0;
   out_2159072714028533090[42] = 0;
   out_2159072714028533090[43] = 0;
   out_2159072714028533090[44] = 0;
   out_2159072714028533090[45] = 0;
   out_2159072714028533090[46] = 0;
   out_2159072714028533090[47] = 0;
   out_2159072714028533090[48] = 0;
   out_2159072714028533090[49] = 0;
   out_2159072714028533090[50] = 0;
   out_2159072714028533090[51] = 0;
   out_2159072714028533090[52] = 0;
   out_2159072714028533090[53] = 1;
   out_2159072714028533090[54] = 0;
   out_2159072714028533090[55] = 0;
   out_2159072714028533090[56] = 0;
   out_2159072714028533090[57] = 0;
   out_2159072714028533090[58] = 0;
   out_2159072714028533090[59] = 0;
   out_2159072714028533090[60] = 0;
   out_2159072714028533090[61] = 0;
   out_2159072714028533090[62] = 0;
   out_2159072714028533090[63] = 0;
   out_2159072714028533090[64] = 0;
   out_2159072714028533090[65] = 0;
}
void h_32(double *state, double *unused, double *out_2604619187550527596) {
   out_2604619187550527596[0] = state[3];
   out_2604619187550527596[1] = state[4];
   out_2604619187550527596[2] = state[5];
   out_2604619187550527596[3] = state[6];
}
void H_32(double *state, double *unused, double *out_624585450389884503) {
   out_624585450389884503[0] = 0;
   out_624585450389884503[1] = 0;
   out_624585450389884503[2] = 0;
   out_624585450389884503[3] = 1;
   out_624585450389884503[4] = 0;
   out_624585450389884503[5] = 0;
   out_624585450389884503[6] = 0;
   out_624585450389884503[7] = 0;
   out_624585450389884503[8] = 0;
   out_624585450389884503[9] = 0;
   out_624585450389884503[10] = 0;
   out_624585450389884503[11] = 0;
   out_624585450389884503[12] = 0;
   out_624585450389884503[13] = 0;
   out_624585450389884503[14] = 0;
   out_624585450389884503[15] = 0;
   out_624585450389884503[16] = 0;
   out_624585450389884503[17] = 0;
   out_624585450389884503[18] = 0;
   out_624585450389884503[19] = 0;
   out_624585450389884503[20] = 0;
   out_624585450389884503[21] = 0;
   out_624585450389884503[22] = 0;
   out_624585450389884503[23] = 0;
   out_624585450389884503[24] = 0;
   out_624585450389884503[25] = 0;
   out_624585450389884503[26] = 1;
   out_624585450389884503[27] = 0;
   out_624585450389884503[28] = 0;
   out_624585450389884503[29] = 0;
   out_624585450389884503[30] = 0;
   out_624585450389884503[31] = 0;
   out_624585450389884503[32] = 0;
   out_624585450389884503[33] = 0;
   out_624585450389884503[34] = 0;
   out_624585450389884503[35] = 0;
   out_624585450389884503[36] = 0;
   out_624585450389884503[37] = 0;
   out_624585450389884503[38] = 0;
   out_624585450389884503[39] = 0;
   out_624585450389884503[40] = 0;
   out_624585450389884503[41] = 0;
   out_624585450389884503[42] = 0;
   out_624585450389884503[43] = 0;
   out_624585450389884503[44] = 0;
   out_624585450389884503[45] = 0;
   out_624585450389884503[46] = 0;
   out_624585450389884503[47] = 0;
   out_624585450389884503[48] = 0;
   out_624585450389884503[49] = 1;
   out_624585450389884503[50] = 0;
   out_624585450389884503[51] = 0;
   out_624585450389884503[52] = 0;
   out_624585450389884503[53] = 0;
   out_624585450389884503[54] = 0;
   out_624585450389884503[55] = 0;
   out_624585450389884503[56] = 0;
   out_624585450389884503[57] = 0;
   out_624585450389884503[58] = 0;
   out_624585450389884503[59] = 0;
   out_624585450389884503[60] = 0;
   out_624585450389884503[61] = 0;
   out_624585450389884503[62] = 0;
   out_624585450389884503[63] = 0;
   out_624585450389884503[64] = 0;
   out_624585450389884503[65] = 0;
   out_624585450389884503[66] = 0;
   out_624585450389884503[67] = 0;
   out_624585450389884503[68] = 0;
   out_624585450389884503[69] = 0;
   out_624585450389884503[70] = 0;
   out_624585450389884503[71] = 0;
   out_624585450389884503[72] = 1;
   out_624585450389884503[73] = 0;
   out_624585450389884503[74] = 0;
   out_624585450389884503[75] = 0;
   out_624585450389884503[76] = 0;
   out_624585450389884503[77] = 0;
   out_624585450389884503[78] = 0;
   out_624585450389884503[79] = 0;
   out_624585450389884503[80] = 0;
   out_624585450389884503[81] = 0;
   out_624585450389884503[82] = 0;
   out_624585450389884503[83] = 0;
   out_624585450389884503[84] = 0;
   out_624585450389884503[85] = 0;
   out_624585450389884503[86] = 0;
   out_624585450389884503[87] = 0;
}
void h_13(double *state, double *unused, double *out_6859828326726688004) {
   out_6859828326726688004[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6859828326726688004[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6859828326726688004[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5851007935052113609) {
   out_5851007935052113609[0] = 0;
   out_5851007935052113609[1] = 0;
   out_5851007935052113609[2] = 0;
   out_5851007935052113609[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5851007935052113609[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5851007935052113609[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5851007935052113609[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5851007935052113609[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5851007935052113609[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5851007935052113609[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5851007935052113609[10] = 0;
   out_5851007935052113609[11] = 0;
   out_5851007935052113609[12] = 0;
   out_5851007935052113609[13] = 0;
   out_5851007935052113609[14] = 0;
   out_5851007935052113609[15] = 0;
   out_5851007935052113609[16] = 0;
   out_5851007935052113609[17] = 0;
   out_5851007935052113609[18] = 0;
   out_5851007935052113609[19] = 0;
   out_5851007935052113609[20] = 0;
   out_5851007935052113609[21] = 0;
   out_5851007935052113609[22] = 0;
   out_5851007935052113609[23] = 0;
   out_5851007935052113609[24] = 0;
   out_5851007935052113609[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5851007935052113609[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5851007935052113609[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5851007935052113609[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5851007935052113609[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5851007935052113609[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5851007935052113609[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5851007935052113609[32] = 0;
   out_5851007935052113609[33] = 0;
   out_5851007935052113609[34] = 0;
   out_5851007935052113609[35] = 0;
   out_5851007935052113609[36] = 0;
   out_5851007935052113609[37] = 0;
   out_5851007935052113609[38] = 0;
   out_5851007935052113609[39] = 0;
   out_5851007935052113609[40] = 0;
   out_5851007935052113609[41] = 0;
   out_5851007935052113609[42] = 0;
   out_5851007935052113609[43] = 0;
   out_5851007935052113609[44] = 0;
   out_5851007935052113609[45] = 0;
   out_5851007935052113609[46] = 0;
   out_5851007935052113609[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5851007935052113609[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5851007935052113609[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5851007935052113609[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5851007935052113609[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5851007935052113609[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5851007935052113609[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5851007935052113609[54] = 0;
   out_5851007935052113609[55] = 0;
   out_5851007935052113609[56] = 0;
   out_5851007935052113609[57] = 0;
   out_5851007935052113609[58] = 0;
   out_5851007935052113609[59] = 0;
   out_5851007935052113609[60] = 0;
   out_5851007935052113609[61] = 0;
   out_5851007935052113609[62] = 0;
   out_5851007935052113609[63] = 0;
   out_5851007935052113609[64] = 0;
   out_5851007935052113609[65] = 0;
}
void h_14(double *state, double *unused, double *out_6629576861282118105) {
   out_6629576861282118105[0] = state[10];
   out_6629576861282118105[1] = state[11];
   out_6629576861282118105[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8763841565953633667) {
   out_8763841565953633667[0] = 0;
   out_8763841565953633667[1] = 0;
   out_8763841565953633667[2] = 0;
   out_8763841565953633667[3] = 0;
   out_8763841565953633667[4] = 0;
   out_8763841565953633667[5] = 0;
   out_8763841565953633667[6] = 0;
   out_8763841565953633667[7] = 0;
   out_8763841565953633667[8] = 0;
   out_8763841565953633667[9] = 0;
   out_8763841565953633667[10] = 1;
   out_8763841565953633667[11] = 0;
   out_8763841565953633667[12] = 0;
   out_8763841565953633667[13] = 0;
   out_8763841565953633667[14] = 0;
   out_8763841565953633667[15] = 0;
   out_8763841565953633667[16] = 0;
   out_8763841565953633667[17] = 0;
   out_8763841565953633667[18] = 0;
   out_8763841565953633667[19] = 0;
   out_8763841565953633667[20] = 0;
   out_8763841565953633667[21] = 0;
   out_8763841565953633667[22] = 0;
   out_8763841565953633667[23] = 0;
   out_8763841565953633667[24] = 0;
   out_8763841565953633667[25] = 0;
   out_8763841565953633667[26] = 0;
   out_8763841565953633667[27] = 0;
   out_8763841565953633667[28] = 0;
   out_8763841565953633667[29] = 0;
   out_8763841565953633667[30] = 0;
   out_8763841565953633667[31] = 0;
   out_8763841565953633667[32] = 0;
   out_8763841565953633667[33] = 1;
   out_8763841565953633667[34] = 0;
   out_8763841565953633667[35] = 0;
   out_8763841565953633667[36] = 0;
   out_8763841565953633667[37] = 0;
   out_8763841565953633667[38] = 0;
   out_8763841565953633667[39] = 0;
   out_8763841565953633667[40] = 0;
   out_8763841565953633667[41] = 0;
   out_8763841565953633667[42] = 0;
   out_8763841565953633667[43] = 0;
   out_8763841565953633667[44] = 0;
   out_8763841565953633667[45] = 0;
   out_8763841565953633667[46] = 0;
   out_8763841565953633667[47] = 0;
   out_8763841565953633667[48] = 0;
   out_8763841565953633667[49] = 0;
   out_8763841565953633667[50] = 0;
   out_8763841565953633667[51] = 0;
   out_8763841565953633667[52] = 0;
   out_8763841565953633667[53] = 0;
   out_8763841565953633667[54] = 0;
   out_8763841565953633667[55] = 0;
   out_8763841565953633667[56] = 1;
   out_8763841565953633667[57] = 0;
   out_8763841565953633667[58] = 0;
   out_8763841565953633667[59] = 0;
   out_8763841565953633667[60] = 0;
   out_8763841565953633667[61] = 0;
   out_8763841565953633667[62] = 0;
   out_8763841565953633667[63] = 0;
   out_8763841565953633667[64] = 0;
   out_8763841565953633667[65] = 0;
}
void h_33(double *state, double *unused, double *out_125438815012891861) {
   out_125438815012891861[0] = state[16];
   out_125438815012891861[1] = state[17];
   out_125438815012891861[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3406873092374043614) {
   out_3406873092374043614[0] = 0;
   out_3406873092374043614[1] = 0;
   out_3406873092374043614[2] = 0;
   out_3406873092374043614[3] = 0;
   out_3406873092374043614[4] = 0;
   out_3406873092374043614[5] = 0;
   out_3406873092374043614[6] = 0;
   out_3406873092374043614[7] = 0;
   out_3406873092374043614[8] = 0;
   out_3406873092374043614[9] = 0;
   out_3406873092374043614[10] = 0;
   out_3406873092374043614[11] = 0;
   out_3406873092374043614[12] = 0;
   out_3406873092374043614[13] = 0;
   out_3406873092374043614[14] = 0;
   out_3406873092374043614[15] = 0;
   out_3406873092374043614[16] = 1;
   out_3406873092374043614[17] = 0;
   out_3406873092374043614[18] = 0;
   out_3406873092374043614[19] = 0;
   out_3406873092374043614[20] = 0;
   out_3406873092374043614[21] = 0;
   out_3406873092374043614[22] = 0;
   out_3406873092374043614[23] = 0;
   out_3406873092374043614[24] = 0;
   out_3406873092374043614[25] = 0;
   out_3406873092374043614[26] = 0;
   out_3406873092374043614[27] = 0;
   out_3406873092374043614[28] = 0;
   out_3406873092374043614[29] = 0;
   out_3406873092374043614[30] = 0;
   out_3406873092374043614[31] = 0;
   out_3406873092374043614[32] = 0;
   out_3406873092374043614[33] = 0;
   out_3406873092374043614[34] = 0;
   out_3406873092374043614[35] = 0;
   out_3406873092374043614[36] = 0;
   out_3406873092374043614[37] = 0;
   out_3406873092374043614[38] = 0;
   out_3406873092374043614[39] = 1;
   out_3406873092374043614[40] = 0;
   out_3406873092374043614[41] = 0;
   out_3406873092374043614[42] = 0;
   out_3406873092374043614[43] = 0;
   out_3406873092374043614[44] = 0;
   out_3406873092374043614[45] = 0;
   out_3406873092374043614[46] = 0;
   out_3406873092374043614[47] = 0;
   out_3406873092374043614[48] = 0;
   out_3406873092374043614[49] = 0;
   out_3406873092374043614[50] = 0;
   out_3406873092374043614[51] = 0;
   out_3406873092374043614[52] = 0;
   out_3406873092374043614[53] = 0;
   out_3406873092374043614[54] = 0;
   out_3406873092374043614[55] = 0;
   out_3406873092374043614[56] = 0;
   out_3406873092374043614[57] = 0;
   out_3406873092374043614[58] = 0;
   out_3406873092374043614[59] = 0;
   out_3406873092374043614[60] = 0;
   out_3406873092374043614[61] = 0;
   out_3406873092374043614[62] = 1;
   out_3406873092374043614[63] = 0;
   out_3406873092374043614[64] = 0;
   out_3406873092374043614[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8234830301498350503) {
  H(in_vec, out_8234830301498350503);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9205728283257919471) {
  err_fun(nom_x, delta_x, out_9205728283257919471);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1121107328928305263) {
  inv_err_fun(nom_x, true_x, out_1121107328928305263);
}
void live_H_mod_fun(double *state, double *out_6630457861198022915) {
  H_mod_fun(state, out_6630457861198022915);
}
void live_f_fun(double *state, double dt, double *out_4594302555446211754) {
  f_fun(state,  dt, out_4594302555446211754);
}
void live_F_fun(double *state, double dt, double *out_3899290995433609093) {
  F_fun(state,  dt, out_3899290995433609093);
}
void live_h_4(double *state, double *unused, double *out_3495821887468815505) {
  h_4(state, unused, out_3495821887468815505);
}
void live_H_4(double *state, double *unused, double *out_8522651919324043022) {
  H_4(state, unused, out_8522651919324043022);
}
void live_h_9(double *state, double *unused, double *out_6629576861282118105) {
  h_9(state, unused, out_6629576861282118105);
}
void live_H_9(double *state, double *unused, double *out_8763841565953633667) {
  H_9(state, unused, out_8763841565953633667);
}
void live_h_10(double *state, double *unused, double *out_1782463083523657948) {
  h_10(state, unused, out_1782463083523657948);
}
void live_H_10(double *state, double *unused, double *out_7840508142764785759) {
  H_10(state, unused, out_7840508142764785759);
}
void live_h_12(double *state, double *unused, double *out_4602718504022440759) {
  h_12(state, unused, out_4602718504022440759);
}
void live_H_12(double *state, double *unused, double *out_4904635746353546799) {
  H_12(state, unused, out_4904635746353546799);
}
void live_h_31(double *state, double *unused, double *out_1341934715987041353) {
  h_31(state, unused, out_1341934715987041353);
}
void live_H_31(double *state, double *unused, double *out_2159072714028533090) {
  H_31(state, unused, out_2159072714028533090);
}
void live_h_32(double *state, double *unused, double *out_2604619187550527596) {
  h_32(state, unused, out_2604619187550527596);
}
void live_H_32(double *state, double *unused, double *out_624585450389884503) {
  H_32(state, unused, out_624585450389884503);
}
void live_h_13(double *state, double *unused, double *out_6859828326726688004) {
  h_13(state, unused, out_6859828326726688004);
}
void live_H_13(double *state, double *unused, double *out_5851007935052113609) {
  H_13(state, unused, out_5851007935052113609);
}
void live_h_14(double *state, double *unused, double *out_6629576861282118105) {
  h_14(state, unused, out_6629576861282118105);
}
void live_H_14(double *state, double *unused, double *out_8763841565953633667) {
  H_14(state, unused, out_8763841565953633667);
}
void live_h_33(double *state, double *unused, double *out_125438815012891861) {
  h_33(state, unused, out_125438815012891861);
}
void live_H_33(double *state, double *unused, double *out_3406873092374043614) {
  H_33(state, unused, out_3406873092374043614);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
